{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"source/assets/images/sample.jpg","path":"assets/images/sample.jpg","modified":0,"renderable":0},{"_id":"themes/hueman/source/css/style.styl","path":"css/style.styl","modified":0,"renderable":1},{"_id":"themes/hueman/source/js/insight.js","path":"js/insight.js","modified":0,"renderable":1},{"_id":"themes/hueman/source/js/main.js","path":"js/main.js","modified":0,"renderable":1},{"_id":"source/assets/images/florence/florence0.jpeg","path":"assets/images/florence/florence0.jpeg","modified":0,"renderable":0},{"_id":"source/assets/images/linear-algebra/102.png","path":"assets/images/linear-algebra/102.png","modified":0,"renderable":0},{"_id":"source/assets/images/linear-algebra/101.jpeg","path":"assets/images/linear-algebra/101.jpeg","modified":0,"renderable":0},{"_id":"source/assets/images/linear-algebra/104.png","path":"assets/images/linear-algebra/104.png","modified":0,"renderable":0},{"_id":"source/assets/images/linear-algebra/103.png","path":"assets/images/linear-algebra/103.png","modified":0,"renderable":0},{"_id":"source/assets/images/linear-algebra/105.png","path":"assets/images/linear-algebra/105.png","modified":0,"renderable":0},{"_id":"source/assets/images/linear-algebra/107.png","path":"assets/images/linear-algebra/107.png","modified":0,"renderable":0},{"_id":"source/assets/images/linear-algebra/108.png","path":"assets/images/linear-algebra/108.png","modified":0,"renderable":0},{"_id":"source/assets/images/use-carthage-for-the-first-time/0.png","path":"assets/images/use-carthage-for-the-first-time/0.png","modified":0,"renderable":0},{"_id":"source/assets/images/use-carthage-for-the-first-time/1.png","path":"assets/images/use-carthage-for-the-first-time/1.png","modified":0,"renderable":0},{"_id":"source/assets/images/use-carthage-for-the-first-time/2.png","path":"assets/images/use-carthage-for-the-first-time/2.png","modified":0,"renderable":0},{"_id":"source/assets/images/use-carthage-for-the-first-time/3.png","path":"assets/images/use-carthage-for-the-first-time/3.png","modified":0,"renderable":0},{"_id":"themes/hueman/source/css/images/logo-header.png","path":"css/images/logo-header.png","modified":0,"renderable":1},{"_id":"themes/hueman/source/css/images/opacity-10.png","path":"css/images/opacity-10.png","modified":0,"renderable":1},{"_id":"themes/hueman/source/css/images/thumb-default-small.png","path":"css/images/thumb-default-small.png","modified":0,"renderable":1},{"_id":"themes/hueman/source/css/images/s-left.png","path":"css/images/s-left.png","modified":0,"renderable":1},{"_id":"themes/hueman/source/css/images/thumb-default.png","path":"css/images/thumb-default.png","modified":0,"renderable":1},{"_id":"themes/hueman/source/css/images/tomfriwel-blog.png","path":"css/images/tomfriwel-blog.png","modified":0,"renderable":1},{"_id":"themes/hueman/source/libs/justified-gallery/justifiedGallery.min.css","path":"libs/justified-gallery/justifiedGallery.min.css","modified":0,"renderable":1},{"_id":"themes/hueman/source/libs/justified-gallery/jquery.justifiedGallery.min.js","path":"libs/justified-gallery/jquery.justifiedGallery.min.js","modified":0,"renderable":1},{"_id":"themes/hueman/source/libs/source-code-pro/styles.css","path":"libs/source-code-pro/styles.css","modified":0,"renderable":1},{"_id":"themes/hueman/source/libs/titillium-web/styles.css","path":"libs/titillium-web/styles.css","modified":0,"renderable":1},{"_id":"themes/hueman/source/libs/font-awesome/css/font-awesome.css","path":"libs/font-awesome/css/font-awesome.css","modified":0,"renderable":1},{"_id":"themes/hueman/source/libs/font-awesome/css/font-awesome.min.css","path":"libs/font-awesome/css/font-awesome.min.css","modified":0,"renderable":1},{"_id":"themes/hueman/source/libs/lightgallery/css/lg-fb-comment-box.css","path":"libs/lightgallery/css/lg-fb-comment-box.css","modified":0,"renderable":1},{"_id":"themes/hueman/source/libs/lightgallery/css/lg-fb-comment-box.css.map","path":"libs/lightgallery/css/lg-fb-comment-box.css.map","modified":0,"renderable":1},{"_id":"themes/hueman/source/libs/lightgallery/css/lg-fb-comment-box.min.css","path":"libs/lightgallery/css/lg-fb-comment-box.min.css","modified":0,"renderable":1},{"_id":"themes/hueman/source/libs/lightgallery/css/lg-transitions.css.map","path":"libs/lightgallery/css/lg-transitions.css.map","modified":0,"renderable":1},{"_id":"themes/hueman/source/libs/lightgallery/css/lg-transitions.css","path":"libs/lightgallery/css/lg-transitions.css","modified":0,"renderable":1},{"_id":"themes/hueman/source/libs/lightgallery/css/lightgallery.css","path":"libs/lightgallery/css/lightgallery.css","modified":0,"renderable":1},{"_id":"themes/hueman/source/libs/lightgallery/css/lg-transitions.min.css","path":"libs/lightgallery/css/lg-transitions.min.css","modified":0,"renderable":1},{"_id":"themes/hueman/source/libs/lightgallery/css/lightgallery.css.map","path":"libs/lightgallery/css/lightgallery.css.map","modified":0,"renderable":1},{"_id":"themes/hueman/source/libs/lightgallery/css/lightgallery.min.css","path":"libs/lightgallery/css/lightgallery.min.css","modified":0,"renderable":1},{"_id":"themes/hueman/source/libs/lightgallery/fonts/lg.eot","path":"libs/lightgallery/fonts/lg.eot","modified":0,"renderable":1},{"_id":"themes/hueman/source/libs/lightgallery/fonts/lg.svg","path":"libs/lightgallery/fonts/lg.svg","modified":0,"renderable":1},{"_id":"themes/hueman/source/libs/lightgallery/fonts/lg.ttf","path":"libs/lightgallery/fonts/lg.ttf","modified":0,"renderable":1},{"_id":"themes/hueman/source/libs/lightgallery/fonts/lg.woff","path":"libs/lightgallery/fonts/lg.woff","modified":0,"renderable":1},{"_id":"themes/hueman/source/libs/lightgallery/img/loading.gif","path":"libs/lightgallery/img/loading.gif","modified":0,"renderable":1},{"_id":"themes/hueman/source/libs/lightgallery/img/video-play.png","path":"libs/lightgallery/img/video-play.png","modified":0,"renderable":1},{"_id":"themes/hueman/source/libs/lightgallery/img/vimeo-play.png","path":"libs/lightgallery/img/vimeo-play.png","modified":0,"renderable":1},{"_id":"themes/hueman/source/libs/lightgallery/img/youtube-play.png","path":"libs/lightgallery/img/youtube-play.png","modified":0,"renderable":1},{"_id":"themes/hueman/source/libs/lightgallery/js/lg-autoplay.js","path":"libs/lightgallery/js/lg-autoplay.js","modified":0,"renderable":1},{"_id":"themes/hueman/source/libs/lightgallery/js/lg-fullscreen.js","path":"libs/lightgallery/js/lg-fullscreen.js","modified":0,"renderable":1},{"_id":"themes/hueman/source/libs/lightgallery/js/lg-autoplay.min.js","path":"libs/lightgallery/js/lg-autoplay.min.js","modified":0,"renderable":1},{"_id":"themes/hueman/source/libs/lightgallery/js/lg-hash.js","path":"libs/lightgallery/js/lg-hash.js","modified":0,"renderable":1},{"_id":"themes/hueman/source/libs/lightgallery/js/lg-fullscreen.min.js","path":"libs/lightgallery/js/lg-fullscreen.min.js","modified":0,"renderable":1},{"_id":"themes/hueman/source/libs/lightgallery/js/lg-hash.min.js","path":"libs/lightgallery/js/lg-hash.min.js","modified":0,"renderable":1},{"_id":"themes/hueman/source/libs/lightgallery/js/lg-pager.js","path":"libs/lightgallery/js/lg-pager.js","modified":0,"renderable":1},{"_id":"themes/hueman/source/libs/lightgallery/js/lg-pager.min.js","path":"libs/lightgallery/js/lg-pager.min.js","modified":0,"renderable":1},{"_id":"themes/hueman/source/libs/lightgallery/js/lg-share.js","path":"libs/lightgallery/js/lg-share.js","modified":0,"renderable":1},{"_id":"themes/hueman/source/libs/lightgallery/js/lg-share.min.js","path":"libs/lightgallery/js/lg-share.min.js","modified":0,"renderable":1},{"_id":"themes/hueman/source/libs/lightgallery/js/lg-thumbnail.min.js","path":"libs/lightgallery/js/lg-thumbnail.min.js","modified":0,"renderable":1},{"_id":"themes/hueman/source/libs/lightgallery/js/lg-thumbnail.js","path":"libs/lightgallery/js/lg-thumbnail.js","modified":0,"renderable":1},{"_id":"themes/hueman/source/libs/lightgallery/js/lg-video.min.js","path":"libs/lightgallery/js/lg-video.min.js","modified":0,"renderable":1},{"_id":"themes/hueman/source/libs/lightgallery/js/lg-video.js","path":"libs/lightgallery/js/lg-video.js","modified":0,"renderable":1},{"_id":"themes/hueman/source/libs/lightgallery/js/lg-zoom.min.js","path":"libs/lightgallery/js/lg-zoom.min.js","modified":0,"renderable":1},{"_id":"themes/hueman/source/libs/lightgallery/js/lg-zoom.js","path":"libs/lightgallery/js/lg-zoom.js","modified":0,"renderable":1},{"_id":"themes/hueman/source/libs/source-code-pro/fonts/mrl8jkM18OlOQN8JLgasD9V_2ngZ8dMf8fLgjYEouxg.woff2","path":"libs/source-code-pro/fonts/mrl8jkM18OlOQN8JLgasD9V_2ngZ8dMf8fLgjYEouxg.woff2","modified":0,"renderable":1},{"_id":"themes/hueman/source/libs/source-code-pro/fonts/mrl8jkM18OlOQN8JLgasDy2Q8seG17bfDXYR_jUsrzg.woff2","path":"libs/source-code-pro/fonts/mrl8jkM18OlOQN8JLgasDy2Q8seG17bfDXYR_jUsrzg.woff2","modified":0,"renderable":1},{"_id":"themes/hueman/source/libs/lightgallery/js/lightgallery.min.js","path":"libs/lightgallery/js/lightgallery.min.js","modified":0,"renderable":1},{"_id":"themes/hueman/source/libs/lightgallery/js/lightgallery.js","path":"libs/lightgallery/js/lightgallery.js","modified":0,"renderable":1},{"_id":"themes/hueman/source/libs/titillium-web/fonts/7XUFZ5tgS-tD6QamInJTcSo_WB_cotcEMUw1LsIE8mM.woff2","path":"libs/titillium-web/fonts/7XUFZ5tgS-tD6QamInJTcSo_WB_cotcEMUw1LsIE8mM.woff2","modified":0,"renderable":1},{"_id":"themes/hueman/source/libs/titillium-web/fonts/anMUvcNT0H1YN4FII8wpr4-67659ICLY8bMrYhtePPA.woff2","path":"libs/titillium-web/fonts/anMUvcNT0H1YN4FII8wpr4-67659ICLY8bMrYhtePPA.woff2","modified":0,"renderable":1},{"_id":"themes/hueman/source/libs/titillium-web/fonts/7XUFZ5tgS-tD6QamInJTcZSnX671uNZIV63UdXh3Mg0.woff2","path":"libs/titillium-web/fonts/7XUFZ5tgS-tD6QamInJTcZSnX671uNZIV63UdXh3Mg0.woff2","modified":0,"renderable":1},{"_id":"themes/hueman/source/libs/titillium-web/fonts/anMUvcNT0H1YN4FII8wpr46gJz9aNFrmnwBdd69aqzY.woff2","path":"libs/titillium-web/fonts/anMUvcNT0H1YN4FII8wpr46gJz9aNFrmnwBdd69aqzY.woff2","modified":0,"renderable":1},{"_id":"themes/hueman/source/libs/titillium-web/fonts/anMUvcNT0H1YN4FII8wpr_SNRT0fZ5CX-AqRkMYgJJo.woff2","path":"libs/titillium-web/fonts/anMUvcNT0H1YN4FII8wpr_SNRT0fZ5CX-AqRkMYgJJo.woff2","modified":0,"renderable":1},{"_id":"themes/hueman/source/libs/titillium-web/fonts/anMUvcNT0H1YN4FII8wpr9INifKjd1RJ3NxxEi9Cy2w.woff2","path":"libs/titillium-web/fonts/anMUvcNT0H1YN4FII8wpr9INifKjd1RJ3NxxEi9Cy2w.woff2","modified":0,"renderable":1},{"_id":"source/assets/images/ps/stitch0.jpg","path":"assets/images/ps/stitch0.jpg","modified":0,"renderable":0},{"_id":"themes/hueman/source/libs/font-awesome/fonts/FontAwesome.otf","path":"libs/font-awesome/fonts/FontAwesome.otf","modified":0,"renderable":1},{"_id":"themes/hueman/source/libs/font-awesome/fonts/fontawesome-webfont.eot","path":"libs/font-awesome/fonts/fontawesome-webfont.eot","modified":0,"renderable":1},{"_id":"themes/hueman/source/libs/font-awesome/fonts/fontawesome-webfont.woff2","path":"libs/font-awesome/fonts/fontawesome-webfont.woff2","modified":0,"renderable":1},{"_id":"themes/hueman/source/libs/font-awesome/fonts/fontawesome-webfont.woff","path":"libs/font-awesome/fonts/fontawesome-webfont.woff","modified":0,"renderable":1},{"_id":"themes/hueman/source/libs/jquery/2.0.3/jquery.min.js","path":"libs/jquery/2.0.3/jquery.min.js","modified":0,"renderable":1},{"_id":"source/assets/images/iphone-take-photo/blur-tip.png","path":"assets/images/iphone-take-photo/blur-tip.png","modified":0,"renderable":0},{"_id":"themes/hueman/source/libs/font-awesome/fonts/fontawesome-webfont.ttf","path":"libs/font-awesome/fonts/fontawesome-webfont.ttf","modified":0,"renderable":1},{"_id":"source/assets/images/iphone-take-photo/blur-class.jpg","path":"assets/images/iphone-take-photo/blur-class.jpg","modified":0,"renderable":0},{"_id":"themes/hueman/source/libs/font-awesome/fonts/fontawesome-webfont.svg","path":"libs/font-awesome/fonts/fontawesome-webfont.svg","modified":0,"renderable":1},{"_id":"source/assets/images/linear-algebra/106.gif","path":"assets/images/linear-algebra/106.gif","modified":0,"renderable":0},{"_id":"source/assets/images/iphone-take-photo/building.jpg","path":"assets/images/iphone-take-photo/building.jpg","modified":0,"renderable":0},{"_id":"source/assets/images/iphone-take-photo/building-corner.jpg","path":"assets/images/iphone-take-photo/building-corner.jpg","modified":0,"renderable":0}],"Cache":[{"_id":"themes/hueman/.gitignore","hash":"cd089ae45ce870c45e434019e8f1ed4f066cd425","modified":1508382564000},{"_id":"themes/hueman/README.md","hash":"defb1f667677e1fd13b3a4799a6c70eae621f796","modified":1508382564000},{"_id":"themes/hueman/LICENSE","hash":"3975b7883caeb33f61fada7c0ef4add7ab189849","modified":1508382564000},{"_id":"themes/hueman/_config.yml","hash":"298b760a0cf9ee95f497dd714ebd30ce0fa3a5ae","modified":1526568484939},{"_id":"themes/hueman/package.json","hash":"d4ff853568e592265c2c9a21ce358f15babec14a","modified":1508382564000},{"_id":"source/_drafts/2018-03-19-Quality-of-game.md","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1521422495982},{"_id":"source/_drafts/.DS_Store","hash":"df2fbeb1400acda0909a32c1cf6bf492f1121e07","modified":1521121126838},{"_id":"source/_drafts/\bmac-simple-video-production.md","hash":"97ce0221c1c91cb74eb7a53a41307a1e34f8d9e1","modified":1522640208485},{"_id":"source/_drafts/2018-03-21-learn-linear-algebra-by-programming-2.md","hash":"84c740c02c20e11d390a427ac88f835e9c0ad290","modified":1523107901910},{"_id":"source/_drafts/About-Cooperation.md","hash":"9638aab0b882a29c75177266fcc57c01ae1d1e51","modified":1521704363301},{"_id":"source/_drafts/Apple-develops-third-party-library-management-tools.md","hash":"c0b53cfd4c026188b8d09fbcf652966355bf855f","modified":1525673127607},{"_id":"source/_drafts/Create-your-own-blog-via-Github.md","hash":"bd2178b73afa4e027ec1750d1b4c0d0631c1dcd7","modified":1521121132834},{"_id":"source/_drafts/about-computer-do.md","hash":"cd36df19d21a9b2ea707d2486084d963dbb22710","modified":1524622462413},{"_id":"source/_drafts/PS-Picture-Stitching.md","hash":"063da7b72cc8ea3332834c58b23c9a1e8cd97f33","modified":1526574533973},{"_id":"source/_drafts/iphone-ip6.md","hash":"d6e2ff6c1b1dbead3c97b115dc54d3f9452d242c","modified":1522583219000},{"_id":"source/_drafts/iphone-take-photo.md","hash":"96575ded24f5a80d60ca2476a156ba4796f72ea2","modified":1526574524356},{"_id":"source/_drafts/macOS-app-development.md","hash":"12cf7737f6ccfd59028302f448b3c674a5084880","modified":1525335673579},{"_id":"source/_drafts/wechat-miniapp-verification-code-input.md","hash":"69c1f787c9146b47f3b7cf3972faa3c518ac8254","modified":1526016027596},{"_id":"source/about/index.md","hash":"a64d31533028f4315c59652610c7e1a33802db37","modified":1526574707985},{"_id":"source/_posts/.DS_Store","hash":"df2fbeb1400acda0909a32c1cf6bf492f1121e07","modified":1521106364762},{"_id":"source/_posts/2018-03-11-learn-basic-knowledge-by-programming.md","hash":"1e6edb464d3fc410d62436030222a8bbc845bac6","modified":1521604196848},{"_id":"source/_posts/2018-03-12-Three-Billboards-Outside-Ebbing,-Missouri.md","hash":"3e08602430cc6c9d7cdcbf05a3739eeed174fc19","modified":1521604845934},{"_id":"source/_posts/2018-03-21-learn-linear-algebra-by-programming-1.md","hash":"db9479a5dd8688db5d542dd6f590cf35363556c2","modified":1526575129401},{"_id":"source/_posts/2018-03-22-develop-wechat-group-miniprogram-back-end.md","hash":"3749fa125be9b2311cae53c4545cf70cf26d3dba","modified":1526574059641},{"_id":"source/_posts/2018-04-09-Florence.md","hash":"26ad493acf6fa3d813288165e92968be417b400c","modified":1526574553888},{"_id":"source/_posts/2018-04-23-about-learning.md","hash":"f96ebaf3303b5e05f905fd5b66fddcd6eefb83fd","modified":1524811448978},{"_id":"source/_posts/2018-03-22-develop-wechat-group-miniprogram-front-end.md","hash":"c5e7ceaa90fc35a300461f7178360ca743cb12bc","modified":1526574084399},{"_id":"source/_posts/2018-05-05-small-target-2018.md","hash":"d7fb04467672fca069c042a83bb3832212b7491d","modified":1525520618676},{"_id":"source/_posts/2018-04-25-the-idea-of-finding-a-solution.md","hash":"56b663b257674cd9213309128b23ba35d22f1060","modified":1526574128246},{"_id":"source/_posts/2018-05-07-github-ssh-error-after-change-github-account-email.md","hash":"81dece8c1bc00710507a6b09a7191153120398f5","modified":1525921940822},{"_id":"source/_posts/2018-05-07-use-carthage-for-the-first-time.md","hash":"f6041131b3421c5b81b92eeb57d237c45c5ffdc5","modified":1526574577533},{"_id":"themes/hueman/.github/ISSUE_TEMPLATE.md","hash":"1ce6c6330e2e37fcf4764d69ed2c43670e30eb23","modified":1508382564000},{"_id":"themes/hueman/languages/ca.yml","hash":"d082e6f9e7615556b8f6c5f1286f0db8a0db195e","modified":1508382564000},{"_id":"themes/hueman/languages/es.yml","hash":"97191c8ab7ce5334369d96f6e53a6d365a2057b1","modified":1508382564000},{"_id":"themes/hueman/languages/en.yml","hash":"3416fee358d869e6abf0cca695edf8386349053f","modified":1508382564000},{"_id":"themes/hueman/languages/fr.yml","hash":"0624f8f7532f1312caaf4f8d498aab69c80a92f2","modified":1508382564000},{"_id":"themes/hueman/languages/hu.yml","hash":"5dd987ad5f33748bcba1d9a7eb78c1800b7c8bed","modified":1508382564000},{"_id":"themes/hueman/languages/ja.yml","hash":"56f3af0bf5cc56f9f7bf24fe5cb881a6a1b34e7b","modified":1508382564000},{"_id":"themes/hueman/languages/ko.yml","hash":"81ea44ecda87a4398bb6d88a3b02f6b73c9a1637","modified":1508382564000},{"_id":"themes/hueman/languages/id.yml","hash":"03e45cf88b69e657a340362e18668e443ddaae47","modified":1508382564000},{"_id":"themes/hueman/languages/ru.yml","hash":"99f111b39f867d421ff4cb859dd1deb26caa382e","modified":1508382564000},{"_id":"themes/hueman/languages/tr.yml","hash":"003cb50200eba865d57e5c53925636f1a5ec0a70","modified":1508382564000},{"_id":"themes/hueman/languages/pt-BR.yml","hash":"6f9539673e08d66866bb210b78863ef68023f991","modified":1508382564000},{"_id":"themes/hueman/languages/vi.yml","hash":"edeb4492a08af458fe958dc4d48101c96750b159","modified":1508382564000},{"_id":"themes/hueman/languages/zh-CN.yml","hash":"05737aa022a007b97034a9d9fc80e606d5a25598","modified":1508382564000},{"_id":"themes/hueman/layout/archive.ejs","hash":"8785477232088e09a75da88a0cdcb32fedf4f81f","modified":1508382564000},{"_id":"themes/hueman/languages/zh-TW.yml","hash":"7cebb92ebcf9afb67f641192d69133a379fec1f1","modified":1508382564000},{"_id":"themes/hueman/layout/index.ejs","hash":"8785477232088e09a75da88a0cdcb32fedf4f81f","modified":1508382564000},{"_id":"themes/hueman/layout/category.ejs","hash":"5096d3f019098d9940429152295f6d6161d887ba","modified":1508382564000},{"_id":"themes/hueman/layout/layout.ejs","hash":"35fd7fe6d4e2d313246a0a31446a597714facdea","modified":1508382564000},{"_id":"themes/hueman/layout/page.ejs","hash":"5afddd6a45fa72beacec8d760487dfe8a667e622","modified":1508382564000},{"_id":"themes/hueman/layout/post.ejs","hash":"5afddd6a45fa72beacec8d760487dfe8a667e622","modified":1508382564000},{"_id":"themes/hueman/layout/tag.ejs","hash":"8785477232088e09a75da88a0cdcb32fedf4f81f","modified":1508382564000},{"_id":"themes/hueman/scripts/excerpt.js","hash":"630f17f2647b2ba5b207dba36fb3c6587a3aa04f","modified":1508382564000},{"_id":"themes/hueman/scripts/thumbnail.js","hash":"e78b1b978fa1acad5409afc685d13f669e80b24f","modified":1508382564000},{"_id":"themes/hueman/scripts/meta.js","hash":"1993754a2f3dffa283fa0538eb8f056385b69ad4","modified":1508382564000},{"_id":"source/assets/images/.DS_Store","hash":"9ac7f79e8d9a1f3642b75eabaead619e0939ea39","modified":1525674249819},{"_id":"source/assets/images/sample.jpg","hash":"0ccf3619936f2ddec8796296b68fc866c11af264","modified":1522374671937},{"_id":"source/assets/js/md5.js","hash":"b626de9825dac2e8b7aa08e1a84724e20d260acf","modified":1526566711924},{"_id":"themes/hueman/layout/comment/counter.ejs","hash":"237fe2f89c128fe4f7c1edb9187f504f42cb5e74","modified":1508382564000},{"_id":"themes/hueman/layout/comment/disqus.ejs","hash":"83158f5b00f95acf847524fd7ffeb5aab25add78","modified":1508382564000},{"_id":"themes/hueman/layout/comment/changyan.ejs","hash":"15b1b871425a4c1b57ef4eb40a35df8d02c3b6d2","modified":1508382564000},{"_id":"themes/hueman/layout/comment/duoshuo.ejs","hash":"ce46d7410a99b57704da32e9d09071cef6c9fa93","modified":1525771631852},{"_id":"themes/hueman/layout/comment/gitalk.ejs","hash":"c23be95f0955a519697981208b74e11ed2e963a2","modified":1526574448673},{"_id":"themes/hueman/layout/comment/facebook.ejs","hash":"5ee16430a4435c2fead0275ff83fc98092d73d4c","modified":1508382564000},{"_id":"themes/hueman/layout/comment/isso.ejs","hash":"4f8b81ff5bb418ec11ce080d515f247bfe436014","modified":1508382564000},{"_id":"themes/hueman/layout/comment/index.ejs","hash":"d7bfac7ce5c8bf9eaaad8cce05aea59231f30dac","modified":1526568464474},{"_id":"themes/hueman/layout/comment/valine.ejs","hash":"35bd96024609e7b3b23a46887ff5721f141e0d0e","modified":1508382564000},{"_id":"themes/hueman/layout/comment/scripts.ejs","hash":"8131b4fc6125fbbf9c24e82bfeedaa6b29947467","modified":1526568471401},{"_id":"themes/hueman/layout/comment/youyan.ejs","hash":"6fe807992832939caf6c3e7651d052df9520d88e","modified":1508382564000},{"_id":"themes/hueman/layout/common/article.ejs","hash":"64205e442e5094ac012ab62ad3617b79856541de","modified":1526575350770},{"_id":"themes/hueman/layout/common/archive.ejs","hash":"bf909e4d6798374daf114cf41540f2bd300408d9","modified":1508382564000},{"_id":"themes/hueman/layout/common/footer.ejs","hash":"4d01bd3d28820936b0d09529b60e9d6930afc9fe","modified":1525771636135},{"_id":"themes/hueman/layout/common/content-title.ejs","hash":"43288ebc0ea30d80e6d7df56f2e7ed5d7935ed1a","modified":1508382564000},{"_id":"themes/hueman/layout/common/head.ejs","hash":"5350631470682a54aba9863d0c6e190689a31ec9","modified":1508382564000},{"_id":"themes/hueman/layout/common/header.ejs","hash":"4dbb53393c3ebef01088592babf135d2f6559f47","modified":1525771316101},{"_id":"themes/hueman/layout/common/scripts.ejs","hash":"d9da17614340d28e301ea00773ceb5fb3e8e3bd9","modified":1526575339555},{"_id":"themes/hueman/layout/common/image.ejs","hash":"1798a16d2f0bba6e1f605c582028081ffd273dcd","modified":1526573855383},{"_id":"themes/hueman/layout/common/summary.ejs","hash":"42d6f99906ae96a6d00ee9a727405e47ec5e7c81","modified":1525760427388},{"_id":"themes/hueman/layout/common/sidebar.ejs","hash":"745666ee78b714aa34d8774a005a0598261ec349","modified":1508382564000},{"_id":"themes/hueman/layout/common/thumbnail.ejs","hash":"52733c5393b73db5e3d689c19d3d01038b64ae2f","modified":1526574914415},{"_id":"themes/hueman/layout/plugin/baidu-analytics.ejs","hash":"d99089976258050666208f29000f84496fe1029c","modified":1508382564000},{"_id":"themes/hueman/layout/plugin/google-analytics.ejs","hash":"349f08b6521a16e79046b1f94f04317ac74f556e","modified":1508382564000},{"_id":"themes/hueman/layout/search/index.ejs","hash":"1a6a742727018567f60f8815be0bff5a45294ce5","modified":1508382564000},{"_id":"themes/hueman/layout/search/baidu.ejs","hash":"bcffa60f2d1750ac7499e928f538176e3804393b","modified":1508382564000},{"_id":"themes/hueman/layout/plugin/scripts.ejs","hash":"05c255e6908c0b9d4df7fd35469776eee667fae0","modified":1508382564000},{"_id":"themes/hueman/layout/search/insight.ejs","hash":"130fe3d33ac71da0b50f7fee6a87979f30938a1b","modified":1508382564000},{"_id":"themes/hueman/layout/search/swiftype.ejs","hash":"379e66d2c13526e72e4120c443f95fccf4edef71","modified":1508382564000},{"_id":"themes/hueman/layout/share/addtoany.ejs","hash":"ac180c4c84b73a04d61b17e7dc18c257e20bf59f","modified":1525771649671},{"_id":"themes/hueman/layout/share/default.ejs","hash":"7492f5b375a56c67a1a1a4f6b893e37f49dc86dc","modified":1508382564000},{"_id":"themes/hueman/layout/share/bdshare.ejs","hash":"a1e772c5a6f174d585b0c1e574058f75dc8e2898","modified":1525771653796},{"_id":"themes/hueman/layout/share/index.ejs","hash":"029e91aace5a4c0d8387fc7744c477ccc6865c30","modified":1508382564000},{"_id":"themes/hueman/layout/share/jiathis.ejs","hash":"21ebaa51e828cba2cefbeeaccb01514643565755","modified":1508382564000},{"_id":"themes/hueman/layout/widget/archive.ejs","hash":"c4d303eaaa23768e52ead324c422a8900b1fe448","modified":1508382564000},{"_id":"themes/hueman/layout/widget/links.ejs","hash":"97dab84d6336a4c926ddc288d5a6c264f54c50c3","modified":1508382564000},{"_id":"themes/hueman/layout/widget/category.ejs","hash":"2d705df76f2eef7d695a971266fc104e89ca6bcd","modified":1508382564000},{"_id":"themes/hueman/layout/widget/recent_posts.ejs","hash":"16a2bd28bdf520616202670a18c6cc93d1dd3f54","modified":1508382564000},{"_id":"themes/hueman/source/css/.DS_Store","hash":"1471a7d6eae03ff1e4137d1abf75533710a72d08","modified":1525844466640},{"_id":"themes/hueman/layout/widget/sticky_posts.ejs","hash":"6bad4126bed652f5f9e93027cbe3ee03b67b034a","modified":1508382564000},{"_id":"themes/hueman/layout/widget/tag.ejs","hash":"bfbc63e675439dcdc35e07dce6948e41500b649c","modified":1508382564000},{"_id":"themes/hueman/source/css/_extend.styl","hash":"c2160499dc89c524ff17cd2e3fcbb8df83ebca1a","modified":1508382564000},{"_id":"themes/hueman/layout/widget/tagcloud.ejs","hash":"3ecb048d6098bc3953043a4c25f1f7c4b23397cf","modified":1508382564000},{"_id":"themes/hueman/source/css/_variables.styl","hash":"ce03de3658b55b5f90bb4dd18679be18ec38acaa","modified":1508382564000},{"_id":"themes/hueman/source/css/_responsive.styl","hash":"4addaf2f203563accf0479850eda1ab4f4a4c34b","modified":1508382564000},{"_id":"themes/hueman/source/css/style.styl","hash":"b76d43839bda01ee791e71093f009ad2c8b093b2","modified":1508382564000},{"_id":"themes/hueman/source/js/insight.js","hash":"6ee84c42c2b230ff9e9bf605a444bd671d44f9e3","modified":1508382564000},{"_id":"themes/hueman/source/js/main.js","hash":"a15519ae8a397557cc594e8fb2f34fa9468f70fa","modified":1508382564000},{"_id":"source/assets/images/florence/florence0.jpeg","hash":"4cd134bf086c00f1b4e62a7bdadb7ded99ad5b8d","modified":1523262537857},{"_id":"source/assets/images/linear-algebra/102.png","hash":"41f961647f2dd4d3023ab1c9b9d98fc1e6c4abe3","modified":1522374647872},{"_id":"source/assets/images/linear-algebra/101.jpeg","hash":"212c76f5032e212ec11ceeb04e2f2cc90a131e2d","modified":1522374648041},{"_id":"source/assets/images/linear-algebra/104.png","hash":"80f662b50ef41fe4539db6296d7a77f676807f7c","modified":1522374649988},{"_id":"source/assets/images/linear-algebra/103.png","hash":"ed8142aac3db0a299e55d2637c51a5af1fcd1d20","modified":1522374652817},{"_id":"source/assets/images/linear-algebra/105.png","hash":"878627d3e29d3f3190825b2426fc9687a5ed84a0","modified":1522374650959},{"_id":"source/assets/images/linear-algebra/107.png","hash":"b6d9fd1d948cb62a4b47105c2e5b22916af450b0","modified":1522374651375},{"_id":"source/assets/images/linear-algebra/108.png","hash":"735be022531eb4e3457c0534d1b4cbbeb03a71f2","modified":1522374651318},{"_id":"source/assets/images/use-carthage-for-the-first-time/0.png","hash":"07878c5af4e04671f711fd044ae6e5d2a3241912","modified":1525674280253},{"_id":"source/assets/images/use-carthage-for-the-first-time/1.png","hash":"8db048fe0c217326e7978e1ca695e6a62af73475","modified":1525674273019},{"_id":"source/assets/images/use-carthage-for-the-first-time/2.png","hash":"66c285e15172f596620bcd115be8e42eb0c48968","modified":1525674277173},{"_id":"source/assets/images/use-carthage-for-the-first-time/3.png","hash":"37ea321e3c50c9a384a03b2fc78f0b5d70f4f79d","modified":1525676676126},{"_id":"themes/hueman/layout/common/post/gallery.ejs","hash":"659f019761116313169148ec61773e7b84abb739","modified":1508382564000},{"_id":"themes/hueman/layout/common/post/date.ejs","hash":"198f75157a776b3e05eeb5da85b14a42027bd524","modified":1508382564000},{"_id":"themes/hueman/layout/common/post/nav.ejs","hash":"c5f41ebf451cff39eaf116096604ce706a175767","modified":1508382564000},{"_id":"themes/hueman/layout/common/post/title.ejs","hash":"6d19c61afb1f5f71c483be2ce37c6820ac2cd8b5","modified":1508382564000},{"_id":"themes/hueman/layout/common/post/tag.ejs","hash":"2e966216256321aa0c76fe1b9be689601c76ef31","modified":1508382564000},{"_id":"themes/hueman/source/css/_partial/archive.styl","hash":"5e5fb791ab54f0acf33850f586f7aa8cb2782f3a","modified":1508382564000},{"_id":"themes/hueman/source/css/_partial/article.styl","hash":"1c8f7d4c6f03e7229665855e184b57b3b40733d2","modified":1508382564000},{"_id":"themes/hueman/source/css/_partial/assets.styl","hash":"3d95417663c5a737f064a31ab4ef52bac7fda8df","modified":1508382564000},{"_id":"themes/hueman/source/css/_partial/comment.styl","hash":"d2de8f2c1cf6236ead0800c2a1566e01e7ae0b44","modified":1508382564000},{"_id":"themes/hueman/source/css/_partial/header.styl","hash":"f94fcb4e2cbda45c8dc910ddb8ff4f19ff0644bf","modified":1508382564000},{"_id":"themes/hueman/source/css/_partial/insight.styl","hash":"3d66323e7b75ad197e80d7189a8d9216e1e1ef2f","modified":1508382564000},{"_id":"themes/hueman/source/css/_partial/footer.styl","hash":"8dffae4ac6a57e506e378a9ce44b85a15a912cad","modified":1508382564000},{"_id":"themes/hueman/source/css/_partial/nav.styl","hash":"587a9c9d304ed83eb0331a1d16693461805311c3","modified":1508382564000},{"_id":"themes/hueman/source/css/_partial/sidebar.styl","hash":"1e6255f1bfa1a820f70d5cfdadf2caa726bf853d","modified":1508382564000},{"_id":"themes/hueman/source/css/_highlight/agate.styl","hash":"601eb70448a16b918df132f6fc41e891ae053653","modified":1508382564000},{"_id":"themes/hueman/source/css/_highlight/androidstudio.styl","hash":"65d09f1b0e81c6a182f549fd3de51e59823c97ae","modified":1508382564000},{"_id":"themes/hueman/source/css/_highlight/arduino-light.styl","hash":"15e8572585cd708221c513dea4bdd89d8fe56c10","modified":1508382564000},{"_id":"themes/hueman/source/css/_highlight/arta.styl","hash":"1a5accc115f41d1b669ed708ac6a29abac876599","modified":1508382564000},{"_id":"themes/hueman/source/css/_highlight/ascetic.styl","hash":"32cff3bef6fac3760fe78f203096477052a90552","modified":1508382564000},{"_id":"themes/hueman/source/css/_highlight/atelier-cave-light.styl","hash":"a5be0744a7ecf4a08f600ade4cfd555afc67bc15","modified":1508382564000},{"_id":"themes/hueman/source/css/_highlight/atelier-dune-dark.styl","hash":"df50a85a4b14c7ca6e825d665594b91229d0e460","modified":1508382564000},{"_id":"themes/hueman/source/css/_highlight/atelier-cave-dark.styl","hash":"bc647b2c1d971d7cc947aa1ed66e9fd115261921","modified":1508382564000},{"_id":"themes/hueman/source/css/_highlight/atelier-dune-light.styl","hash":"931435fbc6f974e8ce9e32722680035d248a9dc1","modified":1508382564000},{"_id":"themes/hueman/source/css/_highlight/atelier-estuary-dark.styl","hash":"d84382bc8298f96730757391d3e761b7e640f406","modified":1508382564000},{"_id":"themes/hueman/source/css/_highlight/atelier-estuary-light.styl","hash":"344276ca9b27e51d4c907f76afe5d13cf8e60bdf","modified":1508382564000},{"_id":"themes/hueman/source/css/_highlight/atelier-forest-dark.styl","hash":"57c154c6045a038dc7df0a25927853e10bf48c4a","modified":1508382564000},{"_id":"themes/hueman/source/css/_highlight/atelier-forest-light.styl","hash":"95228d9f2102fad425536aac44b80b2cba1f5950","modified":1508382564000},{"_id":"themes/hueman/source/css/_highlight/atelier-heath-light.styl","hash":"8c8c2e445abef85273be966d59770e9ced6aac21","modified":1508382564000},{"_id":"themes/hueman/source/css/_highlight/atelier-heath-dark.styl","hash":"b0cf13b2233e7bc38342032d2d7296591a4c2bcf","modified":1508382564000},{"_id":"themes/hueman/source/css/_highlight/atelier-lakeside-dark.styl","hash":"bb0a8c4ad0dd8e3e7de7122ddf268fc42aa94acb","modified":1508382564000},{"_id":"themes/hueman/source/css/_highlight/atelier-lakeside-light.styl","hash":"2c54cb9bdb259ae3b5b29f63ac2469ed34b08578","modified":1508382564000},{"_id":"themes/hueman/source/css/_highlight/atelier-plateau-dark.styl","hash":"09c64f1a7052aec9070c36c0431df25216afaea1","modified":1508382564000},{"_id":"themes/hueman/source/css/_highlight/atelier-plateau-light.styl","hash":"d1a05fdd1ededc9063d181ab25bad55a164aeb4a","modified":1508382564000},{"_id":"themes/hueman/source/css/_highlight/atelier-savanna-dark.styl","hash":"a16c919a1ccf2f845488078fb341381bec46b1f3","modified":1508382564000},{"_id":"themes/hueman/source/css/_highlight/atelier-seaside-dark.styl","hash":"ce233a101daea7124cbfcd34add43ccfe2e1e1c7","modified":1508382564000},{"_id":"themes/hueman/source/css/_highlight/atelier-savanna-light.styl","hash":"f8244c93711c7cb59dd79d2df966806b30d171ea","modified":1508382564000},{"_id":"themes/hueman/source/css/_highlight/atelier-seaside-light.styl","hash":"0597342da6e2d0c5bdcc7d42dabb07322b1a4177","modified":1508382564000},{"_id":"themes/hueman/source/css/_highlight/atelier-sulphurpool-dark.styl","hash":"414b0cfc142f70afe359c16450b651e28bf7325a","modified":1508382564000},{"_id":"themes/hueman/source/css/_highlight/atelier-sulphurpool-light.styl","hash":"efa52713efc468abeeb2b9299704371583b857de","modified":1508382564000},{"_id":"themes/hueman/source/css/_highlight/brown-paper.styl","hash":"c2326ba20a5020a66ca7895258d18833327d4334","modified":1508382564000},{"_id":"themes/hueman/source/css/_highlight/codepen-embed.styl","hash":"f4dcc84d8e39f9831a5efe80e51923fc3054feb0","modified":1508382564000},{"_id":"themes/hueman/source/css/_highlight/color-brewer.styl","hash":"2a439d6214430e2f45dd4939b4dfe1fe1a20aa0f","modified":1508382564000},{"_id":"themes/hueman/source/css/_highlight/dark.styl","hash":"71ce56d311cc2f3a605f6e2c495ccd7236878404","modified":1508382564000},{"_id":"themes/hueman/source/css/_highlight/brown-papersq.png","hash":"3a1332ede3a75a3d24f60b6ed69035b72da5e182","modified":1508382564000},{"_id":"themes/hueman/source/css/_highlight/darkula.styl","hash":"ad0d5728d21645039c9f199e7a56814170ed3bab","modified":1508382564000},{"_id":"themes/hueman/source/css/_highlight/docco.styl","hash":"b1c176378bb275f2e8caa759f36294e42d614bf1","modified":1508382564000},{"_id":"themes/hueman/source/css/_highlight/far.styl","hash":"d9928010ffe71e80b97a5afcba1a4975efdd7372","modified":1508382564000},{"_id":"themes/hueman/source/css/_highlight/foundation.styl","hash":"bf8ddc94b4ad995b8b8805b5a4cf95004553fdac","modified":1508382564000},{"_id":"themes/hueman/source/css/_highlight/github-gist.styl","hash":"48211a03d33e7f7ada0b261162bea06676155a71","modified":1508382564000},{"_id":"themes/hueman/source/css/_highlight/github.styl","hash":"3336aeba324c6d34a6fd41fef9b47bc598f7064c","modified":1508382564000},{"_id":"themes/hueman/source/css/_highlight/grayscale.styl","hash":"bf37d8b8d1e602126c51526f0cc28807440228ed","modified":1508382564000},{"_id":"themes/hueman/source/css/_highlight/googlecode.styl","hash":"bda816beee7b439814b514e6869dc678822be1bc","modified":1508382564000},{"_id":"themes/hueman/source/css/_highlight/highlightjs.styl","hash":"0e198b7a59191c7a39b641a4ddd22c948edb9358","modified":1508382564000},{"_id":"themes/hueman/source/css/_highlight/hybrid.styl","hash":"ea8d7ddc258b073308746385f5cb85aabb8bfb83","modified":1508382564000},{"_id":"themes/hueman/source/css/_highlight/idea.styl","hash":"a02967cb51c16a34e0ee895d33ded2b823d35b21","modified":1508382564000},{"_id":"themes/hueman/source/css/_highlight/hopscotch.styl","hash":"b374c6550b89b4751aedc8fbc3cf98d95bd70ead","modified":1508382564000},{"_id":"themes/hueman/source/css/_highlight/index.styl","hash":"d421ed06c84f7a561b293f662a670bf132d41c63","modified":1508382564000},{"_id":"themes/hueman/source/css/_highlight/ir-black.styl","hash":"693078bbd72a2091ed30f506cc55949600b717af","modified":1508382564000},{"_id":"themes/hueman/source/css/_highlight/magula.styl","hash":"16d323f989b1420a0f72ef989242ece9bf17a456","modified":1508382564000},{"_id":"themes/hueman/source/css/_highlight/kimbie.light.styl","hash":"61f8baed25be05288c8604d5070afbcd9f183f49","modified":1508382564000},{"_id":"themes/hueman/source/css/_highlight/kimbie.dark.styl","hash":"45dbb168f22d739d0109745d2decd66b5f94e786","modified":1508382564000},{"_id":"themes/hueman/source/css/_highlight/mono-blue.styl","hash":"4c89a6ae29de67c0700585af82a60607e85df928","modified":1508382564000},{"_id":"themes/hueman/source/css/_highlight/monokai-sublime.styl","hash":"25aa2fc1dbe38593e7c7ebe525438a39574d9935","modified":1508382564000},{"_id":"themes/hueman/source/css/_highlight/monokai.styl","hash":"5a4fe9f957fd7a368c21b62a818403db4270452f","modified":1508382564000},{"_id":"themes/hueman/source/css/_highlight/paraiso-dark.styl","hash":"f1537bd868579fa018ecdbfd2eb922dcf3ba2cac","modified":1508382564000},{"_id":"themes/hueman/source/css/_highlight/obsidian.styl","hash":"55572bbcfee1de6c31ac54681bb00336f5ae826d","modified":1508382564000},{"_id":"themes/hueman/source/css/_highlight/paraiso-light.styl","hash":"d224d1df0eb3395d9eea1344cee945c228af2911","modified":1508382564000},{"_id":"themes/hueman/source/css/_highlight/pojoaque.jpg","hash":"c5fe6533b88b21f8d90d3d03954c6b29baa67791","modified":1508382564000},{"_id":"themes/hueman/source/css/_highlight/pojoaque.styl","hash":"77dae9dc41945359d17fe84dbd317f1b40b2ee33","modified":1508382564000},{"_id":"themes/hueman/source/css/_highlight/railscasts.styl","hash":"acd620f8bb7ff0e3fe5f9a22b4433ceef93a05e6","modified":1508382564000},{"_id":"themes/hueman/source/css/_highlight/rainbow.styl","hash":"ce73b858fc0aba0e57ef9fb136c083082746bc1d","modified":1508382564000},{"_id":"themes/hueman/source/css/_highlight/school-book.png","hash":"711ec983c874e093bb89eb77afcbdf6741fa61ee","modified":1508382564000},{"_id":"themes/hueman/source/css/_highlight/school-book.styl","hash":"d43560fe519a931ce6da7d57416d7aa148441b83","modified":1508382564000},{"_id":"themes/hueman/source/css/_highlight/solarized-light.styl","hash":"aa0dd3fd25c464183b59c5575c9bee8756b397f2","modified":1508382564000},{"_id":"themes/hueman/source/css/_highlight/solarized-dark.styl","hash":"702b9299a48c90124e3ac1d45f1591042f2beccc","modified":1508382564000},{"_id":"themes/hueman/source/css/_highlight/sunburst.styl","hash":"a0b5b5129547a23865d400cfa562ea0ac1ee3958","modified":1508382564000},{"_id":"themes/hueman/source/css/_highlight/tomorrow-night-blue.styl","hash":"8b3087d4422be6eb800935a22eb11e035341c4ba","modified":1508382564000},{"_id":"themes/hueman/source/css/_highlight/tomorrow-night-eighties.styl","hash":"fa57b3bb7857a160fc856dbe319b31e30cc5d771","modified":1508382564000},{"_id":"themes/hueman/source/css/_highlight/tomorrow-night-bright.styl","hash":"0ac6af6ecb446b5b60d6226748e4a6532db34f57","modified":1508382564000},{"_id":"themes/hueman/source/css/_highlight/tomorrow-night.styl","hash":"19b3080d4b066b40d50d7e7f297472482b5801fd","modified":1508382564000},{"_id":"themes/hueman/source/css/_highlight/tomorrow.styl","hash":"15779cf6846725c7c35fc56cac39047d7e0aec1c","modified":1508382564000},{"_id":"themes/hueman/source/css/_highlight/vs.styl","hash":"959a746f4b37aacb5d1d6ff1d57e0c045289d75d","modified":1508382564000},{"_id":"themes/hueman/source/css/_highlight/xcode.styl","hash":"5e8532ae8366dcf6a4ef5e4813dc3d42ab3d0a50","modified":1508382564000},{"_id":"themes/hueman/source/css/_highlight/zenburn.styl","hash":"fc5ec840435dad80964d04519d3f882ddc03746a","modified":1508382564000},{"_id":"themes/hueman/source/css/images/logo-header.png","hash":"a874be8f3e33831614a421d1a74d2c13bd5eba59","modified":1508382564000},{"_id":"themes/hueman/source/css/images/opacity-10.png","hash":"bbc979866c5b50e8adb348419154b28b1ff44d78","modified":1508382564000},{"_id":"themes/hueman/source/css/images/thumb-default-small.png","hash":"e8403b97ed9251f9f5207765b0ce796c5000b4ba","modified":1508382564000},{"_id":"themes/hueman/source/css/images/s-left.png","hash":"c8cac4f4e3492606fab93196364bd0f87d93bb98","modified":1508382564000},{"_id":"themes/hueman/source/css/images/thumb-default.png","hash":"2d0ba175d958d342494241c616a74d37f48059fb","modified":1508382564000},{"_id":"themes/hueman/source/css/images/tomfriwel-blog.png","hash":"e6af323cf58917034ba67c1b9c29543b99bd24c4","modified":1525771413131},{"_id":"themes/hueman/source/libs/justified-gallery/justifiedGallery.min.css","hash":"13fbcba5e97aa88b748d94d3efc4718475279907","modified":1508382564000},{"_id":"themes/hueman/source/libs/justified-gallery/jquery.justifiedGallery.min.js","hash":"b2683e7a872bc109b1756a65188a37cef7d0bd5c","modified":1508382564000},{"_id":"themes/hueman/source/libs/source-code-pro/styles.css","hash":"93c308012738728f906cd4c5cfdb34189e0c712b","modified":1508382564000},{"_id":"themes/hueman/source/libs/titillium-web/styles.css","hash":"d98f0c50aae4c922cd0b663fa820fd7dff2dd9b1","modified":1508382564000},{"_id":"themes/hueman/source/libs/font-awesome/css/font-awesome.css","hash":"b5020c3860669185ba3f316fa7332cdf5c06f393","modified":1525771658631},{"_id":"themes/hueman/source/libs/font-awesome/css/font-awesome.min.css","hash":"7cd5a3384333f95c3d37d9488ad82cd6c4b03761","modified":1508382564000},{"_id":"themes/hueman/source/libs/lightgallery/css/lg-fb-comment-box.css","hash":"844ce27b8488968bccb3e50bb49184ba2aae0625","modified":1508382564000},{"_id":"themes/hueman/source/libs/lightgallery/css/lg-fb-comment-box.css.map","hash":"51e9df39edf0faa3f38c1bab0c1fa6c922b9edcb","modified":1508382564000},{"_id":"themes/hueman/source/libs/lightgallery/css/lg-fb-comment-box.min.css","hash":"05830fadb8454f39dcc98c8686eb4d5c24b71fc0","modified":1508382564000},{"_id":"themes/hueman/source/libs/lightgallery/css/lg-transitions.css.map","hash":"50c3348638b4d82fa08a449c690e8d2bb593005d","modified":1508382564000},{"_id":"themes/hueman/source/libs/lightgallery/css/lg-transitions.css","hash":"7871c28498d74451d6aa438c8d3a1817810a1e19","modified":1508382564000},{"_id":"themes/hueman/source/libs/lightgallery/css/lightgallery.css","hash":"bef55316a32e512d5a8940e5d0bfe8bf7a9c5c61","modified":1525771671551},{"_id":"themes/hueman/source/libs/lightgallery/css/lg-transitions.min.css","hash":"5c22e2073a4c96d6212c72135391b599e8d1359f","modified":1508382564000},{"_id":"themes/hueman/source/libs/lightgallery/css/lightgallery.css.map","hash":"3175b4107078674d25798979f7666f4daf31e624","modified":1508382564000},{"_id":"themes/hueman/source/libs/lightgallery/css/lightgallery.min.css","hash":"c9a2e19c932b56f4a2ce30c98910d10b74edb38a","modified":1508382564000},{"_id":"themes/hueman/source/libs/lightgallery/fonts/lg.eot","hash":"54caf05a81e33d7bf04f2e420736ce6f1de5f936","modified":1508382564000},{"_id":"themes/hueman/source/libs/lightgallery/fonts/lg.svg","hash":"9a732790adc004b22022cc60fd5f77ec4c8e3e5a","modified":1508382564000},{"_id":"themes/hueman/source/libs/lightgallery/fonts/lg.ttf","hash":"f6421c0c397311ae09f9257aa58bcd5e9720f493","modified":1508382564000},{"_id":"themes/hueman/source/libs/lightgallery/fonts/lg.woff","hash":"3048de344dd5cad4624e0127e58eaae4b576f574","modified":1508382564000},{"_id":"themes/hueman/source/libs/lightgallery/img/loading.gif","hash":"607810444094b8619fa4efa6273bc2a7e38dd4b4","modified":1508382564000},{"_id":"themes/hueman/source/libs/lightgallery/img/video-play.png","hash":"3ea484cdc04d2e4547f80cbf80001dcf248c94ef","modified":1508382564000},{"_id":"themes/hueman/source/libs/lightgallery/img/vimeo-play.png","hash":"6190254f2804904a4a1fa1eb390dfd334e416992","modified":1508382564000},{"_id":"themes/hueman/source/libs/lightgallery/img/youtube-play.png","hash":"fea6df9d9d43151f9c9d15f000adb30eb3e26fc4","modified":1508382564000},{"_id":"themes/hueman/source/libs/lightgallery/js/lg-autoplay.js","hash":"426bb78b93acfc39d533ea2bab1cec8dc289cf24","modified":1508382564000},{"_id":"themes/hueman/source/libs/lightgallery/js/lg-fullscreen.js","hash":"65c47ac65362854ba44b00a010bb01e3630209d8","modified":1508382564000},{"_id":"themes/hueman/source/libs/lightgallery/js/lg-autoplay.min.js","hash":"d845741bcaf961579622880eb2a445257efad1ac","modified":1508382564000},{"_id":"themes/hueman/source/libs/lightgallery/js/lg-hash.js","hash":"15d16516c5642d3de1566ff8fc9160136ccaa405","modified":1508382564000},{"_id":"themes/hueman/source/libs/lightgallery/js/lg-fullscreen.min.js","hash":"b6b9e4022700b7faf2a5a175ba44a3bd938fdd20","modified":1508382564000},{"_id":"themes/hueman/source/libs/lightgallery/js/lg-hash.min.js","hash":"43f1e1e720ab0e241c19b83aa26bd6848eab8edc","modified":1508382564000},{"_id":"themes/hueman/source/libs/lightgallery/js/lg-pager.js","hash":"8092c692b244bb26343eb03b91bd97deb9dafc9c","modified":1508382564000},{"_id":"themes/hueman/source/libs/lightgallery/js/lg-pager.min.js","hash":"25caa6ff65b1c6dee09941e795ae2633bdbab211","modified":1508382564000},{"_id":"themes/hueman/source/libs/lightgallery/js/lg-share.js","hash":"b7fb5f6474911060a351b0a6fe9dbb9ac3fb22aa","modified":1508382564000},{"_id":"themes/hueman/source/libs/lightgallery/js/lg-share.min.js","hash":"39c615f07c5d3aaa65a2c3068a30fdd6dd5c372d","modified":1508382564000},{"_id":"themes/hueman/source/libs/lightgallery/js/lg-thumbnail.min.js","hash":"18dd7d2909d1bfd6852f031d03e774b4428c512b","modified":1508382564000},{"_id":"themes/hueman/source/libs/lightgallery/js/lg-thumbnail.js","hash":"3a6476b6df1d2bef4a21861a78776282a7a11ef1","modified":1508382564000},{"_id":"themes/hueman/source/libs/lightgallery/js/lg-video.min.js","hash":"032c001ab045a69856f9c3ed4a2a3bf12a8e310f","modified":1508382564000},{"_id":"themes/hueman/source/libs/lightgallery/js/lg-video.js","hash":"4f99b598f6bb18de9eca8c45c5b4373a03962367","modified":1508382564000},{"_id":"themes/hueman/source/libs/lightgallery/js/lg-zoom.min.js","hash":"15b49f9728439819ece15e4295cce254c87a4f45","modified":1508382564000},{"_id":"themes/hueman/source/libs/lightgallery/js/lg-zoom.js","hash":"a758e2c8fcf710f9ff761da0eea0ab9321f3484d","modified":1508382564000},{"_id":"themes/hueman/source/libs/source-code-pro/fonts/mrl8jkM18OlOQN8JLgasD9V_2ngZ8dMf8fLgjYEouxg.woff2","hash":"942addaec4d3a60af33947a84a3d85f926015947","modified":1508382564000},{"_id":"themes/hueman/source/libs/source-code-pro/fonts/mrl8jkM18OlOQN8JLgasDy2Q8seG17bfDXYR_jUsrzg.woff2","hash":"b0e0bb5ef78db8b15d430d0b9be9d4329289a310","modified":1508382564000},{"_id":"themes/hueman/source/libs/lightgallery/js/lightgallery.min.js","hash":"956ef9b706755318da69ad0b5d7786339d831251","modified":1508382564000},{"_id":"themes/hueman/source/libs/lightgallery/js/lightgallery.js","hash":"3cd19b33ba99efd5ba1d167da91720566d274b2c","modified":1508382564000},{"_id":"themes/hueman/source/libs/titillium-web/fonts/7XUFZ5tgS-tD6QamInJTcSo_WB_cotcEMUw1LsIE8mM.woff2","hash":"6d17eac7fcc2866f10d1f2725a08ab749a6e978d","modified":1508382564000},{"_id":"themes/hueman/source/libs/titillium-web/fonts/anMUvcNT0H1YN4FII8wpr4-67659ICLY8bMrYhtePPA.woff2","hash":"4e5557954ec161edc03b6f971ddefee6179c1305","modified":1508382564000},{"_id":"themes/hueman/source/libs/titillium-web/fonts/7XUFZ5tgS-tD6QamInJTcZSnX671uNZIV63UdXh3Mg0.woff2","hash":"78029561e4c2ec565ea11c3f5bbd052b018af8a6","modified":1508382564000},{"_id":"themes/hueman/source/libs/titillium-web/fonts/anMUvcNT0H1YN4FII8wpr46gJz9aNFrmnwBdd69aqzY.woff2","hash":"1454a4753468b607c23deac9f5438cd0ed5cb35d","modified":1508382564000},{"_id":"themes/hueman/source/libs/titillium-web/fonts/anMUvcNT0H1YN4FII8wpr_SNRT0fZ5CX-AqRkMYgJJo.woff2","hash":"e2e2993940fc54ed41f26e39257fdbd824c05e81","modified":1508382564000},{"_id":"themes/hueman/source/libs/titillium-web/fonts/anMUvcNT0H1YN4FII8wpr9INifKjd1RJ3NxxEi9Cy2w.woff2","hash":"1758c64c8acec4497735ccb5336b1a518d24024c","modified":1508382564000},{"_id":"source/assets/images/ps/stitch0.jpg","hash":"0150be3b051d4ea709d71cfde627bac7481ce343","modified":1523261641482},{"_id":"themes/hueman/source/libs/font-awesome/fonts/FontAwesome.otf","hash":"1b22f17fdc38070de50e6d1ab3a32da71aa2d819","modified":1508382564000},{"_id":"themes/hueman/source/libs/font-awesome/fonts/fontawesome-webfont.eot","hash":"965ce8f688fedbeed504efd498bc9c1622d12362","modified":1508382564000},{"_id":"themes/hueman/source/libs/font-awesome/fonts/fontawesome-webfont.woff2","hash":"97e438cc545714309882fbceadbf344fcaddcec5","modified":1508382564000},{"_id":"themes/hueman/source/libs/font-awesome/fonts/fontawesome-webfont.woff","hash":"6d7e6a5fc802b13694d8820fc0138037c0977d2e","modified":1508382564000},{"_id":"themes/hueman/source/libs/jquery/2.0.3/jquery.min.js","hash":"a6eedf84389e1bc9f757bc2d19538f8c8d1cae9d","modified":1508382564000},{"_id":"source/assets/images/iphone-take-photo/blur-tip.png","hash":"d1581b7d55b350f38aec7b82d8fc2d5985896a73","modified":1522374622985},{"_id":"themes/hueman/source/libs/font-awesome/fonts/fontawesome-webfont.ttf","hash":"61d8d967807ef12598d81582fa95b9f600c3ee01","modified":1508382564000},{"_id":"source/assets/images/iphone-take-photo/blur-class.jpg","hash":"7847ee76c42631f7b1a41e5030ea0403383fa0bf","modified":1522374623390},{"_id":"themes/hueman/source/libs/font-awesome/fonts/fontawesome-webfont.svg","hash":"c0522272bbaef2acb3d341912754d6ea2d0ecfc0","modified":1508382564000},{"_id":"source/assets/images/linear-algebra/106.gif","hash":"d3d2c55196a86693748c690ac6a3b1f39e80f432","modified":1522374656457},{"_id":"source/assets/images/iphone-take-photo/building.jpg","hash":"3692abe65201119c3c4a73acf4f6c4403bf2d4d3","modified":1522374623609},{"_id":"source/assets/images/iphone-take-photo/building-corner.jpg","hash":"71314d3b511224c07e203ab4bb774fef3b6521fc","modified":1522374624045},{"_id":"public/assets/js/md5.js","hash":"b626de9825dac2e8b7aa08e1a84724e20d260acf","modified":1526575497500},{"_id":"public/content.json","hash":"4a903dff3c340768b4185b32a5af6ba25e2cd3b5","modified":1526575497746},{"_id":"public/archives/page/2/index.html","hash":"cc3724a4f0828212b132235b872d3a25a84166ba","modified":1526575497798},{"_id":"public/archives/2018/page/2/index.html","hash":"994be89057f595bfd9c14c8a5e8208c045038704","modified":1526575497798},{"_id":"public/page/2/index.html","hash":"8c5e74a31eae0d77b1543efadffb4d27008290f5","modified":1526575497798},{"_id":"public/about/index.html","hash":"f6f3159353cc02562bf7f656af1e20433e1ec18e","modified":1526575497798},{"_id":"public/2018/05/07/2018-05-07-use-carthage-for-the-first-time/index.html","hash":"fc3ff9589dd375188d6c2c5286a7ec790632a01c","modified":1526575497798},{"_id":"public/2018/05/07/2018-05-07-github-ssh-error-after-change-github-account-email/index.html","hash":"3c621b45e42d70559dafe8a2d4c6c06470dfad73","modified":1526575497798},{"_id":"public/2018/05/05/2018-05-05-small-target-2018/index.html","hash":"ad128c20df788660008f20de499b07e7bc5a7731","modified":1526575497798},{"_id":"public/2018/04/25/2018-04-25-the-idea-of-finding-a-solution/index.html","hash":"a7ec2026f2bcbb153c5d9502926b445f4011d637","modified":1526575497798},{"_id":"public/2018/04/23/2018-04-23-about-learning/index.html","hash":"5fba24b3cdcfa1baf2c3de27113989bc771641e5","modified":1526575497798},{"_id":"public/2018/04/09/2018-04-09-Florence/index.html","hash":"ad9b521be342a99edcf821ef3ec42a4dd4822da3","modified":1526575497798},{"_id":"public/2018/03/22/2018-03-22-develop-wechat-group-miniprogram-back-end/index.html","hash":"e2120bb962a56fe57558265accf27d592c2396a9","modified":1526575497798},{"_id":"public/2018/03/22/2018-03-22-develop-wechat-group-miniprogram-front-end/index.html","hash":"3a5989d0dba27b7e9ca57d91d2daffa3d1d5cc62","modified":1526575497799},{"_id":"public/2018/03/21/2018-03-21-learn-linear-algebra-by-programming-1/index.html","hash":"f29b7ae4aa7f8a4011226aa6021c19034ce733f3","modified":1526575497799},{"_id":"public/2018/03/13/2018-03-12-Three-Billboards-Outside-Ebbing,-Missouri/index.html","hash":"66f267d29425fcdbfb78e7eb5ffcaefb8e908d47","modified":1526575497799},{"_id":"public/2018/03/07/2018-03-11-learn-basic-knowledge-by-programming/index.html","hash":"ec612dfdee93694c6b37d4628679fb763c7b764f","modified":1526575497799},{"_id":"public/archives/index.html","hash":"b98d42610e6e04a0d7043014940f1e80840eae6c","modified":1526575497799},{"_id":"public/archives/2018/index.html","hash":"9878c2035b9e6857ef8c4b5822585076d1199744","modified":1526575497799},{"_id":"public/archives/2018/03/index.html","hash":"1c5fc1383f083214370ff7913e35a13f4563cf2c","modified":1526575497799},{"_id":"public/archives/2018/04/index.html","hash":"4e8bfaa7beabf0f8e176c4ead842fd44210c87fe","modified":1526575497799},{"_id":"public/archives/2018/05/index.html","hash":"6405b661c6c7e09fa39d9e100f75d3cf342dd9fd","modified":1526575497799},{"_id":"public/index.html","hash":"7ea96370e29179a51e8728647e19d656dc961fac","modified":1526575497799},{"_id":"public/assets/images/sample.jpg","hash":"0ccf3619936f2ddec8796296b68fc866c11af264","modified":1526575497813},{"_id":"public/assets/images/florence/florence0.jpeg","hash":"4cd134bf086c00f1b4e62a7bdadb7ded99ad5b8d","modified":1526575497814},{"_id":"public/assets/images/linear-algebra/102.png","hash":"41f961647f2dd4d3023ab1c9b9d98fc1e6c4abe3","modified":1526575497814},{"_id":"public/assets/images/linear-algebra/104.png","hash":"80f662b50ef41fe4539db6296d7a77f676807f7c","modified":1526575497814},{"_id":"public/assets/images/linear-algebra/101.jpeg","hash":"212c76f5032e212ec11ceeb04e2f2cc90a131e2d","modified":1526575497814},{"_id":"public/assets/images/linear-algebra/103.png","hash":"ed8142aac3db0a299e55d2637c51a5af1fcd1d20","modified":1526575497814},{"_id":"public/assets/images/linear-algebra/105.png","hash":"878627d3e29d3f3190825b2426fc9687a5ed84a0","modified":1526575497814},{"_id":"public/assets/images/linear-algebra/107.png","hash":"b6d9fd1d948cb62a4b47105c2e5b22916af450b0","modified":1526575497814},{"_id":"public/assets/images/use-carthage-for-the-first-time/0.png","hash":"07878c5af4e04671f711fd044ae6e5d2a3241912","modified":1526575497814},{"_id":"public/assets/images/linear-algebra/108.png","hash":"735be022531eb4e3457c0534d1b4cbbeb03a71f2","modified":1526575497815},{"_id":"public/assets/images/use-carthage-for-the-first-time/2.png","hash":"66c285e15172f596620bcd115be8e42eb0c48968","modified":1526575497815},{"_id":"public/css/images/opacity-10.png","hash":"bbc979866c5b50e8adb348419154b28b1ff44d78","modified":1526575497815},{"_id":"public/assets/images/use-carthage-for-the-first-time/1.png","hash":"8db048fe0c217326e7978e1ca695e6a62af73475","modified":1526575497815},{"_id":"public/assets/images/use-carthage-for-the-first-time/3.png","hash":"37ea321e3c50c9a384a03b2fc78f0b5d70f4f79d","modified":1526575497815},{"_id":"public/css/images/logo-header.png","hash":"a874be8f3e33831614a421d1a74d2c13bd5eba59","modified":1526575497815},{"_id":"public/css/images/thumb-default-small.png","hash":"e8403b97ed9251f9f5207765b0ce796c5000b4ba","modified":1526575497815},{"_id":"public/css/images/s-left.png","hash":"c8cac4f4e3492606fab93196364bd0f87d93bb98","modified":1526575497815},{"_id":"public/css/images/thumb-default.png","hash":"2d0ba175d958d342494241c616a74d37f48059fb","modified":1526575497815},{"_id":"public/css/images/tomfriwel-blog.png","hash":"e6af323cf58917034ba67c1b9c29543b99bd24c4","modified":1526575497815},{"_id":"public/libs/lightgallery/css/lg-fb-comment-box.css.map","hash":"51e9df39edf0faa3f38c1bab0c1fa6c922b9edcb","modified":1526575497815},{"_id":"public/libs/lightgallery/css/lg-transitions.css.map","hash":"50c3348638b4d82fa08a449c690e8d2bb593005d","modified":1526575497815},{"_id":"public/libs/lightgallery/css/lightgallery.css.map","hash":"3175b4107078674d25798979f7666f4daf31e624","modified":1526575497815},{"_id":"public/libs/lightgallery/fonts/lg.eot","hash":"54caf05a81e33d7bf04f2e420736ce6f1de5f936","modified":1526575497815},{"_id":"public/libs/lightgallery/fonts/lg.svg","hash":"9a732790adc004b22022cc60fd5f77ec4c8e3e5a","modified":1526575497815},{"_id":"public/libs/lightgallery/fonts/lg.ttf","hash":"f6421c0c397311ae09f9257aa58bcd5e9720f493","modified":1526575497816},{"_id":"public/libs/lightgallery/fonts/lg.woff","hash":"3048de344dd5cad4624e0127e58eaae4b576f574","modified":1526575497816},{"_id":"public/libs/lightgallery/img/loading.gif","hash":"607810444094b8619fa4efa6273bc2a7e38dd4b4","modified":1526575497816},{"_id":"public/libs/lightgallery/img/video-play.png","hash":"3ea484cdc04d2e4547f80cbf80001dcf248c94ef","modified":1526575497816},{"_id":"public/libs/lightgallery/img/vimeo-play.png","hash":"6190254f2804904a4a1fa1eb390dfd334e416992","modified":1526575497816},{"_id":"public/libs/lightgallery/img/youtube-play.png","hash":"fea6df9d9d43151f9c9d15f000adb30eb3e26fc4","modified":1526575497816},{"_id":"public/libs/source-code-pro/fonts/mrl8jkM18OlOQN8JLgasD9V_2ngZ8dMf8fLgjYEouxg.woff2","hash":"942addaec4d3a60af33947a84a3d85f926015947","modified":1526575497816},{"_id":"public/libs/source-code-pro/fonts/mrl8jkM18OlOQN8JLgasDy2Q8seG17bfDXYR_jUsrzg.woff2","hash":"b0e0bb5ef78db8b15d430d0b9be9d4329289a310","modified":1526575497816},{"_id":"public/libs/titillium-web/fonts/7XUFZ5tgS-tD6QamInJTcSo_WB_cotcEMUw1LsIE8mM.woff2","hash":"6d17eac7fcc2866f10d1f2725a08ab749a6e978d","modified":1526575497816},{"_id":"public/libs/titillium-web/fonts/anMUvcNT0H1YN4FII8wpr4-67659ICLY8bMrYhtePPA.woff2","hash":"4e5557954ec161edc03b6f971ddefee6179c1305","modified":1526575497816},{"_id":"public/libs/titillium-web/fonts/7XUFZ5tgS-tD6QamInJTcZSnX671uNZIV63UdXh3Mg0.woff2","hash":"78029561e4c2ec565ea11c3f5bbd052b018af8a6","modified":1526575497816},{"_id":"public/libs/titillium-web/fonts/anMUvcNT0H1YN4FII8wpr46gJz9aNFrmnwBdd69aqzY.woff2","hash":"1454a4753468b607c23deac9f5438cd0ed5cb35d","modified":1526575497816},{"_id":"public/libs/titillium-web/fonts/anMUvcNT0H1YN4FII8wpr_SNRT0fZ5CX-AqRkMYgJJo.woff2","hash":"e2e2993940fc54ed41f26e39257fdbd824c05e81","modified":1526575497816},{"_id":"public/libs/titillium-web/fonts/anMUvcNT0H1YN4FII8wpr9INifKjd1RJ3NxxEi9Cy2w.woff2","hash":"1758c64c8acec4497735ccb5336b1a518d24024c","modified":1526575497816},{"_id":"public/libs/font-awesome/fonts/FontAwesome.otf","hash":"1b22f17fdc38070de50e6d1ab3a32da71aa2d819","modified":1526575498488},{"_id":"public/libs/font-awesome/fonts/fontawesome-webfont.eot","hash":"965ce8f688fedbeed504efd498bc9c1622d12362","modified":1526575498497},{"_id":"public/libs/font-awesome/fonts/fontawesome-webfont.woff2","hash":"97e438cc545714309882fbceadbf344fcaddcec5","modified":1526575498498},{"_id":"public/libs/font-awesome/fonts/fontawesome-webfont.woff","hash":"6d7e6a5fc802b13694d8820fc0138037c0977d2e","modified":1526575498498},{"_id":"public/js/insight.js","hash":"6ee84c42c2b230ff9e9bf605a444bd671d44f9e3","modified":1526575498505},{"_id":"public/js/main.js","hash":"a15519ae8a397557cc594e8fb2f34fa9468f70fa","modified":1526575498506},{"_id":"public/libs/justified-gallery/justifiedGallery.min.css","hash":"13fbcba5e97aa88b748d94d3efc4718475279907","modified":1526575498506},{"_id":"public/libs/titillium-web/styles.css","hash":"d98f0c50aae4c922cd0b663fa820fd7dff2dd9b1","modified":1526575498506},{"_id":"public/libs/source-code-pro/styles.css","hash":"93c308012738728f906cd4c5cfdb34189e0c712b","modified":1526575498506},{"_id":"public/libs/lightgallery/css/lg-fb-comment-box.css","hash":"844ce27b8488968bccb3e50bb49184ba2aae0625","modified":1526575498506},{"_id":"public/libs/lightgallery/css/lg-fb-comment-box.min.css","hash":"05830fadb8454f39dcc98c8686eb4d5c24b71fc0","modified":1526575498506},{"_id":"public/libs/lightgallery/js/lg-autoplay.js","hash":"426bb78b93acfc39d533ea2bab1cec8dc289cf24","modified":1526575498506},{"_id":"public/libs/lightgallery/js/lg-fullscreen.js","hash":"65c47ac65362854ba44b00a010bb01e3630209d8","modified":1526575498506},{"_id":"public/libs/lightgallery/js/lg-autoplay.min.js","hash":"d845741bcaf961579622880eb2a445257efad1ac","modified":1526575498506},{"_id":"public/libs/lightgallery/js/lg-hash.js","hash":"15d16516c5642d3de1566ff8fc9160136ccaa405","modified":1526575498506},{"_id":"public/libs/lightgallery/js/lg-fullscreen.min.js","hash":"b6b9e4022700b7faf2a5a175ba44a3bd938fdd20","modified":1526575498506},{"_id":"public/libs/lightgallery/js/lg-hash.min.js","hash":"43f1e1e720ab0e241c19b83aa26bd6848eab8edc","modified":1526575498507},{"_id":"public/libs/lightgallery/js/lg-pager.min.js","hash":"25caa6ff65b1c6dee09941e795ae2633bdbab211","modified":1526575498507},{"_id":"public/libs/lightgallery/js/lg-pager.js","hash":"8092c692b244bb26343eb03b91bd97deb9dafc9c","modified":1526575498507},{"_id":"public/libs/lightgallery/js/lg-share.js","hash":"b7fb5f6474911060a351b0a6fe9dbb9ac3fb22aa","modified":1526575498507},{"_id":"public/libs/lightgallery/js/lg-share.min.js","hash":"39c615f07c5d3aaa65a2c3068a30fdd6dd5c372d","modified":1526575498507},{"_id":"public/libs/lightgallery/js/lg-thumbnail.min.js","hash":"18dd7d2909d1bfd6852f031d03e774b4428c512b","modified":1526575498507},{"_id":"public/libs/lightgallery/js/lg-video.min.js","hash":"032c001ab045a69856f9c3ed4a2a3bf12a8e310f","modified":1526575498507},{"_id":"public/libs/lightgallery/js/lg-video.js","hash":"4f99b598f6bb18de9eca8c45c5b4373a03962367","modified":1526575498507},{"_id":"public/libs/lightgallery/js/lg-zoom.min.js","hash":"15b49f9728439819ece15e4295cce254c87a4f45","modified":1526575498507},{"_id":"public/css/style.css","hash":"9ea61028b7c2f0e91514003914657d84892094fe","modified":1526575498507},{"_id":"public/libs/justified-gallery/jquery.justifiedGallery.min.js","hash":"b2683e7a872bc109b1756a65188a37cef7d0bd5c","modified":1526575498507},{"_id":"public/libs/font-awesome/css/font-awesome.css","hash":"b5020c3860669185ba3f316fa7332cdf5c06f393","modified":1526575498507},{"_id":"public/libs/font-awesome/css/font-awesome.min.css","hash":"7cd5a3384333f95c3d37d9488ad82cd6c4b03761","modified":1526575498507},{"_id":"public/libs/lightgallery/css/lg-transitions.css","hash":"7871c28498d74451d6aa438c8d3a1817810a1e19","modified":1526575498507},{"_id":"public/libs/lightgallery/css/lightgallery.css","hash":"bef55316a32e512d5a8940e5d0bfe8bf7a9c5c61","modified":1526575498507},{"_id":"public/libs/lightgallery/css/lg-transitions.min.css","hash":"5c22e2073a4c96d6212c72135391b599e8d1359f","modified":1526575498507},{"_id":"public/libs/lightgallery/css/lightgallery.min.css","hash":"c9a2e19c932b56f4a2ce30c98910d10b74edb38a","modified":1526575498507},{"_id":"public/libs/lightgallery/js/lg-thumbnail.js","hash":"3a6476b6df1d2bef4a21861a78776282a7a11ef1","modified":1526575498507},{"_id":"public/libs/lightgallery/js/lg-zoom.js","hash":"a758e2c8fcf710f9ff761da0eea0ab9321f3484d","modified":1526575498508},{"_id":"public/libs/lightgallery/js/lightgallery.js","hash":"3cd19b33ba99efd5ba1d167da91720566d274b2c","modified":1526575498508},{"_id":"public/libs/lightgallery/js/lightgallery.min.js","hash":"956ef9b706755318da69ad0b5d7786339d831251","modified":1526575498508},{"_id":"public/libs/jquery/2.0.3/jquery.min.js","hash":"a6eedf84389e1bc9f757bc2d19538f8c8d1cae9d","modified":1526575498508},{"_id":"public/libs/font-awesome/fonts/fontawesome-webfont.ttf","hash":"61d8d967807ef12598d81582fa95b9f600c3ee01","modified":1526575498508},{"_id":"public/assets/images/ps/stitch0.jpg","hash":"0150be3b051d4ea709d71cfde627bac7481ce343","modified":1526575498514},{"_id":"public/assets/images/iphone-take-photo/blur-tip.png","hash":"d1581b7d55b350f38aec7b82d8fc2d5985896a73","modified":1526575498519},{"_id":"public/assets/images/iphone-take-photo/blur-class.jpg","hash":"7847ee76c42631f7b1a41e5030ea0403383fa0bf","modified":1526575498524},{"_id":"public/libs/font-awesome/fonts/fontawesome-webfont.svg","hash":"c0522272bbaef2acb3d341912754d6ea2d0ecfc0","modified":1526575498524},{"_id":"public/assets/images/linear-algebra/106.gif","hash":"d3d2c55196a86693748c690ac6a3b1f39e80f432","modified":1526575498538},{"_id":"public/assets/images/iphone-take-photo/building.jpg","hash":"3692abe65201119c3c4a73acf4f6c4403bf2d4d3","modified":1526575498544},{"_id":"public/assets/images/iphone-take-photo/building-corner.jpg","hash":"71314d3b511224c07e203ab4bb774fef3b6521fc","modified":1526575498555}],"Category":[],"Data":[],"Page":[{"layout":"page","title":"About","_content":"\n这里是我的个人博客。\n\n评论功能可能需要科学上网。\n\n有什么问题也可以提交到[Issue](https://github.com/tomfriwel/blog/issues)中。\n\n### 关于我\n---\n\n### 项目经验\n\n- 2013年开始在一家创业公司实习前端，学习了一些前端和后端知识。`jquery`、`php`、`sql`, 制作过一些网宣页面、一些简单的数据库查询、前后端数据交互。\n\n- 2015年底开始通过自学和同事帮助开发出了两个***iOS***应用和一个***macOS***应用。***iOS***：`Jue.so - 觉官方应用`、`作品集 by JUE.SO`；***macOS***：`作品集`。涉及到本地存储、图片加载、载入本地网页并与原生代码进行交互、微信支付、分页加载、数据同步。\n\n- 2016年做过一个笔记应用（未发布），涉及到利用`SQLite`进行本地存储、富文本编辑、自定义键盘（不是我开发）、分片上传。\n\n- 2017年开始接触***微信小程序***，做过一个`极速办签`。然后做了三个复用度比较高的***微信小程序***：`德国马牌轮胎延保丨用户端`、`德国马牌延保焕新丨零售商端`、`德国马牌延保焕新丨SR端`。\n\n### 补充\n\n以上项目经验里并没有列出什么具体使用框架，框架只要细心看文档都是能摸透的，本身框架的主要目的就是为了使开发变简单。\n\n以上项目大部分前端由自己完成，后端其他成员完成。个人认为开发一个项目主要的是要先理清楚项目逻辑，就像你可以用不同的编程语言实现生成`斐波那契数列`的功能，如果你不知道实现的逻辑知道再多语言也没用。\n\n具备阅读英文文档的能力。开发`macOS`应用的时候经常逛国外网站，主要是百度很难找到这方面的比较深入的一些知识，大多解决办法都是`stackoverflow`上找的，也有在上面提问和解答过一些问题。听到过一句很经典的话：面向搜索引擎开发。不过一些像`图像处理`、`神经网络`这类开发，觉得还是要有扎实的相关基础学科的知识。\n\n项目中有问题也会主动与设计师、后端、以及合作开发的人进行沟通。一般开始一个新项目时，会跟后端一同根据设计图总结出一些主要的接口。\n\n个人对自己的评价是：了解的知识面很广但不够深入。大概也是因为对前后端都有了解，所以一般出了bug会很容易定位是前端还是后端的问题。\n\n### 兴趣爱好\n\n业余时间大多是玩游戏，偶尔画画（比较业余，以前学过一段时间素描，小时候也喜欢画画），偶尔看书（一般不是计算机专业书籍），偶尔出去骑骑自行车，拍拍照，写博客，看电影。\n\n[Personal Website](https://www.tomfriwel.com)有个人使用的一些平台的链接。","source":"about/index.md","raw":"---\nlayout: page\ntitle: About\npermalink: /about/\n---\n\n这里是我的个人博客。\n\n评论功能可能需要科学上网。\n\n有什么问题也可以提交到[Issue](https://github.com/tomfriwel/blog/issues)中。\n\n### 关于我\n---\n\n### 项目经验\n\n- 2013年开始在一家创业公司实习前端，学习了一些前端和后端知识。`jquery`、`php`、`sql`, 制作过一些网宣页面、一些简单的数据库查询、前后端数据交互。\n\n- 2015年底开始通过自学和同事帮助开发出了两个***iOS***应用和一个***macOS***应用。***iOS***：`Jue.so - 觉官方应用`、`作品集 by JUE.SO`；***macOS***：`作品集`。涉及到本地存储、图片加载、载入本地网页并与原生代码进行交互、微信支付、分页加载、数据同步。\n\n- 2016年做过一个笔记应用（未发布），涉及到利用`SQLite`进行本地存储、富文本编辑、自定义键盘（不是我开发）、分片上传。\n\n- 2017年开始接触***微信小程序***，做过一个`极速办签`。然后做了三个复用度比较高的***微信小程序***：`德国马牌轮胎延保丨用户端`、`德国马牌延保焕新丨零售商端`、`德国马牌延保焕新丨SR端`。\n\n### 补充\n\n以上项目经验里并没有列出什么具体使用框架，框架只要细心看文档都是能摸透的，本身框架的主要目的就是为了使开发变简单。\n\n以上项目大部分前端由自己完成，后端其他成员完成。个人认为开发一个项目主要的是要先理清楚项目逻辑，就像你可以用不同的编程语言实现生成`斐波那契数列`的功能，如果你不知道实现的逻辑知道再多语言也没用。\n\n具备阅读英文文档的能力。开发`macOS`应用的时候经常逛国外网站，主要是百度很难找到这方面的比较深入的一些知识，大多解决办法都是`stackoverflow`上找的，也有在上面提问和解答过一些问题。听到过一句很经典的话：面向搜索引擎开发。不过一些像`图像处理`、`神经网络`这类开发，觉得还是要有扎实的相关基础学科的知识。\n\n项目中有问题也会主动与设计师、后端、以及合作开发的人进行沟通。一般开始一个新项目时，会跟后端一同根据设计图总结出一些主要的接口。\n\n个人对自己的评价是：了解的知识面很广但不够深入。大概也是因为对前后端都有了解，所以一般出了bug会很容易定位是前端还是后端的问题。\n\n### 兴趣爱好\n\n业余时间大多是玩游戏，偶尔画画（比较业余，以前学过一段时间素描，小时候也喜欢画画），偶尔看书（一般不是计算机专业书籍），偶尔出去骑骑自行车，拍拍照，写博客，看电影。\n\n[Personal Website](https://www.tomfriwel.com)有个人使用的一些平台的链接。","date":"2018-05-17T16:31:47.985Z","updated":"2018-05-17T16:31:47.985Z","path":"/about/index.html","comments":1,"_id":"cjharmvux000bmgmc3ogf9igx","content":"<p>这里是我的个人博客。</p>\n<p>评论功能可能需要科学上网。</p>\n<p>有什么问题也可以提交到<a href=\"https://github.com/tomfriwel/blog/issues\" target=\"_blank\" rel=\"noopener\">Issue</a>中。</p>\n<h3 id=\"关于我\"><a href=\"#关于我\" class=\"headerlink\" title=\"关于我\"></a>关于我</h3><hr>\n<h3 id=\"项目经验\"><a href=\"#项目经验\" class=\"headerlink\" title=\"项目经验\"></a>项目经验</h3><ul>\n<li><p>2013年开始在一家创业公司实习前端，学习了一些前端和后端知识。<code>jquery</code>、<code>php</code>、<code>sql</code>, 制作过一些网宣页面、一些简单的数据库查询、前后端数据交互。</p>\n</li>\n<li><p>2015年底开始通过自学和同事帮助开发出了两个<strong><em>iOS</em></strong>应用和一个<strong><em>macOS</em></strong>应用。<strong><em>iOS</em></strong>：<code>Jue.so - 觉官方应用</code>、<code>作品集 by JUE.SO</code>；<strong><em>macOS</em></strong>：<code>作品集</code>。涉及到本地存储、图片加载、载入本地网页并与原生代码进行交互、微信支付、分页加载、数据同步。</p>\n</li>\n<li><p>2016年做过一个笔记应用（未发布），涉及到利用<code>SQLite</code>进行本地存储、富文本编辑、自定义键盘（不是我开发）、分片上传。</p>\n</li>\n<li><p>2017年开始接触<strong><em>微信小程序</em></strong>，做过一个<code>极速办签</code>。然后做了三个复用度比较高的<strong><em>微信小程序</em></strong>：<code>德国马牌轮胎延保丨用户端</code>、<code>德国马牌延保焕新丨零售商端</code>、<code>德国马牌延保焕新丨SR端</code>。</p>\n</li>\n</ul>\n<h3 id=\"补充\"><a href=\"#补充\" class=\"headerlink\" title=\"补充\"></a>补充</h3><p>以上项目经验里并没有列出什么具体使用框架，框架只要细心看文档都是能摸透的，本身框架的主要目的就是为了使开发变简单。</p>\n<p>以上项目大部分前端由自己完成，后端其他成员完成。个人认为开发一个项目主要的是要先理清楚项目逻辑，就像你可以用不同的编程语言实现生成<code>斐波那契数列</code>的功能，如果你不知道实现的逻辑知道再多语言也没用。</p>\n<p>具备阅读英文文档的能力。开发<code>macOS</code>应用的时候经常逛国外网站，主要是百度很难找到这方面的比较深入的一些知识，大多解决办法都是<code>stackoverflow</code>上找的，也有在上面提问和解答过一些问题。听到过一句很经典的话：面向搜索引擎开发。不过一些像<code>图像处理</code>、<code>神经网络</code>这类开发，觉得还是要有扎实的相关基础学科的知识。</p>\n<p>项目中有问题也会主动与设计师、后端、以及合作开发的人进行沟通。一般开始一个新项目时，会跟后端一同根据设计图总结出一些主要的接口。</p>\n<p>个人对自己的评价是：了解的知识面很广但不够深入。大概也是因为对前后端都有了解，所以一般出了bug会很容易定位是前端还是后端的问题。</p>\n<h3 id=\"兴趣爱好\"><a href=\"#兴趣爱好\" class=\"headerlink\" title=\"兴趣爱好\"></a>兴趣爱好</h3><p>业余时间大多是玩游戏，偶尔画画（比较业余，以前学过一段时间素描，小时候也喜欢画画），偶尔看书（一般不是计算机专业书籍），偶尔出去骑骑自行车，拍拍照，写博客，看电影。</p>\n<p><a href=\"https://www.tomfriwel.com\" target=\"_blank\" rel=\"noopener\">Personal Website</a>有个人使用的一些平台的链接。</p>\n","site":{"data":{}},"excerpt":"","more":"<p>这里是我的个人博客。</p>\n<p>评论功能可能需要科学上网。</p>\n<p>有什么问题也可以提交到<a href=\"https://github.com/tomfriwel/blog/issues\" target=\"_blank\" rel=\"noopener\">Issue</a>中。</p>\n<h3 id=\"关于我\"><a href=\"#关于我\" class=\"headerlink\" title=\"关于我\"></a>关于我</h3><hr>\n<h3 id=\"项目经验\"><a href=\"#项目经验\" class=\"headerlink\" title=\"项目经验\"></a>项目经验</h3><ul>\n<li><p>2013年开始在一家创业公司实习前端，学习了一些前端和后端知识。<code>jquery</code>、<code>php</code>、<code>sql</code>, 制作过一些网宣页面、一些简单的数据库查询、前后端数据交互。</p>\n</li>\n<li><p>2015年底开始通过自学和同事帮助开发出了两个<strong><em>iOS</em></strong>应用和一个<strong><em>macOS</em></strong>应用。<strong><em>iOS</em></strong>：<code>Jue.so - 觉官方应用</code>、<code>作品集 by JUE.SO</code>；<strong><em>macOS</em></strong>：<code>作品集</code>。涉及到本地存储、图片加载、载入本地网页并与原生代码进行交互、微信支付、分页加载、数据同步。</p>\n</li>\n<li><p>2016年做过一个笔记应用（未发布），涉及到利用<code>SQLite</code>进行本地存储、富文本编辑、自定义键盘（不是我开发）、分片上传。</p>\n</li>\n<li><p>2017年开始接触<strong><em>微信小程序</em></strong>，做过一个<code>极速办签</code>。然后做了三个复用度比较高的<strong><em>微信小程序</em></strong>：<code>德国马牌轮胎延保丨用户端</code>、<code>德国马牌延保焕新丨零售商端</code>、<code>德国马牌延保焕新丨SR端</code>。</p>\n</li>\n</ul>\n<h3 id=\"补充\"><a href=\"#补充\" class=\"headerlink\" title=\"补充\"></a>补充</h3><p>以上项目经验里并没有列出什么具体使用框架，框架只要细心看文档都是能摸透的，本身框架的主要目的就是为了使开发变简单。</p>\n<p>以上项目大部分前端由自己完成，后端其他成员完成。个人认为开发一个项目主要的是要先理清楚项目逻辑，就像你可以用不同的编程语言实现生成<code>斐波那契数列</code>的功能，如果你不知道实现的逻辑知道再多语言也没用。</p>\n<p>具备阅读英文文档的能力。开发<code>macOS</code>应用的时候经常逛国外网站，主要是百度很难找到这方面的比较深入的一些知识，大多解决办法都是<code>stackoverflow</code>上找的，也有在上面提问和解答过一些问题。听到过一句很经典的话：面向搜索引擎开发。不过一些像<code>图像处理</code>、<code>神经网络</code>这类开发，觉得还是要有扎实的相关基础学科的知识。</p>\n<p>项目中有问题也会主动与设计师、后端、以及合作开发的人进行沟通。一般开始一个新项目时，会跟后端一同根据设计图总结出一些主要的接口。</p>\n<p>个人对自己的评价是：了解的知识面很广但不够深入。大概也是因为对前后端都有了解，所以一般出了bug会很容易定位是前端还是后端的问题。</p>\n<h3 id=\"兴趣爱好\"><a href=\"#兴趣爱好\" class=\"headerlink\" title=\"兴趣爱好\"></a>兴趣爱好</h3><p>业余时间大多是玩游戏，偶尔画画（比较业余，以前学过一段时间素描，小时候也喜欢画画），偶尔看书（一般不是计算机专业书籍），偶尔出去骑骑自行车，拍拍照，写博客，看电影。</p>\n<p><a href=\"https://www.tomfriwel.com\" target=\"_blank\" rel=\"noopener\">Personal Website</a>有个人使用的一些平台的链接。</p>\n"},{"_content":"/*\n * JavaScript MD5\n * https://github.com/blueimp/JavaScript-MD5\n *\n * Copyright 2011, Sebastian Tschan\n * https://blueimp.net\n *\n * Licensed under the MIT license:\n * https://opensource.org/licenses/MIT\n *\n * Based on\n * A JavaScript implementation of the RSA Data Security, Inc. MD5 Message\n * Digest Algorithm, as defined in RFC 1321.\n * Version 2.2 Copyright (C) Paul Johnston 1999 - 2009\n * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet\n * Distributed under the BSD License\n * See http://pajhome.org.uk/crypt/md5 for more info.\n */\n\n/* global define */\n\n; (function ($) {\n    'use strict'\n\n    /*\n    * Add integers, wrapping at 2^32. This uses 16-bit operations internally\n    * to work around bugs in some JS interpreters.\n    */\n    function safeAdd(x, y) {\n        var lsw = (x & 0xffff) + (y & 0xffff)\n        var msw = (x >> 16) + (y >> 16) + (lsw >> 16)\n        return (msw << 16) | (lsw & 0xffff)\n    }\n\n    /*\n    * Bitwise rotate a 32-bit number to the left.\n    */\n    function bitRotateLeft(num, cnt) {\n        return (num << cnt) | (num >>> (32 - cnt))\n    }\n\n    /*\n    * These functions implement the four basic operations the algorithm uses.\n    */\n    function md5cmn(q, a, b, x, s, t) {\n        return safeAdd(bitRotateLeft(safeAdd(safeAdd(a, q), safeAdd(x, t)), s), b)\n    }\n    function md5ff(a, b, c, d, x, s, t) {\n        return md5cmn((b & c) | (~b & d), a, b, x, s, t)\n    }\n    function md5gg(a, b, c, d, x, s, t) {\n        return md5cmn((b & d) | (c & ~d), a, b, x, s, t)\n    }\n    function md5hh(a, b, c, d, x, s, t) {\n        return md5cmn(b ^ c ^ d, a, b, x, s, t)\n    }\n    function md5ii(a, b, c, d, x, s, t) {\n        return md5cmn(c ^ (b | ~d), a, b, x, s, t)\n    }\n\n    /*\n    * Calculate the MD5 of an array of little-endian words, and a bit length.\n    */\n    function binlMD5(x, len) {\n        /* append padding */\n        x[len >> 5] |= 0x80 << (len % 32)\n        x[((len + 64) >>> 9 << 4) + 14] = len\n\n        var i\n        var olda\n        var oldb\n        var oldc\n        var oldd\n        var a = 1732584193\n        var b = -271733879\n        var c = -1732584194\n        var d = 271733878\n\n        for (i = 0; i < x.length; i += 16) {\n            olda = a\n            oldb = b\n            oldc = c\n            oldd = d\n\n            a = md5ff(a, b, c, d, x[i], 7, -680876936)\n            d = md5ff(d, a, b, c, x[i + 1], 12, -389564586)\n            c = md5ff(c, d, a, b, x[i + 2], 17, 606105819)\n            b = md5ff(b, c, d, a, x[i + 3], 22, -1044525330)\n            a = md5ff(a, b, c, d, x[i + 4], 7, -176418897)\n            d = md5ff(d, a, b, c, x[i + 5], 12, 1200080426)\n            c = md5ff(c, d, a, b, x[i + 6], 17, -1473231341)\n            b = md5ff(b, c, d, a, x[i + 7], 22, -45705983)\n            a = md5ff(a, b, c, d, x[i + 8], 7, 1770035416)\n            d = md5ff(d, a, b, c, x[i + 9], 12, -1958414417)\n            c = md5ff(c, d, a, b, x[i + 10], 17, -42063)\n            b = md5ff(b, c, d, a, x[i + 11], 22, -1990404162)\n            a = md5ff(a, b, c, d, x[i + 12], 7, 1804603682)\n            d = md5ff(d, a, b, c, x[i + 13], 12, -40341101)\n            c = md5ff(c, d, a, b, x[i + 14], 17, -1502002290)\n            b = md5ff(b, c, d, a, x[i + 15], 22, 1236535329)\n\n            a = md5gg(a, b, c, d, x[i + 1], 5, -165796510)\n            d = md5gg(d, a, b, c, x[i + 6], 9, -1069501632)\n            c = md5gg(c, d, a, b, x[i + 11], 14, 643717713)\n            b = md5gg(b, c, d, a, x[i], 20, -373897302)\n            a = md5gg(a, b, c, d, x[i + 5], 5, -701558691)\n            d = md5gg(d, a, b, c, x[i + 10], 9, 38016083)\n            c = md5gg(c, d, a, b, x[i + 15], 14, -660478335)\n            b = md5gg(b, c, d, a, x[i + 4], 20, -405537848)\n            a = md5gg(a, b, c, d, x[i + 9], 5, 568446438)\n            d = md5gg(d, a, b, c, x[i + 14], 9, -1019803690)\n            c = md5gg(c, d, a, b, x[i + 3], 14, -187363961)\n            b = md5gg(b, c, d, a, x[i + 8], 20, 1163531501)\n            a = md5gg(a, b, c, d, x[i + 13], 5, -1444681467)\n            d = md5gg(d, a, b, c, x[i + 2], 9, -51403784)\n            c = md5gg(c, d, a, b, x[i + 7], 14, 1735328473)\n            b = md5gg(b, c, d, a, x[i + 12], 20, -1926607734)\n\n            a = md5hh(a, b, c, d, x[i + 5], 4, -378558)\n            d = md5hh(d, a, b, c, x[i + 8], 11, -2022574463)\n            c = md5hh(c, d, a, b, x[i + 11], 16, 1839030562)\n            b = md5hh(b, c, d, a, x[i + 14], 23, -35309556)\n            a = md5hh(a, b, c, d, x[i + 1], 4, -1530992060)\n            d = md5hh(d, a, b, c, x[i + 4], 11, 1272893353)\n            c = md5hh(c, d, a, b, x[i + 7], 16, -155497632)\n            b = md5hh(b, c, d, a, x[i + 10], 23, -1094730640)\n            a = md5hh(a, b, c, d, x[i + 13], 4, 681279174)\n            d = md5hh(d, a, b, c, x[i], 11, -358537222)\n            c = md5hh(c, d, a, b, x[i + 3], 16, -722521979)\n            b = md5hh(b, c, d, a, x[i + 6], 23, 76029189)\n            a = md5hh(a, b, c, d, x[i + 9], 4, -640364487)\n            d = md5hh(d, a, b, c, x[i + 12], 11, -421815835)\n            c = md5hh(c, d, a, b, x[i + 15], 16, 530742520)\n            b = md5hh(b, c, d, a, x[i + 2], 23, -995338651)\n\n            a = md5ii(a, b, c, d, x[i], 6, -198630844)\n            d = md5ii(d, a, b, c, x[i + 7], 10, 1126891415)\n            c = md5ii(c, d, a, b, x[i + 14], 15, -1416354905)\n            b = md5ii(b, c, d, a, x[i + 5], 21, -57434055)\n            a = md5ii(a, b, c, d, x[i + 12], 6, 1700485571)\n            d = md5ii(d, a, b, c, x[i + 3], 10, -1894986606)\n            c = md5ii(c, d, a, b, x[i + 10], 15, -1051523)\n            b = md5ii(b, c, d, a, x[i + 1], 21, -2054922799)\n            a = md5ii(a, b, c, d, x[i + 8], 6, 1873313359)\n            d = md5ii(d, a, b, c, x[i + 15], 10, -30611744)\n            c = md5ii(c, d, a, b, x[i + 6], 15, -1560198380)\n            b = md5ii(b, c, d, a, x[i + 13], 21, 1309151649)\n            a = md5ii(a, b, c, d, x[i + 4], 6, -145523070)\n            d = md5ii(d, a, b, c, x[i + 11], 10, -1120210379)\n            c = md5ii(c, d, a, b, x[i + 2], 15, 718787259)\n            b = md5ii(b, c, d, a, x[i + 9], 21, -343485551)\n\n            a = safeAdd(a, olda)\n            b = safeAdd(b, oldb)\n            c = safeAdd(c, oldc)\n            d = safeAdd(d, oldd)\n        }\n        return [a, b, c, d]\n    }\n\n    /*\n    * Convert an array of little-endian words to a string\n    */\n    function binl2rstr(input) {\n        var i\n        var output = ''\n        var length32 = input.length * 32\n        for (i = 0; i < length32; i += 8) {\n            output += String.fromCharCode((input[i >> 5] >>> (i % 32)) & 0xff)\n        }\n        return output\n    }\n\n    /*\n    * Convert a raw string to an array of little-endian words\n    * Characters >255 have their high-byte silently ignored.\n    */\n    function rstr2binl(input) {\n        var i\n        var output = []\n        output[(input.length >> 2) - 1] = undefined\n        for (i = 0; i < output.length; i += 1) {\n            output[i] = 0\n        }\n        var length8 = input.length * 8\n        for (i = 0; i < length8; i += 8) {\n            output[i >> 5] |= (input.charCodeAt(i / 8) & 0xff) << (i % 32)\n        }\n        return output\n    }\n\n    /*\n    * Calculate the MD5 of a raw string\n    */\n    function rstrMD5(s) {\n        return binl2rstr(binlMD5(rstr2binl(s), s.length * 8))\n    }\n\n    /*\n    * Calculate the HMAC-MD5, of a key and some data (raw strings)\n    */\n    function rstrHMACMD5(key, data) {\n        var i\n        var bkey = rstr2binl(key)\n        var ipad = []\n        var opad = []\n        var hash\n        ipad[15] = opad[15] = undefined\n        if (bkey.length > 16) {\n            bkey = binlMD5(bkey, key.length * 8)\n        }\n        for (i = 0; i < 16; i += 1) {\n            ipad[i] = bkey[i] ^ 0x36363636\n            opad[i] = bkey[i] ^ 0x5c5c5c5c\n        }\n        hash = binlMD5(ipad.concat(rstr2binl(data)), 512 + data.length * 8)\n        return binl2rstr(binlMD5(opad.concat(hash), 512 + 128))\n    }\n\n    /*\n    * Convert a raw string to a hex string\n    */\n    function rstr2hex(input) {\n        var hexTab = '0123456789abcdef'\n        var output = ''\n        var x\n        var i\n        for (i = 0; i < input.length; i += 1) {\n            x = input.charCodeAt(i)\n            output += hexTab.charAt((x >>> 4) & 0x0f) + hexTab.charAt(x & 0x0f)\n        }\n        return output\n    }\n\n    /*\n    * Encode a string as utf-8\n    */\n    function str2rstrUTF8(input) {\n        return unescape(encodeURIComponent(input))\n    }\n\n    /*\n    * Take string arguments and return either raw or hex encoded strings\n    */\n    function rawMD5(s) {\n        return rstrMD5(str2rstrUTF8(s))\n    }\n    function hexMD5(s) {\n        return rstr2hex(rawMD5(s))\n    }\n    function rawHMACMD5(k, d) {\n        return rstrHMACMD5(str2rstrUTF8(k), str2rstrUTF8(d))\n    }\n    function hexHMACMD5(k, d) {\n        return rstr2hex(rawHMACMD5(k, d))\n    }\n\n    function md5(string, key, raw) {\n        if (!key) {\n            if (!raw) {\n                return hexMD5(string)\n            }\n            return rawMD5(string)\n        }\n        if (!raw) {\n            return hexHMACMD5(key, string)\n        }\n        return rawHMACMD5(key, string)\n    }\n\n    if (typeof define === 'function' && define.amd) {\n        define(function () {\n            return md5\n        })\n    } else if (typeof module === 'object' && module.exports) {\n        module.exports = md5\n    } else {\n        $.md5 = md5\n    }\n})(this)\n","source":"assets/js/md5.js","raw":"/*\n * JavaScript MD5\n * https://github.com/blueimp/JavaScript-MD5\n *\n * Copyright 2011, Sebastian Tschan\n * https://blueimp.net\n *\n * Licensed under the MIT license:\n * https://opensource.org/licenses/MIT\n *\n * Based on\n * A JavaScript implementation of the RSA Data Security, Inc. MD5 Message\n * Digest Algorithm, as defined in RFC 1321.\n * Version 2.2 Copyright (C) Paul Johnston 1999 - 2009\n * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet\n * Distributed under the BSD License\n * See http://pajhome.org.uk/crypt/md5 for more info.\n */\n\n/* global define */\n\n; (function ($) {\n    'use strict'\n\n    /*\n    * Add integers, wrapping at 2^32. This uses 16-bit operations internally\n    * to work around bugs in some JS interpreters.\n    */\n    function safeAdd(x, y) {\n        var lsw = (x & 0xffff) + (y & 0xffff)\n        var msw = (x >> 16) + (y >> 16) + (lsw >> 16)\n        return (msw << 16) | (lsw & 0xffff)\n    }\n\n    /*\n    * Bitwise rotate a 32-bit number to the left.\n    */\n    function bitRotateLeft(num, cnt) {\n        return (num << cnt) | (num >>> (32 - cnt))\n    }\n\n    /*\n    * These functions implement the four basic operations the algorithm uses.\n    */\n    function md5cmn(q, a, b, x, s, t) {\n        return safeAdd(bitRotateLeft(safeAdd(safeAdd(a, q), safeAdd(x, t)), s), b)\n    }\n    function md5ff(a, b, c, d, x, s, t) {\n        return md5cmn((b & c) | (~b & d), a, b, x, s, t)\n    }\n    function md5gg(a, b, c, d, x, s, t) {\n        return md5cmn((b & d) | (c & ~d), a, b, x, s, t)\n    }\n    function md5hh(a, b, c, d, x, s, t) {\n        return md5cmn(b ^ c ^ d, a, b, x, s, t)\n    }\n    function md5ii(a, b, c, d, x, s, t) {\n        return md5cmn(c ^ (b | ~d), a, b, x, s, t)\n    }\n\n    /*\n    * Calculate the MD5 of an array of little-endian words, and a bit length.\n    */\n    function binlMD5(x, len) {\n        /* append padding */\n        x[len >> 5] |= 0x80 << (len % 32)\n        x[((len + 64) >>> 9 << 4) + 14] = len\n\n        var i\n        var olda\n        var oldb\n        var oldc\n        var oldd\n        var a = 1732584193\n        var b = -271733879\n        var c = -1732584194\n        var d = 271733878\n\n        for (i = 0; i < x.length; i += 16) {\n            olda = a\n            oldb = b\n            oldc = c\n            oldd = d\n\n            a = md5ff(a, b, c, d, x[i], 7, -680876936)\n            d = md5ff(d, a, b, c, x[i + 1], 12, -389564586)\n            c = md5ff(c, d, a, b, x[i + 2], 17, 606105819)\n            b = md5ff(b, c, d, a, x[i + 3], 22, -1044525330)\n            a = md5ff(a, b, c, d, x[i + 4], 7, -176418897)\n            d = md5ff(d, a, b, c, x[i + 5], 12, 1200080426)\n            c = md5ff(c, d, a, b, x[i + 6], 17, -1473231341)\n            b = md5ff(b, c, d, a, x[i + 7], 22, -45705983)\n            a = md5ff(a, b, c, d, x[i + 8], 7, 1770035416)\n            d = md5ff(d, a, b, c, x[i + 9], 12, -1958414417)\n            c = md5ff(c, d, a, b, x[i + 10], 17, -42063)\n            b = md5ff(b, c, d, a, x[i + 11], 22, -1990404162)\n            a = md5ff(a, b, c, d, x[i + 12], 7, 1804603682)\n            d = md5ff(d, a, b, c, x[i + 13], 12, -40341101)\n            c = md5ff(c, d, a, b, x[i + 14], 17, -1502002290)\n            b = md5ff(b, c, d, a, x[i + 15], 22, 1236535329)\n\n            a = md5gg(a, b, c, d, x[i + 1], 5, -165796510)\n            d = md5gg(d, a, b, c, x[i + 6], 9, -1069501632)\n            c = md5gg(c, d, a, b, x[i + 11], 14, 643717713)\n            b = md5gg(b, c, d, a, x[i], 20, -373897302)\n            a = md5gg(a, b, c, d, x[i + 5], 5, -701558691)\n            d = md5gg(d, a, b, c, x[i + 10], 9, 38016083)\n            c = md5gg(c, d, a, b, x[i + 15], 14, -660478335)\n            b = md5gg(b, c, d, a, x[i + 4], 20, -405537848)\n            a = md5gg(a, b, c, d, x[i + 9], 5, 568446438)\n            d = md5gg(d, a, b, c, x[i + 14], 9, -1019803690)\n            c = md5gg(c, d, a, b, x[i + 3], 14, -187363961)\n            b = md5gg(b, c, d, a, x[i + 8], 20, 1163531501)\n            a = md5gg(a, b, c, d, x[i + 13], 5, -1444681467)\n            d = md5gg(d, a, b, c, x[i + 2], 9, -51403784)\n            c = md5gg(c, d, a, b, x[i + 7], 14, 1735328473)\n            b = md5gg(b, c, d, a, x[i + 12], 20, -1926607734)\n\n            a = md5hh(a, b, c, d, x[i + 5], 4, -378558)\n            d = md5hh(d, a, b, c, x[i + 8], 11, -2022574463)\n            c = md5hh(c, d, a, b, x[i + 11], 16, 1839030562)\n            b = md5hh(b, c, d, a, x[i + 14], 23, -35309556)\n            a = md5hh(a, b, c, d, x[i + 1], 4, -1530992060)\n            d = md5hh(d, a, b, c, x[i + 4], 11, 1272893353)\n            c = md5hh(c, d, a, b, x[i + 7], 16, -155497632)\n            b = md5hh(b, c, d, a, x[i + 10], 23, -1094730640)\n            a = md5hh(a, b, c, d, x[i + 13], 4, 681279174)\n            d = md5hh(d, a, b, c, x[i], 11, -358537222)\n            c = md5hh(c, d, a, b, x[i + 3], 16, -722521979)\n            b = md5hh(b, c, d, a, x[i + 6], 23, 76029189)\n            a = md5hh(a, b, c, d, x[i + 9], 4, -640364487)\n            d = md5hh(d, a, b, c, x[i + 12], 11, -421815835)\n            c = md5hh(c, d, a, b, x[i + 15], 16, 530742520)\n            b = md5hh(b, c, d, a, x[i + 2], 23, -995338651)\n\n            a = md5ii(a, b, c, d, x[i], 6, -198630844)\n            d = md5ii(d, a, b, c, x[i + 7], 10, 1126891415)\n            c = md5ii(c, d, a, b, x[i + 14], 15, -1416354905)\n            b = md5ii(b, c, d, a, x[i + 5], 21, -57434055)\n            a = md5ii(a, b, c, d, x[i + 12], 6, 1700485571)\n            d = md5ii(d, a, b, c, x[i + 3], 10, -1894986606)\n            c = md5ii(c, d, a, b, x[i + 10], 15, -1051523)\n            b = md5ii(b, c, d, a, x[i + 1], 21, -2054922799)\n            a = md5ii(a, b, c, d, x[i + 8], 6, 1873313359)\n            d = md5ii(d, a, b, c, x[i + 15], 10, -30611744)\n            c = md5ii(c, d, a, b, x[i + 6], 15, -1560198380)\n            b = md5ii(b, c, d, a, x[i + 13], 21, 1309151649)\n            a = md5ii(a, b, c, d, x[i + 4], 6, -145523070)\n            d = md5ii(d, a, b, c, x[i + 11], 10, -1120210379)\n            c = md5ii(c, d, a, b, x[i + 2], 15, 718787259)\n            b = md5ii(b, c, d, a, x[i + 9], 21, -343485551)\n\n            a = safeAdd(a, olda)\n            b = safeAdd(b, oldb)\n            c = safeAdd(c, oldc)\n            d = safeAdd(d, oldd)\n        }\n        return [a, b, c, d]\n    }\n\n    /*\n    * Convert an array of little-endian words to a string\n    */\n    function binl2rstr(input) {\n        var i\n        var output = ''\n        var length32 = input.length * 32\n        for (i = 0; i < length32; i += 8) {\n            output += String.fromCharCode((input[i >> 5] >>> (i % 32)) & 0xff)\n        }\n        return output\n    }\n\n    /*\n    * Convert a raw string to an array of little-endian words\n    * Characters >255 have their high-byte silently ignored.\n    */\n    function rstr2binl(input) {\n        var i\n        var output = []\n        output[(input.length >> 2) - 1] = undefined\n        for (i = 0; i < output.length; i += 1) {\n            output[i] = 0\n        }\n        var length8 = input.length * 8\n        for (i = 0; i < length8; i += 8) {\n            output[i >> 5] |= (input.charCodeAt(i / 8) & 0xff) << (i % 32)\n        }\n        return output\n    }\n\n    /*\n    * Calculate the MD5 of a raw string\n    */\n    function rstrMD5(s) {\n        return binl2rstr(binlMD5(rstr2binl(s), s.length * 8))\n    }\n\n    /*\n    * Calculate the HMAC-MD5, of a key and some data (raw strings)\n    */\n    function rstrHMACMD5(key, data) {\n        var i\n        var bkey = rstr2binl(key)\n        var ipad = []\n        var opad = []\n        var hash\n        ipad[15] = opad[15] = undefined\n        if (bkey.length > 16) {\n            bkey = binlMD5(bkey, key.length * 8)\n        }\n        for (i = 0; i < 16; i += 1) {\n            ipad[i] = bkey[i] ^ 0x36363636\n            opad[i] = bkey[i] ^ 0x5c5c5c5c\n        }\n        hash = binlMD5(ipad.concat(rstr2binl(data)), 512 + data.length * 8)\n        return binl2rstr(binlMD5(opad.concat(hash), 512 + 128))\n    }\n\n    /*\n    * Convert a raw string to a hex string\n    */\n    function rstr2hex(input) {\n        var hexTab = '0123456789abcdef'\n        var output = ''\n        var x\n        var i\n        for (i = 0; i < input.length; i += 1) {\n            x = input.charCodeAt(i)\n            output += hexTab.charAt((x >>> 4) & 0x0f) + hexTab.charAt(x & 0x0f)\n        }\n        return output\n    }\n\n    /*\n    * Encode a string as utf-8\n    */\n    function str2rstrUTF8(input) {\n        return unescape(encodeURIComponent(input))\n    }\n\n    /*\n    * Take string arguments and return either raw or hex encoded strings\n    */\n    function rawMD5(s) {\n        return rstrMD5(str2rstrUTF8(s))\n    }\n    function hexMD5(s) {\n        return rstr2hex(rawMD5(s))\n    }\n    function rawHMACMD5(k, d) {\n        return rstrHMACMD5(str2rstrUTF8(k), str2rstrUTF8(d))\n    }\n    function hexHMACMD5(k, d) {\n        return rstr2hex(rawHMACMD5(k, d))\n    }\n\n    function md5(string, key, raw) {\n        if (!key) {\n            if (!raw) {\n                return hexMD5(string)\n            }\n            return rawMD5(string)\n        }\n        if (!raw) {\n            return hexHMACMD5(key, string)\n        }\n        return rawHMACMD5(key, string)\n    }\n\n    if (typeof define === 'function' && define.amd) {\n        define(function () {\n            return md5\n        })\n    } else if (typeof module === 'object' && module.exports) {\n        module.exports = md5\n    } else {\n        $.md5 = md5\n    }\n})(this)\n","date":"2018-05-17T16:03:48.366Z","updated":"2018-05-17T14:18:31.924Z","path":"assets/js/md5.js","layout":"false","title":"","comments":1,"_id":"cjharmvx9000omgmcuceqhlmn","content":"/*\n * JavaScript MD5\n * https://github.com/blueimp/JavaScript-MD5\n *\n * Copyright 2011, Sebastian Tschan\n * https://blueimp.net\n *\n * Licensed under the MIT license:\n * https://opensource.org/licenses/MIT\n *\n * Based on\n * A JavaScript implementation of the RSA Data Security, Inc. MD5 Message\n * Digest Algorithm, as defined in RFC 1321.\n * Version 2.2 Copyright (C) Paul Johnston 1999 - 2009\n * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet\n * Distributed under the BSD License\n * See http://pajhome.org.uk/crypt/md5 for more info.\n */\n\n/* global define */\n\n; (function ($) {\n    'use strict'\n\n    /*\n    * Add integers, wrapping at 2^32. This uses 16-bit operations internally\n    * to work around bugs in some JS interpreters.\n    */\n    function safeAdd(x, y) {\n        var lsw = (x & 0xffff) + (y & 0xffff)\n        var msw = (x >> 16) + (y >> 16) + (lsw >> 16)\n        return (msw << 16) | (lsw & 0xffff)\n    }\n\n    /*\n    * Bitwise rotate a 32-bit number to the left.\n    */\n    function bitRotateLeft(num, cnt) {\n        return (num << cnt) | (num >>> (32 - cnt))\n    }\n\n    /*\n    * These functions implement the four basic operations the algorithm uses.\n    */\n    function md5cmn(q, a, b, x, s, t) {\n        return safeAdd(bitRotateLeft(safeAdd(safeAdd(a, q), safeAdd(x, t)), s), b)\n    }\n    function md5ff(a, b, c, d, x, s, t) {\n        return md5cmn((b & c) | (~b & d), a, b, x, s, t)\n    }\n    function md5gg(a, b, c, d, x, s, t) {\n        return md5cmn((b & d) | (c & ~d), a, b, x, s, t)\n    }\n    function md5hh(a, b, c, d, x, s, t) {\n        return md5cmn(b ^ c ^ d, a, b, x, s, t)\n    }\n    function md5ii(a, b, c, d, x, s, t) {\n        return md5cmn(c ^ (b | ~d), a, b, x, s, t)\n    }\n\n    /*\n    * Calculate the MD5 of an array of little-endian words, and a bit length.\n    */\n    function binlMD5(x, len) {\n        /* append padding */\n        x[len >> 5] |= 0x80 << (len % 32)\n        x[((len + 64) >>> 9 << 4) + 14] = len\n\n        var i\n        var olda\n        var oldb\n        var oldc\n        var oldd\n        var a = 1732584193\n        var b = -271733879\n        var c = -1732584194\n        var d = 271733878\n\n        for (i = 0; i < x.length; i += 16) {\n            olda = a\n            oldb = b\n            oldc = c\n            oldd = d\n\n            a = md5ff(a, b, c, d, x[i], 7, -680876936)\n            d = md5ff(d, a, b, c, x[i + 1], 12, -389564586)\n            c = md5ff(c, d, a, b, x[i + 2], 17, 606105819)\n            b = md5ff(b, c, d, a, x[i + 3], 22, -1044525330)\n            a = md5ff(a, b, c, d, x[i + 4], 7, -176418897)\n            d = md5ff(d, a, b, c, x[i + 5], 12, 1200080426)\n            c = md5ff(c, d, a, b, x[i + 6], 17, -1473231341)\n            b = md5ff(b, c, d, a, x[i + 7], 22, -45705983)\n            a = md5ff(a, b, c, d, x[i + 8], 7, 1770035416)\n            d = md5ff(d, a, b, c, x[i + 9], 12, -1958414417)\n            c = md5ff(c, d, a, b, x[i + 10], 17, -42063)\n            b = md5ff(b, c, d, a, x[i + 11], 22, -1990404162)\n            a = md5ff(a, b, c, d, x[i + 12], 7, 1804603682)\n            d = md5ff(d, a, b, c, x[i + 13], 12, -40341101)\n            c = md5ff(c, d, a, b, x[i + 14], 17, -1502002290)\n            b = md5ff(b, c, d, a, x[i + 15], 22, 1236535329)\n\n            a = md5gg(a, b, c, d, x[i + 1], 5, -165796510)\n            d = md5gg(d, a, b, c, x[i + 6], 9, -1069501632)\n            c = md5gg(c, d, a, b, x[i + 11], 14, 643717713)\n            b = md5gg(b, c, d, a, x[i], 20, -373897302)\n            a = md5gg(a, b, c, d, x[i + 5], 5, -701558691)\n            d = md5gg(d, a, b, c, x[i + 10], 9, 38016083)\n            c = md5gg(c, d, a, b, x[i + 15], 14, -660478335)\n            b = md5gg(b, c, d, a, x[i + 4], 20, -405537848)\n            a = md5gg(a, b, c, d, x[i + 9], 5, 568446438)\n            d = md5gg(d, a, b, c, x[i + 14], 9, -1019803690)\n            c = md5gg(c, d, a, b, x[i + 3], 14, -187363961)\n            b = md5gg(b, c, d, a, x[i + 8], 20, 1163531501)\n            a = md5gg(a, b, c, d, x[i + 13], 5, -1444681467)\n            d = md5gg(d, a, b, c, x[i + 2], 9, -51403784)\n            c = md5gg(c, d, a, b, x[i + 7], 14, 1735328473)\n            b = md5gg(b, c, d, a, x[i + 12], 20, -1926607734)\n\n            a = md5hh(a, b, c, d, x[i + 5], 4, -378558)\n            d = md5hh(d, a, b, c, x[i + 8], 11, -2022574463)\n            c = md5hh(c, d, a, b, x[i + 11], 16, 1839030562)\n            b = md5hh(b, c, d, a, x[i + 14], 23, -35309556)\n            a = md5hh(a, b, c, d, x[i + 1], 4, -1530992060)\n            d = md5hh(d, a, b, c, x[i + 4], 11, 1272893353)\n            c = md5hh(c, d, a, b, x[i + 7], 16, -155497632)\n            b = md5hh(b, c, d, a, x[i + 10], 23, -1094730640)\n            a = md5hh(a, b, c, d, x[i + 13], 4, 681279174)\n            d = md5hh(d, a, b, c, x[i], 11, -358537222)\n            c = md5hh(c, d, a, b, x[i + 3], 16, -722521979)\n            b = md5hh(b, c, d, a, x[i + 6], 23, 76029189)\n            a = md5hh(a, b, c, d, x[i + 9], 4, -640364487)\n            d = md5hh(d, a, b, c, x[i + 12], 11, -421815835)\n            c = md5hh(c, d, a, b, x[i + 15], 16, 530742520)\n            b = md5hh(b, c, d, a, x[i + 2], 23, -995338651)\n\n            a = md5ii(a, b, c, d, x[i], 6, -198630844)\n            d = md5ii(d, a, b, c, x[i + 7], 10, 1126891415)\n            c = md5ii(c, d, a, b, x[i + 14], 15, -1416354905)\n            b = md5ii(b, c, d, a, x[i + 5], 21, -57434055)\n            a = md5ii(a, b, c, d, x[i + 12], 6, 1700485571)\n            d = md5ii(d, a, b, c, x[i + 3], 10, -1894986606)\n            c = md5ii(c, d, a, b, x[i + 10], 15, -1051523)\n            b = md5ii(b, c, d, a, x[i + 1], 21, -2054922799)\n            a = md5ii(a, b, c, d, x[i + 8], 6, 1873313359)\n            d = md5ii(d, a, b, c, x[i + 15], 10, -30611744)\n            c = md5ii(c, d, a, b, x[i + 6], 15, -1560198380)\n            b = md5ii(b, c, d, a, x[i + 13], 21, 1309151649)\n            a = md5ii(a, b, c, d, x[i + 4], 6, -145523070)\n            d = md5ii(d, a, b, c, x[i + 11], 10, -1120210379)\n            c = md5ii(c, d, a, b, x[i + 2], 15, 718787259)\n            b = md5ii(b, c, d, a, x[i + 9], 21, -343485551)\n\n            a = safeAdd(a, olda)\n            b = safeAdd(b, oldb)\n            c = safeAdd(c, oldc)\n            d = safeAdd(d, oldd)\n        }\n        return [a, b, c, d]\n    }\n\n    /*\n    * Convert an array of little-endian words to a string\n    */\n    function binl2rstr(input) {\n        var i\n        var output = ''\n        var length32 = input.length * 32\n        for (i = 0; i < length32; i += 8) {\n            output += String.fromCharCode((input[i >> 5] >>> (i % 32)) & 0xff)\n        }\n        return output\n    }\n\n    /*\n    * Convert a raw string to an array of little-endian words\n    * Characters >255 have their high-byte silently ignored.\n    */\n    function rstr2binl(input) {\n        var i\n        var output = []\n        output[(input.length >> 2) - 1] = undefined\n        for (i = 0; i < output.length; i += 1) {\n            output[i] = 0\n        }\n        var length8 = input.length * 8\n        for (i = 0; i < length8; i += 8) {\n            output[i >> 5] |= (input.charCodeAt(i / 8) & 0xff) << (i % 32)\n        }\n        return output\n    }\n\n    /*\n    * Calculate the MD5 of a raw string\n    */\n    function rstrMD5(s) {\n        return binl2rstr(binlMD5(rstr2binl(s), s.length * 8))\n    }\n\n    /*\n    * Calculate the HMAC-MD5, of a key and some data (raw strings)\n    */\n    function rstrHMACMD5(key, data) {\n        var i\n        var bkey = rstr2binl(key)\n        var ipad = []\n        var opad = []\n        var hash\n        ipad[15] = opad[15] = undefined\n        if (bkey.length > 16) {\n            bkey = binlMD5(bkey, key.length * 8)\n        }\n        for (i = 0; i < 16; i += 1) {\n            ipad[i] = bkey[i] ^ 0x36363636\n            opad[i] = bkey[i] ^ 0x5c5c5c5c\n        }\n        hash = binlMD5(ipad.concat(rstr2binl(data)), 512 + data.length * 8)\n        return binl2rstr(binlMD5(opad.concat(hash), 512 + 128))\n    }\n\n    /*\n    * Convert a raw string to a hex string\n    */\n    function rstr2hex(input) {\n        var hexTab = '0123456789abcdef'\n        var output = ''\n        var x\n        var i\n        for (i = 0; i < input.length; i += 1) {\n            x = input.charCodeAt(i)\n            output += hexTab.charAt((x >>> 4) & 0x0f) + hexTab.charAt(x & 0x0f)\n        }\n        return output\n    }\n\n    /*\n    * Encode a string as utf-8\n    */\n    function str2rstrUTF8(input) {\n        return unescape(encodeURIComponent(input))\n    }\n\n    /*\n    * Take string arguments and return either raw or hex encoded strings\n    */\n    function rawMD5(s) {\n        return rstrMD5(str2rstrUTF8(s))\n    }\n    function hexMD5(s) {\n        return rstr2hex(rawMD5(s))\n    }\n    function rawHMACMD5(k, d) {\n        return rstrHMACMD5(str2rstrUTF8(k), str2rstrUTF8(d))\n    }\n    function hexHMACMD5(k, d) {\n        return rstr2hex(rawHMACMD5(k, d))\n    }\n\n    function md5(string, key, raw) {\n        if (!key) {\n            if (!raw) {\n                return hexMD5(string)\n            }\n            return rawMD5(string)\n        }\n        if (!raw) {\n            return hexHMACMD5(key, string)\n        }\n        return rawHMACMD5(key, string)\n    }\n\n    if (typeof define === 'function' && define.amd) {\n        define(function () {\n            return md5\n        })\n    } else if (typeof module === 'object' && module.exports) {\n        module.exports = md5\n    } else {\n        $.md5 = md5\n    }\n})(this)\n","site":{"data":{}},"excerpt":"","more":"/*\n * JavaScript MD5\n * https://github.com/blueimp/JavaScript-MD5\n *\n * Copyright 2011, Sebastian Tschan\n * https://blueimp.net\n *\n * Licensed under the MIT license:\n * https://opensource.org/licenses/MIT\n *\n * Based on\n * A JavaScript implementation of the RSA Data Security, Inc. MD5 Message\n * Digest Algorithm, as defined in RFC 1321.\n * Version 2.2 Copyright (C) Paul Johnston 1999 - 2009\n * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet\n * Distributed under the BSD License\n * See http://pajhome.org.uk/crypt/md5 for more info.\n */\n\n/* global define */\n\n; (function ($) {\n    'use strict'\n\n    /*\n    * Add integers, wrapping at 2^32. This uses 16-bit operations internally\n    * to work around bugs in some JS interpreters.\n    */\n    function safeAdd(x, y) {\n        var lsw = (x & 0xffff) + (y & 0xffff)\n        var msw = (x >> 16) + (y >> 16) + (lsw >> 16)\n        return (msw << 16) | (lsw & 0xffff)\n    }\n\n    /*\n    * Bitwise rotate a 32-bit number to the left.\n    */\n    function bitRotateLeft(num, cnt) {\n        return (num << cnt) | (num >>> (32 - cnt))\n    }\n\n    /*\n    * These functions implement the four basic operations the algorithm uses.\n    */\n    function md5cmn(q, a, b, x, s, t) {\n        return safeAdd(bitRotateLeft(safeAdd(safeAdd(a, q), safeAdd(x, t)), s), b)\n    }\n    function md5ff(a, b, c, d, x, s, t) {\n        return md5cmn((b & c) | (~b & d), a, b, x, s, t)\n    }\n    function md5gg(a, b, c, d, x, s, t) {\n        return md5cmn((b & d) | (c & ~d), a, b, x, s, t)\n    }\n    function md5hh(a, b, c, d, x, s, t) {\n        return md5cmn(b ^ c ^ d, a, b, x, s, t)\n    }\n    function md5ii(a, b, c, d, x, s, t) {\n        return md5cmn(c ^ (b | ~d), a, b, x, s, t)\n    }\n\n    /*\n    * Calculate the MD5 of an array of little-endian words, and a bit length.\n    */\n    function binlMD5(x, len) {\n        /* append padding */\n        x[len >> 5] |= 0x80 << (len % 32)\n        x[((len + 64) >>> 9 << 4) + 14] = len\n\n        var i\n        var olda\n        var oldb\n        var oldc\n        var oldd\n        var a = 1732584193\n        var b = -271733879\n        var c = -1732584194\n        var d = 271733878\n\n        for (i = 0; i < x.length; i += 16) {\n            olda = a\n            oldb = b\n            oldc = c\n            oldd = d\n\n            a = md5ff(a, b, c, d, x[i], 7, -680876936)\n            d = md5ff(d, a, b, c, x[i + 1], 12, -389564586)\n            c = md5ff(c, d, a, b, x[i + 2], 17, 606105819)\n            b = md5ff(b, c, d, a, x[i + 3], 22, -1044525330)\n            a = md5ff(a, b, c, d, x[i + 4], 7, -176418897)\n            d = md5ff(d, a, b, c, x[i + 5], 12, 1200080426)\n            c = md5ff(c, d, a, b, x[i + 6], 17, -1473231341)\n            b = md5ff(b, c, d, a, x[i + 7], 22, -45705983)\n            a = md5ff(a, b, c, d, x[i + 8], 7, 1770035416)\n            d = md5ff(d, a, b, c, x[i + 9], 12, -1958414417)\n            c = md5ff(c, d, a, b, x[i + 10], 17, -42063)\n            b = md5ff(b, c, d, a, x[i + 11], 22, -1990404162)\n            a = md5ff(a, b, c, d, x[i + 12], 7, 1804603682)\n            d = md5ff(d, a, b, c, x[i + 13], 12, -40341101)\n            c = md5ff(c, d, a, b, x[i + 14], 17, -1502002290)\n            b = md5ff(b, c, d, a, x[i + 15], 22, 1236535329)\n\n            a = md5gg(a, b, c, d, x[i + 1], 5, -165796510)\n            d = md5gg(d, a, b, c, x[i + 6], 9, -1069501632)\n            c = md5gg(c, d, a, b, x[i + 11], 14, 643717713)\n            b = md5gg(b, c, d, a, x[i], 20, -373897302)\n            a = md5gg(a, b, c, d, x[i + 5], 5, -701558691)\n            d = md5gg(d, a, b, c, x[i + 10], 9, 38016083)\n            c = md5gg(c, d, a, b, x[i + 15], 14, -660478335)\n            b = md5gg(b, c, d, a, x[i + 4], 20, -405537848)\n            a = md5gg(a, b, c, d, x[i + 9], 5, 568446438)\n            d = md5gg(d, a, b, c, x[i + 14], 9, -1019803690)\n            c = md5gg(c, d, a, b, x[i + 3], 14, -187363961)\n            b = md5gg(b, c, d, a, x[i + 8], 20, 1163531501)\n            a = md5gg(a, b, c, d, x[i + 13], 5, -1444681467)\n            d = md5gg(d, a, b, c, x[i + 2], 9, -51403784)\n            c = md5gg(c, d, a, b, x[i + 7], 14, 1735328473)\n            b = md5gg(b, c, d, a, x[i + 12], 20, -1926607734)\n\n            a = md5hh(a, b, c, d, x[i + 5], 4, -378558)\n            d = md5hh(d, a, b, c, x[i + 8], 11, -2022574463)\n            c = md5hh(c, d, a, b, x[i + 11], 16, 1839030562)\n            b = md5hh(b, c, d, a, x[i + 14], 23, -35309556)\n            a = md5hh(a, b, c, d, x[i + 1], 4, -1530992060)\n            d = md5hh(d, a, b, c, x[i + 4], 11, 1272893353)\n            c = md5hh(c, d, a, b, x[i + 7], 16, -155497632)\n            b = md5hh(b, c, d, a, x[i + 10], 23, -1094730640)\n            a = md5hh(a, b, c, d, x[i + 13], 4, 681279174)\n            d = md5hh(d, a, b, c, x[i], 11, -358537222)\n            c = md5hh(c, d, a, b, x[i + 3], 16, -722521979)\n            b = md5hh(b, c, d, a, x[i + 6], 23, 76029189)\n            a = md5hh(a, b, c, d, x[i + 9], 4, -640364487)\n            d = md5hh(d, a, b, c, x[i + 12], 11, -421815835)\n            c = md5hh(c, d, a, b, x[i + 15], 16, 530742520)\n            b = md5hh(b, c, d, a, x[i + 2], 23, -995338651)\n\n            a = md5ii(a, b, c, d, x[i], 6, -198630844)\n            d = md5ii(d, a, b, c, x[i + 7], 10, 1126891415)\n            c = md5ii(c, d, a, b, x[i + 14], 15, -1416354905)\n            b = md5ii(b, c, d, a, x[i + 5], 21, -57434055)\n            a = md5ii(a, b, c, d, x[i + 12], 6, 1700485571)\n            d = md5ii(d, a, b, c, x[i + 3], 10, -1894986606)\n            c = md5ii(c, d, a, b, x[i + 10], 15, -1051523)\n            b = md5ii(b, c, d, a, x[i + 1], 21, -2054922799)\n            a = md5ii(a, b, c, d, x[i + 8], 6, 1873313359)\n            d = md5ii(d, a, b, c, x[i + 15], 10, -30611744)\n            c = md5ii(c, d, a, b, x[i + 6], 15, -1560198380)\n            b = md5ii(b, c, d, a, x[i + 13], 21, 1309151649)\n            a = md5ii(a, b, c, d, x[i + 4], 6, -145523070)\n            d = md5ii(d, a, b, c, x[i + 11], 10, -1120210379)\n            c = md5ii(c, d, a, b, x[i + 2], 15, 718787259)\n            b = md5ii(b, c, d, a, x[i + 9], 21, -343485551)\n\n            a = safeAdd(a, olda)\n            b = safeAdd(b, oldb)\n            c = safeAdd(c, oldc)\n            d = safeAdd(d, oldd)\n        }\n        return [a, b, c, d]\n    }\n\n    /*\n    * Convert an array of little-endian words to a string\n    */\n    function binl2rstr(input) {\n        var i\n        var output = ''\n        var length32 = input.length * 32\n        for (i = 0; i < length32; i += 8) {\n            output += String.fromCharCode((input[i >> 5] >>> (i % 32)) & 0xff)\n        }\n        return output\n    }\n\n    /*\n    * Convert a raw string to an array of little-endian words\n    * Characters >255 have their high-byte silently ignored.\n    */\n    function rstr2binl(input) {\n        var i\n        var output = []\n        output[(input.length >> 2) - 1] = undefined\n        for (i = 0; i < output.length; i += 1) {\n            output[i] = 0\n        }\n        var length8 = input.length * 8\n        for (i = 0; i < length8; i += 8) {\n            output[i >> 5] |= (input.charCodeAt(i / 8) & 0xff) << (i % 32)\n        }\n        return output\n    }\n\n    /*\n    * Calculate the MD5 of a raw string\n    */\n    function rstrMD5(s) {\n        return binl2rstr(binlMD5(rstr2binl(s), s.length * 8))\n    }\n\n    /*\n    * Calculate the HMAC-MD5, of a key and some data (raw strings)\n    */\n    function rstrHMACMD5(key, data) {\n        var i\n        var bkey = rstr2binl(key)\n        var ipad = []\n        var opad = []\n        var hash\n        ipad[15] = opad[15] = undefined\n        if (bkey.length > 16) {\n            bkey = binlMD5(bkey, key.length * 8)\n        }\n        for (i = 0; i < 16; i += 1) {\n            ipad[i] = bkey[i] ^ 0x36363636\n            opad[i] = bkey[i] ^ 0x5c5c5c5c\n        }\n        hash = binlMD5(ipad.concat(rstr2binl(data)), 512 + data.length * 8)\n        return binl2rstr(binlMD5(opad.concat(hash), 512 + 128))\n    }\n\n    /*\n    * Convert a raw string to a hex string\n    */\n    function rstr2hex(input) {\n        var hexTab = '0123456789abcdef'\n        var output = ''\n        var x\n        var i\n        for (i = 0; i < input.length; i += 1) {\n            x = input.charCodeAt(i)\n            output += hexTab.charAt((x >>> 4) & 0x0f) + hexTab.charAt(x & 0x0f)\n        }\n        return output\n    }\n\n    /*\n    * Encode a string as utf-8\n    */\n    function str2rstrUTF8(input) {\n        return unescape(encodeURIComponent(input))\n    }\n\n    /*\n    * Take string arguments and return either raw or hex encoded strings\n    */\n    function rawMD5(s) {\n        return rstrMD5(str2rstrUTF8(s))\n    }\n    function hexMD5(s) {\n        return rstr2hex(rawMD5(s))\n    }\n    function rawHMACMD5(k, d) {\n        return rstrHMACMD5(str2rstrUTF8(k), str2rstrUTF8(d))\n    }\n    function hexHMACMD5(k, d) {\n        return rstr2hex(rawHMACMD5(k, d))\n    }\n\n    function md5(string, key, raw) {\n        if (!key) {\n            if (!raw) {\n                return hexMD5(string)\n            }\n            return rawMD5(string)\n        }\n        if (!raw) {\n            return hexHMACMD5(key, string)\n        }\n        return rawHMACMD5(key, string)\n    }\n\n    if (typeof define === 'function' && define.amd) {\n        define(function () {\n            return md5\n        })\n    } else if (typeof module === 'object' && module.exports) {\n        module.exports = md5\n    } else {\n        $.md5 = md5\n    }\n})(this)\n"}],"Post":[{"_content":"","source":"_drafts/2018-03-19-Quality-of-game.md","raw":"","slug":"2018-03-19-Quality-of-game","published":0,"date":"2018-03-19T01:17:20.091Z","updated":"2018-03-19T01:21:35.982Z","title":"","comments":1,"layout":"post","photos":[],"link":"","_id":"cjharmvs90000mgmc0ut8j2rg","content":"","site":{"data":{}},"excerpt":"","more":""},{"layout":"post","title":"Mac上简单的视频制作技巧","comments":1,"_content":"\n### 拼接视频\n\n只是拼接视频, 可以用QuickTime. After opening a video, `Edit > Add Clip to End...` to add another video to end.\n\n\n### 视音分离 🌌\n\b\b`iMovie` 添加视频到下面一栏后, 右键点击`dispatch`\n\n# ","source":"_drafts/\bmac-simple-video-production.md","raw":"---\nlayout: post\ntitle:  \"Mac上简单的视频制作技巧\"\n# date: '2018-03-21 10:11:47'\ncomments: true\n---\n\n### 拼接视频\n\n只是拼接视频, 可以用QuickTime. After opening a video, `Edit > Add Clip to End...` to add another video to end.\n\n\n### 视音分离 🌌\n\b\b`iMovie` 添加视频到下面一栏后, 右键点击`dispatch`\n\n# ","slug":"\bmac-simple-video-production","published":0,"date":"2018-03-25T00:12:26.742Z","updated":"2018-04-02T03:36:48.485Z","photos":[],"link":"","_id":"cjharmvte0001mgmc1nd3v84s","content":"<h3 id=\"拼接视频\"><a href=\"#拼接视频\" class=\"headerlink\" title=\"拼接视频\"></a>拼接视频</h3><p>只是拼接视频, 可以用QuickTime. After opening a video, <code>Edit &gt; Add Clip to End...</code> to add another video to end.</p>\n<h3 id=\"视音分离-🌌\"><a href=\"#视音分离-🌌\" class=\"headerlink\" title=\"视音分离 🌌\"></a>视音分离 🌌</h3><p>\b\b<code>iMovie</code> 添加视频到下面一栏后, 右键点击<code>dispatch</code></p>\n<p># </p>\n","site":{"data":{}},"excerpt":"","more":"<h3 id=\"拼接视频\"><a href=\"#拼接视频\" class=\"headerlink\" title=\"拼接视频\"></a>拼接视频</h3><p>只是拼接视频, 可以用QuickTime. After opening a video, <code>Edit &gt; Add Clip to End...</code> to add another video to end.</p>\n<h3 id=\"视音分离-🌌\"><a href=\"#视音分离-🌌\" class=\"headerlink\" title=\"视音分离 🌌\"></a>视音分离 🌌</h3><p>\b\b<code>iMovie</code> 添加视频到下面一栏后, 右键点击<code>dispatch</code></p>\n<p># </p>\n"},{"layout":"post","title":"","excerpt":"","comments":1,"_content":"","source":"_drafts/About-Cooperation.md","raw":"---\nlayout: post\ntitle:  \nexcerpt: >-\n    123\ncomments: true\n---","slug":"About-Cooperation","published":0,"date":"2018-03-21T07:52:13.148Z","updated":"2018-03-22T07:39:23.301Z","photos":[],"link":"","_id":"cjharmvtk0002mgmc8e0q58bo","content":"","site":{"data":{}},"more":""},{"layout":"post","title":"通过编程来学习线性代数2","comments":1,"_content":"\n\n### 全排列及其逆序数\n\n`全排列`:将n个不同的元素排成一列\n\n```\n\n1 > 1\n\n2 > 1,2 | 2,1\n\n3 > 1,2,3 | 1,3,2 | 2,1,3 | 2,3,1 | 3,1,2 | 3,2,1\n\n...\n\n```\n\n从`排列组合`的知识中可以知道: `n`个不同的元素, 从中选取一个放到第一位, 有`n`钟选法, 剩下`n-1`个.\n\n继续从\b这`n-1`各种继续选取, 放到第二位, 有`n-1`钟选法.\n\n以此类推, 直到\b选完为止.\n\nn个元素所有排列的种数: `n! = n*(n-1)*...*3*2*1`\n\n\n这里我们用[`Heap's algorithm`](https://en.wikipedia.org/wiki/Heap%27s_algorithm)算法来生成每一项:\n\n```js\n// Heap's algorithm\nfunction generate(n, A) {\n    if(n==1) {\n        console.log(A)\n    }\n    else {\n        for(let i=0; i<n-1; i++) {\n            generate(n-1, A)\n            if(n%2==0) {\n                swap(A, i, n-1)\n            }\n            else {\n                swap(A, 0, n-1)\n            }\n        }\n        generate(n-1, A)\n    }\n}\n```\n\n可以在浏览器的控制台中试一下, 如`generate(3, [1, 2, 3])`或者``generate(4, ['a', 'b', 'c', 'd'])``, 字符数字都行, 每一项唯一\n\n这里我们需要用一个数组来保存每一项\n\n```js\nlet arr = []\nfunction generate(n, A) {\n    if(n==1) {\n        console.log(A)\n        arr.push(A)\n    }\n    ...\n}\n\n```\n\n得到每一项后, 就可以进行计算逆序数了. 一个排列的逆序数决定了是正或负数.\n","source":"_drafts/2018-03-21-learn-linear-algebra-by-programming-2.md","raw":"---\nlayout: post\ntitle:  \"通过编程来学习线性代数2\"\n# date: '2018-03-21 10:11:47'\ncomments: true\n---\n\n\n### 全排列及其逆序数\n\n`全排列`:将n个不同的元素排成一列\n\n```\n\n1 > 1\n\n2 > 1,2 | 2,1\n\n3 > 1,2,3 | 1,3,2 | 2,1,3 | 2,3,1 | 3,1,2 | 3,2,1\n\n...\n\n```\n\n从`排列组合`的知识中可以知道: `n`个不同的元素, 从中选取一个放到第一位, 有`n`钟选法, 剩下`n-1`个.\n\n继续从\b这`n-1`各种继续选取, 放到第二位, 有`n-1`钟选法.\n\n以此类推, 直到\b选完为止.\n\nn个元素所有排列的种数: `n! = n*(n-1)*...*3*2*1`\n\n\n这里我们用[`Heap's algorithm`](https://en.wikipedia.org/wiki/Heap%27s_algorithm)算法来生成每一项:\n\n```js\n// Heap's algorithm\nfunction generate(n, A) {\n    if(n==1) {\n        console.log(A)\n    }\n    else {\n        for(let i=0; i<n-1; i++) {\n            generate(n-1, A)\n            if(n%2==0) {\n                swap(A, i, n-1)\n            }\n            else {\n                swap(A, 0, n-1)\n            }\n        }\n        generate(n-1, A)\n    }\n}\n```\n\n可以在浏览器的控制台中试一下, 如`generate(3, [1, 2, 3])`或者``generate(4, ['a', 'b', 'c', 'd'])``, 字符数字都行, 每一项唯一\n\n这里我们需要用一个数组来保存每一项\n\n```js\nlet arr = []\nfunction generate(n, A) {\n    if(n==1) {\n        console.log(A)\n        arr.push(A)\n    }\n    ...\n}\n\n```\n\n得到每一项后, 就可以进行计算逆序数了. 一个排列的逆序数决定了是正或负数.\n","slug":"2018-03-21-learn-linear-algebra-by-programming-2","published":0,"date":"2018-03-21T02:16:37.336Z","updated":"2018-04-07T13:31:41.910Z","photos":[],"link":"","_id":"cjharmvtm0003mgmc492cyh2y","content":"<h3 id=\"全排列及其逆序数\"><a href=\"#全排列及其逆序数\" class=\"headerlink\" title=\"全排列及其逆序数\"></a>全排列及其逆序数</h3><p><code>全排列</code>:将n个不同的元素排成一列</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">1 &gt; 1</span><br><span class=\"line\"></span><br><span class=\"line\">2 &gt; 1,2 | 2,1</span><br><span class=\"line\"></span><br><span class=\"line\">3 &gt; 1,2,3 | 1,3,2 | 2,1,3 | 2,3,1 | 3,1,2 | 3,2,1</span><br><span class=\"line\"></span><br><span class=\"line\">...</span><br></pre></td></tr></table></figure>\n<p>从<code>排列组合</code>的知识中可以知道: <code>n</code>个不同的元素, 从中选取一个放到第一位, 有<code>n</code>钟选法, 剩下<code>n-1</code>个.</p>\n<p>继续从\b这<code>n-1</code>各种继续选取, 放到第二位, 有<code>n-1</code>钟选法.</p>\n<p>以此类推, 直到\b选完为止.</p>\n<p>n个元素所有排列的种数: <code>n! = n*(n-1)*...*3*2*1</code></p>\n<p>这里我们用<a href=\"https://en.wikipedia.org/wiki/Heap%27s_algorithm\" target=\"_blank\" rel=\"noopener\"><code>Heap&#39;s algorithm</code></a>算法来生成每一项:</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// Heap's algorithm</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">generate</span>(<span class=\"params\">n, A</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(n==<span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">        <span class=\"built_in\">console</span>.log(A)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">let</span> i=<span class=\"number\">0</span>; i&lt;n<span class=\"number\">-1</span>; i++) &#123;</span><br><span class=\"line\">            generate(n<span class=\"number\">-1</span>, A)</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(n%<span class=\"number\">2</span>==<span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">                swap(A, i, n<span class=\"number\">-1</span>)</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                swap(A, <span class=\"number\">0</span>, n<span class=\"number\">-1</span>)</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        generate(n<span class=\"number\">-1</span>, A)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>可以在浏览器的控制台中试一下, 如<code>generate(3, [1, 2, 3])</code>或者<code>generate(4, [&#39;a&#39;, &#39;b&#39;, &#39;c&#39;, &#39;d&#39;])</code>, 字符数字都行, 每一项唯一</p>\n<p>这里我们需要用一个数组来保存每一项</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> arr = []</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">generate</span>(<span class=\"params\">n, A</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(n==<span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">        <span class=\"built_in\">console</span>.log(A)</span><br><span class=\"line\">        arr.push(A)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    ...</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>得到每一项后, 就可以进行计算逆序数了. 一个排列的逆序数决定了是正或负数.</p>\n","site":{"data":{}},"excerpt":"","more":"<h3 id=\"全排列及其逆序数\"><a href=\"#全排列及其逆序数\" class=\"headerlink\" title=\"全排列及其逆序数\"></a>全排列及其逆序数</h3><p><code>全排列</code>:将n个不同的元素排成一列</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">1 &gt; 1</span><br><span class=\"line\"></span><br><span class=\"line\">2 &gt; 1,2 | 2,1</span><br><span class=\"line\"></span><br><span class=\"line\">3 &gt; 1,2,3 | 1,3,2 | 2,1,3 | 2,3,1 | 3,1,2 | 3,2,1</span><br><span class=\"line\"></span><br><span class=\"line\">...</span><br></pre></td></tr></table></figure>\n<p>从<code>排列组合</code>的知识中可以知道: <code>n</code>个不同的元素, 从中选取一个放到第一位, 有<code>n</code>钟选法, 剩下<code>n-1</code>个.</p>\n<p>继续从\b这<code>n-1</code>各种继续选取, 放到第二位, 有<code>n-1</code>钟选法.</p>\n<p>以此类推, 直到\b选完为止.</p>\n<p>n个元素所有排列的种数: <code>n! = n*(n-1)*...*3*2*1</code></p>\n<p>这里我们用<a href=\"https://en.wikipedia.org/wiki/Heap%27s_algorithm\" target=\"_blank\" rel=\"noopener\"><code>Heap&#39;s algorithm</code></a>算法来生成每一项:</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// Heap's algorithm</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">generate</span>(<span class=\"params\">n, A</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(n==<span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">        <span class=\"built_in\">console</span>.log(A)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">let</span> i=<span class=\"number\">0</span>; i&lt;n<span class=\"number\">-1</span>; i++) &#123;</span><br><span class=\"line\">            generate(n<span class=\"number\">-1</span>, A)</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(n%<span class=\"number\">2</span>==<span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">                swap(A, i, n<span class=\"number\">-1</span>)</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                swap(A, <span class=\"number\">0</span>, n<span class=\"number\">-1</span>)</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        generate(n<span class=\"number\">-1</span>, A)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>可以在浏览器的控制台中试一下, 如<code>generate(3, [1, 2, 3])</code>或者<code>generate(4, [&#39;a&#39;, &#39;b&#39;, &#39;c&#39;, &#39;d&#39;])</code>, 字符数字都行, 每一项唯一</p>\n<p>这里我们需要用一个数组来保存每一项</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> arr = []</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">generate</span>(<span class=\"params\">n, A</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(n==<span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">        <span class=\"built_in\">console</span>.log(A)</span><br><span class=\"line\">        arr.push(A)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    ...</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>得到每一项后, 就可以进行计算逆序数了. 一个排列的逆序数决定了是正或负数.</p>\n"},{"layout":"post","title":"苹果开发第三方库管理工具总结","date":"2018-05-07T06:02:11.000Z","comments":1,"_content":"### Cocoapods\n\n### Carthage\n\n### Swift Package Manager","source":"_drafts/Apple-develops-third-party-library-management-tools.md","raw":"---\nlayout: post\ntitle:  '苹果开发第三方库管理工具总结'\ndate: '2018-05-07 14:02:11'\ncomments: true\n---\n### Cocoapods\n\n### Carthage\n\n### Swift Package Manager","slug":"Apple-develops-third-party-library-management-tools","published":0,"updated":"2018-05-07T06:05:27.607Z","photos":[],"link":"","_id":"cjharmvto0004mgmcn5djt3s0","content":"<h3 id=\"Cocoapods\"><a href=\"#Cocoapods\" class=\"headerlink\" title=\"Cocoapods\"></a>Cocoapods</h3><h3 id=\"Carthage\"><a href=\"#Carthage\" class=\"headerlink\" title=\"Carthage\"></a>Carthage</h3><h3 id=\"Swift-Package-Manager\"><a href=\"#Swift-Package-Manager\" class=\"headerlink\" title=\"Swift Package Manager\"></a>Swift Package Manager</h3>","site":{"data":{}},"excerpt":"","more":"<h3 id=\"Cocoapods\"><a href=\"#Cocoapods\" class=\"headerlink\" title=\"Cocoapods\"></a>Cocoapods</h3><h3 id=\"Carthage\"><a href=\"#Carthage\" class=\"headerlink\" title=\"Carthage\"></a>Carthage</h3><h3 id=\"Swift-Package-Manager\"><a href=\"#Swift-Package-Manager\" class=\"headerlink\" title=\"Swift Package Manager\"></a>Swift Package Manager</h3>"},{"date":"2018-03-15T10:02:10.000Z","_content":"\ntest","source":"_drafts/Create-your-own-blog-via-Github.md","raw":"---\ndate: '2018-03-15 18:02:10'\n---\n\ntest","slug":"Create-your-own-blog-via-Github","published":0,"updated":"2018-03-15T13:38:52.834Z","title":"","comments":1,"layout":"post","photos":[],"link":"","_id":"cjharmvtt0005mgmcmre1kekv","content":"<p>test</p>\n","site":{"data":{}},"excerpt":"","more":"<p>test</p>\n"},{"title":"俗称外挂","_content":"\n将一个计算机中的重复操作用程序去反复操作","source":"_drafts/about-computer-do.md","raw":"---\ntitle: 俗称外挂\n---\n\n将一个计算机中的重复操作用程序去反复操作","slug":"about-computer-do","published":0,"date":"2018-04-24T03:03:36.738Z","updated":"2018-04-25T02:14:22.413Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjharmvtv0006mgmc4x5e4bgb","content":"<p>将一个计算机中的重复操作用程序去反复操作</p>\n","site":{"data":{}},"excerpt":"","more":"<p>将一个计算机中的重复操作用程序去反复操作</p>\n"},{"layout":"post","title":"PS图片拼接","date":"2018-04-09T07:25:13.000Z","_content":"\n最近看到这样一张图片：\n\n![图片拼接实例](/blog/assets/images/ps/stitch0.jpg)\n\n就很想试一下用`PS`来实现类似的效果。\n\n### 分析\n\n图片结构：\n\n- 三张图片\n- 中间处于最下层，另外两张处于上层\n- 拼接处带有阴影效果\n- 拼接处是不规则形状","source":"_drafts/PS-Picture-Stitching.md","raw":"---\nlayout: post\ntitle: PS图片拼接\ndate: '2018-04-09 15:25:13'\n---\n\n最近看到这样一张图片：\n\n![图片拼接实例](/blog/assets/images/ps/stitch0.jpg)\n\n就很想试一下用`PS`来实现类似的效果。\n\n### 分析\n\n图片结构：\n\n- 三张图片\n- 中间处于最下层，另外两张处于上层\n- 拼接处带有阴影效果\n- 拼接处是不规则形状","slug":"PS-Picture-Stitching","published":0,"updated":"2018-05-17T16:28:53.973Z","comments":1,"photos":[],"link":"","_id":"cjharmvtw0007mgmc8hyewwe8","content":"<p>最近看到这样一张图片：</p>\n<p><img src=\"/blog/assets/images/ps/stitch0.jpg\" alt=\"图片拼接实例\"></p>\n<p>就很想试一下用<code>PS</code>来实现类似的效果。</p>\n<h3 id=\"分析\"><a href=\"#分析\" class=\"headerlink\" title=\"分析\"></a>分析</h3><p>图片结构：</p>\n<ul>\n<li>三张图片</li>\n<li>中间处于最下层，另外两张处于上层</li>\n<li>拼接处带有阴影效果</li>\n<li>拼接处是不规则形状</li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<p>最近看到这样一张图片：</p>\n<p><img src=\"/blog/assets/images/ps/stitch0.jpg\" alt=\"图片拼接实例\"></p>\n<p>就很想试一下用<code>PS</code>来实现类似的效果。</p>\n<h3 id=\"分析\"><a href=\"#分析\" class=\"headerlink\" title=\"分析\"></a>分析</h3><p>图片结构：</p>\n<ul>\n<li>三张图片</li>\n<li>中间处于最下层，另外两张处于上层</li>\n<li>拼接处带有阴影效果</li>\n<li>拼接处是不规则形状</li>\n</ul>\n"},{"title":"关于过保期的iPhone进灰尘该不该免费处理","_content":"\n认识的一个人的iPhone摄像机镜头进灰尘了, 但这个手机防尘防水等级是`ip6:尘埃无法进入物体整个直径不能超过外壳的空隙/防强力喷水对着外壳从任何方向强力喷水都不会造成有害影响`, 但是已经过了保修期. 去苹果店问了, 不给处理.","source":"_drafts/iphone-ip6.md","raw":"---\ntitle: 关于过保期的iPhone进灰尘该不该免费处理\n---\n\n认识的一个人的iPhone摄像机镜头进灰尘了, 但这个手机防尘防水等级是`ip6:尘埃无法进入物体整个直径不能超过外壳的空隙/防强力喷水对着外壳从任何方向强力喷水都不会造成有害影响`, 但是已经过了保修期. 去苹果店问了, 不给处理.","slug":"iphone-ip6","published":0,"date":"2018-04-01T11:43:00.079Z","updated":"2018-04-01T11:46:59.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjharmvtz0008mgmc8ltv09nf","content":"<p>认识的一个人的iPhone摄像机镜头进灰尘了, 但这个手机防尘防水等级是<code>ip6:尘埃无法进入物体整个直径不能超过外壳的空隙/防强力喷水对着外壳从任何方向强力喷水都不会造成有害影响</code>, 但是已经过了保修期. 去苹果店问了, 不给处理.</p>\n","site":{"data":{}},"excerpt":"","more":"<p>认识的一个人的iPhone摄像机镜头进灰尘了, 但这个手机防尘防水等级是<code>ip6:尘埃无法进入物体整个直径不能超过外壳的空隙/防强力喷水对着外壳从任何方向强力喷水都不会造成有害影响</code>, 但是已经过了保修期. 去苹果店问了, 不给处理.</p>\n"},{"layout":"post","title":"iPhone拍照技巧分享","comments":1,"_content":"\n最近, `Apple Store` App 更新了, 出现了一个`课程`选项, 可以查看苹果店的一些课程. 我预约了一个拍照课程和一个视频制作课程, \b一方面是去学习学习, 另一方面就是想体验一下苹果店的这种课程服务是如何的. 是免费的.\n\n### 模糊效果\n\n要模糊远处的景物, 将一个物体置于近处, `长按`屏幕, 直到出现提示. 这时移开近处的物体, 就能一直保持模糊效果了.\n\n可以仔细看下面这张图片, 远处的事物是模糊的.\n\n![模糊提示](/blog/assets/images/iphone-take-photo/blur-tip.png)\n\n![模糊效果](/blog/assets/images/iphone-take-photo/blur-class.jpg)\n\n### 网格作用\n\n黄金分割\n\n如何将建筑物拍得宏伟, 选取哪一个\b滤镜合适\n\n景深效果\n\niPhone X的舞台光\n\n如何将人拍的高, 俯视仰视有一个透视效果, 上大下小还是下大上小","source":"_drafts/iphone-take-photo.md","raw":"---\nlayout: post\ntitle:  \"iPhone拍照技巧分享\"\n# date: '2018-03-21 10:11:47'\ncomments: true\n---\n\n最近, `Apple Store` App 更新了, 出现了一个`课程`选项, 可以查看苹果店的一些课程. 我预约了一个拍照课程和一个视频制作课程, \b一方面是去学习学习, 另一方面就是想体验一下苹果店的这种课程服务是如何的. 是免费的.\n\n### 模糊效果\n\n要模糊远处的景物, 将一个物体置于近处, `长按`屏幕, 直到出现提示. 这时移开近处的物体, 就能一直保持模糊效果了.\n\n可以仔细看下面这张图片, 远处的事物是模糊的.\n\n![模糊提示](/blog/assets/images/iphone-take-photo/blur-tip.png)\n\n![模糊效果](/blog/assets/images/iphone-take-photo/blur-class.jpg)\n\n### 网格作用\n\n黄金分割\n\n如何将建筑物拍得宏伟, 选取哪一个\b滤镜合适\n\n景深效果\n\niPhone X的舞台光\n\n如何将人拍的高, 俯视仰视有一个透视效果, 上大下小还是下大上小","slug":"iphone-take-photo","published":0,"date":"2018-03-24T15:49:31.341Z","updated":"2018-05-17T16:28:44.356Z","photos":[],"link":"","_id":"cjharmvu20009mgmcdstlgz1d","content":"<p>最近, <code>Apple Store</code> App 更新了, 出现了一个<code>课程</code>选项, 可以查看苹果店的一些课程. 我预约了一个拍照课程和一个视频制作课程, \b一方面是去学习学习, 另一方面就是想体验一下苹果店的这种课程服务是如何的. 是免费的.</p>\n<h3 id=\"模糊效果\"><a href=\"#模糊效果\" class=\"headerlink\" title=\"模糊效果\"></a>模糊效果</h3><p>要模糊远处的景物, 将一个物体置于近处, <code>长按</code>屏幕, 直到出现提示. 这时移开近处的物体, 就能一直保持模糊效果了.</p>\n<p>可以仔细看下面这张图片, 远处的事物是模糊的.</p>\n<p><img src=\"/blog/assets/images/iphone-take-photo/blur-tip.png\" alt=\"模糊提示\"></p>\n<p><img src=\"/blog/assets/images/iphone-take-photo/blur-class.jpg\" alt=\"模糊效果\"></p>\n<h3 id=\"网格作用\"><a href=\"#网格作用\" class=\"headerlink\" title=\"网格作用\"></a>网格作用</h3><p>黄金分割</p>\n<p>如何将建筑物拍得宏伟, 选取哪一个\b滤镜合适</p>\n<p>景深效果</p>\n<p>iPhone X的舞台光</p>\n<p>如何将人拍的高, 俯视仰视有一个透视效果, 上大下小还是下大上小</p>\n","site":{"data":{}},"excerpt":"","more":"<p>最近, <code>Apple Store</code> App 更新了, 出现了一个<code>课程</code>选项, 可以查看苹果店的一些课程. 我预约了一个拍照课程和一个视频制作课程, \b一方面是去学习学习, 另一方面就是想体验一下苹果店的这种课程服务是如何的. 是免费的.</p>\n<h3 id=\"模糊效果\"><a href=\"#模糊效果\" class=\"headerlink\" title=\"模糊效果\"></a>模糊效果</h3><p>要模糊远处的景物, 将一个物体置于近处, <code>长按</code>屏幕, 直到出现提示. 这时移开近处的物体, 就能一直保持模糊效果了.</p>\n<p>可以仔细看下面这张图片, 远处的事物是模糊的.</p>\n<p><img src=\"/blog/assets/images/iphone-take-photo/blur-tip.png\" alt=\"模糊提示\"></p>\n<p><img src=\"/blog/assets/images/iphone-take-photo/blur-class.jpg\" alt=\"模糊效果\"></p>\n<h3 id=\"网格作用\"><a href=\"#网格作用\" class=\"headerlink\" title=\"网格作用\"></a>网格作用</h3><p>黄金分割</p>\n<p>如何将建筑物拍得宏伟, 选取哪一个\b滤镜合适</p>\n<p>景深效果</p>\n<p>iPhone X的舞台光</p>\n<p>如何将人拍的高, 俯视仰视有一个透视效果, 上大下小还是下大上小</p>\n"},{"layout":"post","title":"title","date":"2018-05-03T08:21:13.000Z","excerpt":"","comments":1,"_content":"\n","source":"_drafts/macOS-app-development.md","raw":"---\nlayout: post\ntitle:  \"title\"\ndate: '2018-05-03 16:21:13'\nexcerpt: >-\n    excerpt\ncomments: true\n---\n\n","slug":"macOS-app-development","published":0,"updated":"2018-05-03T08:21:13.579Z","photos":[],"link":"","_id":"cjharmvuv000amgmcpoo6bjvq","content":"","site":{"data":{}},"more":""},{"layout":"post","title":"微信小程序验证码输入框","date":"2018-05-11T05:19:19.000Z","comments":1,"_content":"\n\n### 参考\n\n- [多个input聚焦问题，出现键盘抖动。](https://developers.weixin.qq.com/blogdetail?action=get_post_info&docid=02558cc748e8b89a938243b36dff4746&highline=%E8%BE%93%E5%85%A5%E6%A1%86%E8%81%9A%E7%84%A6)","source":"_drafts/wechat-miniapp-verification-code-input.md","raw":"---\nlayout: post\ntitle:  '微信小程序验证码输入框'\ndate: '2018-05-11 13:19:19'\ncomments: true\n---\n\n\n### 参考\n\n- [多个input聚焦问题，出现键盘抖动。](https://developers.weixin.qq.com/blogdetail?action=get_post_info&docid=02558cc748e8b89a938243b36dff4746&highline=%E8%BE%93%E5%85%A5%E6%A1%86%E8%81%9A%E7%84%A6)","slug":"wechat-miniapp-verification-code-input","published":0,"updated":"2018-05-11T05:20:27.596Z","photos":[],"link":"","_id":"cjharmvv7000cmgmc2ngf5c4b","content":"<h3 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h3><ul>\n<li><a href=\"https://developers.weixin.qq.com/blogdetail?action=get_post_info&amp;docid=02558cc748e8b89a938243b36dff4746&amp;highline=%E8%BE%93%E5%85%A5%E6%A1%86%E8%81%9A%E7%84%A6\" target=\"_blank\" rel=\"noopener\">多个input聚焦问题，出现键盘抖动。</a></li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h3 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h3><ul>\n<li><a href=\"https://developers.weixin.qq.com/blogdetail?action=get_post_info&amp;docid=02558cc748e8b89a938243b36dff4746&amp;highline=%E8%BE%93%E5%85%A5%E6%A1%86%E8%81%9A%E7%84%A6\" target=\"_blank\" rel=\"noopener\">多个input聚焦问题，出现键盘抖动。</a></li>\n</ul>\n"},{"layout":"post","title":"通过编程来学习基础学科的知识","excerpt":"","comments":1,"_content":"\n我希望学习基础学科的时候，能够与其他领域的技术相结合来学习，而不是一味地做练习题。做练习是必要的，熟能生巧，但是也应该学习去创造去思考，不要成为一个书呆子。更希望人们看到基础学科在实际生活中的应用，也希望将基础知识和其他领域的知识相结合，就像现在互联网与其他领域结合一样。\n\n餐厅饭店借助互联网技术让点餐更方便，通过评分体系让人们了解商家商品。还有现在的人工智能，帮助商家分析用户喜好，给用户提供更好的服务。\n\n又比如《我的世界》做出各种有趣的东西，游戏当中提供各种基础的材料，玩家发挥各种脑洞。\n\n我一些基础知识学得并不好，大学期间花太多时间在游戏上了，所以我打算尝试通过编程的方式来学习一些基础科学的知识。\n\n目前计划学习的是线性代数，之后可能会有物理相关的。\n\n最后，喜欢那些玩游戏笑得开心的人，他们真的是在享受游戏。\n","source":"_posts/2018-03-11-learn-basic-knowledge-by-programming.md","raw":"---\nlayout: post\ntitle:  \"通过编程来学习基础学科的知识\"\nexcerpt: 我希望学习基础学科的时候，能够与其他领域的技术相结合来学习，而不是一味地做练习题。做练习是必要的，熟能生巧，但是也应该学习去创造去思考，不要成为一个书呆子。更希望人们看到基础学科在实际生活中的应用，也希望将基础知识和其他领域的知识相结合，就像现在互联网与其他领域结合一样。\ncomments: true\n---\n\n我希望学习基础学科的时候，能够与其他领域的技术相结合来学习，而不是一味地做练习题。做练习是必要的，熟能生巧，但是也应该学习去创造去思考，不要成为一个书呆子。更希望人们看到基础学科在实际生活中的应用，也希望将基础知识和其他领域的知识相结合，就像现在互联网与其他领域结合一样。\n\n餐厅饭店借助互联网技术让点餐更方便，通过评分体系让人们了解商家商品。还有现在的人工智能，帮助商家分析用户喜好，给用户提供更好的服务。\n\n又比如《我的世界》做出各种有趣的东西，游戏当中提供各种基础的材料，玩家发挥各种脑洞。\n\n我一些基础知识学得并不好，大学期间花太多时间在游戏上了，所以我打算尝试通过编程的方式来学习一些基础科学的知识。\n\n目前计划学习的是线性代数，之后可能会有物理相关的。\n\n最后，喜欢那些玩游戏笑得开心的人，他们真的是在享受游戏。\n","slug":"2018-03-11-learn-basic-knowledge-by-programming","published":1,"date":"2018-03-07T02:55:31.165Z","updated":"2018-03-21T03:49:56.848Z","photos":[],"link":"","_id":"cjharmvvb000dmgmc3alugz7f","content":"<p>我希望学习基础学科的时候，能够与其他领域的技术相结合来学习，而不是一味地做练习题。做练习是必要的，熟能生巧，但是也应该学习去创造去思考，不要成为一个书呆子。更希望人们看到基础学科在实际生活中的应用，也希望将基础知识和其他领域的知识相结合，就像现在互联网与其他领域结合一样。</p>\n<p>餐厅饭店借助互联网技术让点餐更方便，通过评分体系让人们了解商家商品。还有现在的人工智能，帮助商家分析用户喜好，给用户提供更好的服务。</p>\n<p>又比如《我的世界》做出各种有趣的东西，游戏当中提供各种基础的材料，玩家发挥各种脑洞。</p>\n<p>我一些基础知识学得并不好，大学期间花太多时间在游戏上了，所以我打算尝试通过编程的方式来学习一些基础科学的知识。</p>\n<p>目前计划学习的是线性代数，之后可能会有物理相关的。</p>\n<p>最后，喜欢那些玩游戏笑得开心的人，他们真的是在享受游戏。</p>\n","site":{"data":{}},"more":"<p>我希望学习基础学科的时候，能够与其他领域的技术相结合来学习，而不是一味地做练习题。做练习是必要的，熟能生巧，但是也应该学习去创造去思考，不要成为一个书呆子。更希望人们看到基础学科在实际生活中的应用，也希望将基础知识和其他领域的知识相结合，就像现在互联网与其他领域结合一样。</p>\n<p>餐厅饭店借助互联网技术让点餐更方便，通过评分体系让人们了解商家商品。还有现在的人工智能，帮助商家分析用户喜好，给用户提供更好的服务。</p>\n<p>又比如《我的世界》做出各种有趣的东西，游戏当中提供各种基础的材料，玩家发挥各种脑洞。</p>\n<p>我一些基础知识学得并不好，大学期间花太多时间在游戏上了，所以我打算尝试通过编程的方式来学习一些基础科学的知识。</p>\n<p>目前计划学习的是线性代数，之后可能会有物理相关的。</p>\n<p>最后，喜欢那些玩游戏笑得开心的人，他们真的是在享受游戏。</p>\n"},{"layout":"post","title":"《三块广告牌》","excerpt":"","comments":1,"_content":"\n一部充满内容的电影，内容过多的电影往往显得有些沉闷。一部没有结局的电影。\n\n电影一开始的音乐直接暗示了电影的格调。也直接在一开始让观众看到了三块广告牌，点题并让观众产生疑问和兴趣。有什么故事？希望继续看下去。\n\n电影中有大量语言对峙，每个对话都能让人感觉到对话人之间的内心活动和冲撞。\n\n女主一开始的表情是迷茫，看到三块广告牌后若有所思，最后下定决心开车离开。这个过程没有一句话只有音乐，但你能从女主的表情和眼神很明显感觉到她的内心活动。\n\n其中有一段对话，一个人以自己得了癌症这件事来暗示对方做事，大概就是“我都得了癌症了，你就不能怎么怎么吗？”。一般一个人得了癌症后让你做什么事你都难以拒绝，但是女主并没有，反而听到这个消息后很平淡说了一句“我知道啊”，言下之意“那又怎么样？”。这时对方泄气。\n\n还有很多这种对话，能让人感觉到比武打片还激烈。各种不按常理出牌，剧情转折。\n\n还有一些有教育意义事。比如大人在小孩面前表现出一些陋习，孩子长大后有了这些陋习后，你教育你的孩子，她会以你以前也这样来反驳，这就是你教的。“Children see Children do”\n\n但是同样也有一个人带着陋习长大后，因为某些事发生了改变，但这个改变并不简单。因为那个得了癌症的人死后留给他的信，引发了他的思想的改变。\n\n人小时候很善于学习和模仿，养成习惯后，要改变往往是被动的，需要导火索，并不是一两句劝诫的话就能改变的。上学的时候老师讲了很多的道理，你现在还能记住几句？就像我初中数学老师说过的那样，很多年以后你可能已经忘了我教你的知识、讲过的道理，但是你还能记得哪个老师有哪些习惯、有哪些惯用语。就像我现在还记得高中数学老师批评一个人的时候会说：“我批评的是你这种行为，而不是你这个人”。\n\n电影最后没有结局，以两个人相互问对方做结尾，“我们路上再想吧”。\n","source":"_posts/2018-03-12-Three-Billboards-Outside-Ebbing,-Missouri.md","raw":"---\nlayout: post\ntitle:  \"《三块广告牌》\"\nexcerpt: >-\n    一部充满内容的电影，内容过多的电影往往显得有些沉闷。一部没有结局的电影。\n    电影一开始的音乐直接暗示了电影的格调。也直接在一开始让观众看到了三块广告牌，点题并让观众产生疑问和兴趣。有什么故事？希望继续看下去。\ncomments: true\n---\n\n一部充满内容的电影，内容过多的电影往往显得有些沉闷。一部没有结局的电影。\n\n电影一开始的音乐直接暗示了电影的格调。也直接在一开始让观众看到了三块广告牌，点题并让观众产生疑问和兴趣。有什么故事？希望继续看下去。\n\n电影中有大量语言对峙，每个对话都能让人感觉到对话人之间的内心活动和冲撞。\n\n女主一开始的表情是迷茫，看到三块广告牌后若有所思，最后下定决心开车离开。这个过程没有一句话只有音乐，但你能从女主的表情和眼神很明显感觉到她的内心活动。\n\n其中有一段对话，一个人以自己得了癌症这件事来暗示对方做事，大概就是“我都得了癌症了，你就不能怎么怎么吗？”。一般一个人得了癌症后让你做什么事你都难以拒绝，但是女主并没有，反而听到这个消息后很平淡说了一句“我知道啊”，言下之意“那又怎么样？”。这时对方泄气。\n\n还有很多这种对话，能让人感觉到比武打片还激烈。各种不按常理出牌，剧情转折。\n\n还有一些有教育意义事。比如大人在小孩面前表现出一些陋习，孩子长大后有了这些陋习后，你教育你的孩子，她会以你以前也这样来反驳，这就是你教的。“Children see Children do”\n\n但是同样也有一个人带着陋习长大后，因为某些事发生了改变，但这个改变并不简单。因为那个得了癌症的人死后留给他的信，引发了他的思想的改变。\n\n人小时候很善于学习和模仿，养成习惯后，要改变往往是被动的，需要导火索，并不是一两句劝诫的话就能改变的。上学的时候老师讲了很多的道理，你现在还能记住几句？就像我初中数学老师说过的那样，很多年以后你可能已经忘了我教你的知识、讲过的道理，但是你还能记得哪个老师有哪些习惯、有哪些惯用语。就像我现在还记得高中数学老师批评一个人的时候会说：“我批评的是你这种行为，而不是你这个人”。\n\n电影最后没有结局，以两个人相互问对方做结尾，“我们路上再想吧”。\n","slug":"2018-03-12-Three-Billboards-Outside-Ebbing,-Missouri","published":1,"date":"2018-03-13T11:36:05.429Z","updated":"2018-03-21T04:00:45.934Z","photos":[],"link":"","_id":"cjharmvve000emgmcf6vidzyr","content":"<p>一部充满内容的电影，内容过多的电影往往显得有些沉闷。一部没有结局的电影。</p>\n<p>电影一开始的音乐直接暗示了电影的格调。也直接在一开始让观众看到了三块广告牌，点题并让观众产生疑问和兴趣。有什么故事？希望继续看下去。</p>\n<p>电影中有大量语言对峙，每个对话都能让人感觉到对话人之间的内心活动和冲撞。</p>\n<p>女主一开始的表情是迷茫，看到三块广告牌后若有所思，最后下定决心开车离开。这个过程没有一句话只有音乐，但你能从女主的表情和眼神很明显感觉到她的内心活动。</p>\n<p>其中有一段对话，一个人以自己得了癌症这件事来暗示对方做事，大概就是“我都得了癌症了，你就不能怎么怎么吗？”。一般一个人得了癌症后让你做什么事你都难以拒绝，但是女主并没有，反而听到这个消息后很平淡说了一句“我知道啊”，言下之意“那又怎么样？”。这时对方泄气。</p>\n<p>还有很多这种对话，能让人感觉到比武打片还激烈。各种不按常理出牌，剧情转折。</p>\n<p>还有一些有教育意义事。比如大人在小孩面前表现出一些陋习，孩子长大后有了这些陋习后，你教育你的孩子，她会以你以前也这样来反驳，这就是你教的。“Children see Children do”</p>\n<p>但是同样也有一个人带着陋习长大后，因为某些事发生了改变，但这个改变并不简单。因为那个得了癌症的人死后留给他的信，引发了他的思想的改变。</p>\n<p>人小时候很善于学习和模仿，养成习惯后，要改变往往是被动的，需要导火索，并不是一两句劝诫的话就能改变的。上学的时候老师讲了很多的道理，你现在还能记住几句？就像我初中数学老师说过的那样，很多年以后你可能已经忘了我教你的知识、讲过的道理，但是你还能记得哪个老师有哪些习惯、有哪些惯用语。就像我现在还记得高中数学老师批评一个人的时候会说：“我批评的是你这种行为，而不是你这个人”。</p>\n<p>电影最后没有结局，以两个人相互问对方做结尾，“我们路上再想吧”。</p>\n","site":{"data":{}},"more":"<p>一部充满内容的电影，内容过多的电影往往显得有些沉闷。一部没有结局的电影。</p>\n<p>电影一开始的音乐直接暗示了电影的格调。也直接在一开始让观众看到了三块广告牌，点题并让观众产生疑问和兴趣。有什么故事？希望继续看下去。</p>\n<p>电影中有大量语言对峙，每个对话都能让人感觉到对话人之间的内心活动和冲撞。</p>\n<p>女主一开始的表情是迷茫，看到三块广告牌后若有所思，最后下定决心开车离开。这个过程没有一句话只有音乐，但你能从女主的表情和眼神很明显感觉到她的内心活动。</p>\n<p>其中有一段对话，一个人以自己得了癌症这件事来暗示对方做事，大概就是“我都得了癌症了，你就不能怎么怎么吗？”。一般一个人得了癌症后让你做什么事你都难以拒绝，但是女主并没有，反而听到这个消息后很平淡说了一句“我知道啊”，言下之意“那又怎么样？”。这时对方泄气。</p>\n<p>还有很多这种对话，能让人感觉到比武打片还激烈。各种不按常理出牌，剧情转折。</p>\n<p>还有一些有教育意义事。比如大人在小孩面前表现出一些陋习，孩子长大后有了这些陋习后，你教育你的孩子，她会以你以前也这样来反驳，这就是你教的。“Children see Children do”</p>\n<p>但是同样也有一个人带着陋习长大后，因为某些事发生了改变，但这个改变并不简单。因为那个得了癌症的人死后留给他的信，引发了他的思想的改变。</p>\n<p>人小时候很善于学习和模仿，养成习惯后，要改变往往是被动的，需要导火索，并不是一两句劝诫的话就能改变的。上学的时候老师讲了很多的道理，你现在还能记住几句？就像我初中数学老师说过的那样，很多年以后你可能已经忘了我教你的知识、讲过的道理，但是你还能记得哪个老师有哪些习惯、有哪些惯用语。就像我现在还记得高中数学老师批评一个人的时候会说：“我批评的是你这种行为，而不是你这个人”。</p>\n<p>电影最后没有结局，以两个人相互问对方做结尾，“我们路上再想吧”。</p>\n"},{"layout":"post","title":"通过编程来学习线性代数1-解二元线性方程组","excerpt":"","date":"2018-03-21T02:11:47.000Z","comments":1,"_content":"\n### 环境\n\n采用的编程方式是网页，会使用`javascript`来实现线性代数中的计算方法。\n比如文件***linearAlgebra.html***:\n```html\n<script>\n    // 在控制台打印\n    console.log(123*2)\n</script>\n```\n\n写入上面的代码，保存后用浏览器打开，然后右键打开*审查元素*点击*控制台（Console）*来查看输出。\n\n> 更多网页相关知识网上可以搜得到，掌握基本`javascript`编程知识就行了。\n\n### 解二元线性方程组\n\n`行列式`的概念是由解多元线性方程组而引出的。比如下面这个：\n\n![二元线性方程组](/blog/assets/images/linear-algebra/101.jpeg)\n\n\b在坐标系中就是两根直线，分母为零的情况就是两根直线平行不相交。\n\n##### 1. 绘制坐标系\n\n下面是我用`canvas`绘制的坐标系，一般编程中涉及到坐标系的地方，跟数学里有些不同，y轴方向是向下为正。\n\n![canvas坐标系](/blog/assets/images/linear-algebra/103.png)\n\n![canvas坐标系](/blog/assets/images/linear-algebra/106.gif)\n\n那么来看看如何绘制出坐标系。下面主要是编程方面的东西，可以自己创建一个`.html`文件试一试。\n\n首先，创建`canvas`\n```html\n<html>\n    <body>\n        <canvas id=\"myCanvas\"></canvas>\n    </body>\n</html>\n<!-- Javascript 代码放在标签script里 -->\n<script type=\"text/javascript\">\n    // 保存canvas的长宽\n    var W = 800.0, H = 600.0\n\n    // 获取canvas对象\n    var canvas = document.getElementById('myCanvas')\n    canvas.width = W\n    canvas.height = H\n\n    // 获取canvas的画布context，我们所有的绘制都将在context上完成。\n    // 这里也可以传3d，那么context就是一个3d的画布\n    var ctx = canvas.getContext('2d')\n</script>\n```\n\n画布创建好后，接下来着手绘制直角坐标系的两根辅助线。\n\n创建一个函数方便之后的重复调用。\n\n```js\n\n// 因为原点是从左上角开始的，为了方便看直线，将原点偏移到指定位置\n// 每一个设置坐标的地方都要(x + originX, y + originY)\nvar originX = W / 2.0, originY = H / 2.0\n\n// 调用函数，传入之前创建好的画布ctx\ndrawCoordinateSystem(ctx)\n\nfunction drawCoordinateSystem(ctx) {\n    // 设置绘制线的颜色为black\n    ctx.strokeStyle = 'black'\n\n    // 线宽度\n    ctx.lineWidth = 1\n\n    // 水平线\n    ctx.beginPath()\n    ctx.moveTo(0, 0 + originY)  // 画布的左边界中点\n    ctx.lineTo(W, 0 + originY)    // 画布的右边界中点\n    ctx.closePath()\n    ctx.stroke()\n\n    // 垂直线\n    ctx.beginPath()\n    ctx.moveTo(0 + originX, 0)  // 画布的上边界中点\n    ctx.lineTo(0 + originX, H)  // 画布的下边界中点\n    ctx.closePath()\n    ctx.stroke()\n}\n```\n\n`moveTo`是设置一个起点，`lineTo`是将线从上一个点连接到该点。\n\n`stroke`绘制线条，如果`fill`\b，那么会将线包围的区域用颜色涂满。途中的黑色三角形方向标就是这样绘制的，设置三个点后调用`fill`。\n\n调用函数后得到下图：\n![canvas坐标系](/blog/assets/images/linear-algebra/104.png)\n\n阴影样式需要给`canvas`加上一个`box-shadow`：\n\n`<canvas id=\"myCanvas\" style=\"box-shadow:1px 1px 10px #666;\"></canvas>`\n\n##### 2. 绘制坐标系刻度和方向标\n\n同样，分别创建函数来专门绘制刻度和方向标：\n\n```js\n// 刻度长度\nvar scaleD= 10.0\n\n// 绘制刻度\n// 传入context和刻度长度\nfunction drawScale(ctx, d) {\n    // horizontal\n    for (var x = 0; x < W; x += 50) {\n        ctx.beginPath()\n        ctx.moveTo(x, 0 + originY)\n        ctx.lineTo(x, scaleD + originY)\n        ctx.stroke()\n        ctx.closePath()\n    }\n\n    // vertical\n    for (var y = 0; y < H; y += 50) {\n        ctx.beginPath()\n        ctx.moveTo(0 + originX, y)\n        ctx.lineTo(scaleD + originX, y)\n        ctx.stroke()\n        ctx.closePath()\n    }\n}\n\n//绘制方向标（三角形），底边长度与底边到顶点长度一样的三角形\nfunction drawDirectionArrow(ctx, d) {\n    // horizontal\n    ctx.beginPath()\n    ctx.moveTo(W - d * 2, originY - d)\n    ctx.lineTo(W - d * 2, originY + d)\n    ctx.lineTo(W, originY)\n    ctx.closePath()\n    ctx.fill()\n\n    // vertical\n    ctx.beginPath()\n    ctx.moveTo(originX - d, H - d * 2)\n    ctx.lineTo(originX + d, H - d * 2)\n    ctx.lineTo(originX, H)\n    ctx.closePath()\n    ctx.fill()\n}\n```\n\n然后在`drawCoordinateSystem`函数里追加调用`drawScale(ctx, scaleD)`和`drawDirectionArrow(ctx, scaleD)`，运行后如图：\n\n![canvas坐标系](/blog/assets/images/linear-algebra/105.png)\n\n如果想要在刻度上绘制数字标记，可以自行搜索相关文档，有一个叫[fillText](http://www.w3school.com.cn/tags/canvas_filltext.asp)的函数。\n\n##### 3. 绘制直线\n\n`a11 * x1 + a12 * x2 = b1` 此方程相当于 `a * x + b * y = c`。\n\n我们可以根据直线方程找到两个点，将两个点通过`moveTo`和`lineTo`连接并绘制出来。\n\n```js\n//---绘制直线---\n// 传入直线方程的三个常数和直线颜色\n/* \n    a * x + b * y = c,\n\n    在 x, y 轴上的点\n    x = 0 && b != 0, y = c / b => (0, c / b)\n    y = 0 && a != 0, x = c / a => (c / a, 0)\n\n    b != 0, y = c / b => (x, (c - a * x) / b)\n    a != 0, x = c / a => ((c - b * y) / a, y)\n*/\nfunction drawLine(ctx, a, b, c, color = 'red') {\n    // 如果有一个为零，那么直线就是平行于x或y轴的\n    if (b != 0 && a != 0) {\n        var x1 = c / a, y1 = 0  // x轴上的点\n        var x2 = 0, y2 = c / b  // y轴上的点\n        var x3 = -originX, y3 = (c - a * x3) / b    //左边界点\n        var x4 = originX, y4 = (c - a * x4) / b    //右边界点\n\n        ctx.strokeStyle = color\n        ctx.lineWidth = 1\n\n        //  绘制直线\n        ctx.beginPath()\n        ctx.moveTo(x3 + originX, y3 + originY)\n        ctx.lineTo(x4 + originX, y4 + originY)\n        ctx.closePath()\n        ctx.stroke()\n    }\n}\n```\n\n然后调用该函数绘制：\n\n```\ndrawLine(ctx, 1, 1, 123, 'red')\ndrawLine(ctx, 1, 5, 999, 'blue')\n```\n\n结果：\n\n![canvas坐标系](/blog/assets/images/linear-algebra/107.png)\n\n##### 4. 求出两直线的交点\n\n说了这么多，现在才开始解方程？😤\n\n大多是基础的绘制工作。数学和编程相结合的地方就是如何根据直线方程绘制直线。\n\n对于方程：\n\n```\n╭ a11*x1 + a12*x2 = b1\n╰ a21*x1 + a22*x2 = b2\n```\n\n当`a11*a22 - a12*a21 != 0`时，方程有唯一解：\n```js\nx1 = (b1*a22 - a12*b2)/(a11*a22 - a12*a21)\n\nx2 = (a11*b2 - b1*a21)/(a11*a22 - a12*a21)\n```\n\n```js\n    |a11 a12|\nD = |       | = a11*a22 - a12*a21 //分母\n    |a21 a22|\n\n     |b1 a12|\nD1 = |      | = b1*a22 - a1*b2 //x1分子\n     |b2 a22|\n\n     |a11 b1|\nD2 = |      | = a11*b2 - b1*a21 //x2分子\n     |a21 b2|\n\nx1 = D1/D\nx2 = D2/D\n```\n\n那么我们就可以根据这个来得出两直线相交的点`(x1, x2)`\n\n下面一个函数是根据两直线的常数计算出交点。第二个函数是在以`(x, y)`为圆心，半径为10，绘制一个圆\n\n```js\n/*\n    a11 > a1\n    a21 > b1\n    b1 > c1\n    ...\n    计算两直线交点\n*/\nfunction calculateIntersection(a11, a12, b1, a21, a22, b2) {\n    x1 = (b1 * a22 - a12 * b2) / (a11 * a22 - a12 * a21)\n    x2 = (a11 * b2 - b1 * a21) / (a11 * a22 - a12 * a21)\n\n    return {\n        x: x1,\n        y: x2\n    }\n}\n\n// 绘制交点\nfunction drawIntersection(ctx, x, y) {\n    ctx.arc(x+originX, y+originY, 10, 0, 2*Math.PI)\n    ctx.fill()\n}\n```\n\n最后，我们的绘制函数大概是这样的：\n\n```js\n\ndrawCoordinateSystem(ctx)\ndrawLine(ctx, 1, 1, 123, 'red')\ndrawLine(ctx, 1, 5, 999, 'blue')\n\nvar p = calculateIntersection(1, 1, 123, 1, 5, 999)\ndrawIntersection(ctx, p.x, p.y)\n```\n\n结果如图：\n\n\n![canvas坐标系](/blog/assets/images/linear-algebra/108.png)\n\n### 总结\n\n上面求两直线交点的思路是根据`二阶行列式`来解`二元线性方程组`。可以看到，`行列式`是根据解`多元线性方程组`总结出来的。二阶或三阶行列式我们可以比较轻松的计算出结果，但是随着阶数增加，计算量也会越来越大，`n`的`阶乘`（`n*n(n-1)*...*3*2*1`）\n\n我们来看看求`二阶行列式`和`三阶行列式`的值的计算：\n\n```js\n// 计算二阶行列式的值\n/*\n|a11 a12|\n|a21 a22|\n*/\nfunction calculate2Det(a11, a12, a21, a22) {\n    // 2!\n    return a11*a22 - a12*a21\n}\n\n// 计算三阶行列式的值\n/*\n|a11 a12 a13|\n|a21 a22 a23|\n|a31 a32 a33|\n*/\nfunction calculate3Det(a11, a12, a13, a21, a22, a23, a31, a32, a33) {\n    // 3!\n    return a11*a22*a33 + a12*a23*a31 + a13*a21*a32 - a13*a22*a31 - a12*a21*a33 - a11*a23*a32\n}\n```\n\n如果是`四阶行列式`，那么我们要写`4!=24`个。所以我们要想办法简化计算，使用一种通用的方式来计算`行列式`的值，而不是一个一个全部写出来计算。\n\n那么编程上如何简化这个计算呢？\n\n下一节将会来解决这个问题。","source":"_posts/2018-03-21-learn-linear-algebra-by-programming-1.md","raw":"---\nlayout: post\ntitle:  \"通过编程来学习线性代数1-解二元线性方程组\"\nexcerpt: 在这一节中你将了解如何在`canvas`中进行基本的绘制操作、关于计算`行列式`和解二元线性方程组的的相关知识。\ndate: '2018-03-21 10:11:47'\ncomments: true\n---\n\n### 环境\n\n采用的编程方式是网页，会使用`javascript`来实现线性代数中的计算方法。\n比如文件***linearAlgebra.html***:\n```html\n<script>\n    // 在控制台打印\n    console.log(123*2)\n</script>\n```\n\n写入上面的代码，保存后用浏览器打开，然后右键打开*审查元素*点击*控制台（Console）*来查看输出。\n\n> 更多网页相关知识网上可以搜得到，掌握基本`javascript`编程知识就行了。\n\n### 解二元线性方程组\n\n`行列式`的概念是由解多元线性方程组而引出的。比如下面这个：\n\n![二元线性方程组](/blog/assets/images/linear-algebra/101.jpeg)\n\n\b在坐标系中就是两根直线，分母为零的情况就是两根直线平行不相交。\n\n##### 1. 绘制坐标系\n\n下面是我用`canvas`绘制的坐标系，一般编程中涉及到坐标系的地方，跟数学里有些不同，y轴方向是向下为正。\n\n![canvas坐标系](/blog/assets/images/linear-algebra/103.png)\n\n![canvas坐标系](/blog/assets/images/linear-algebra/106.gif)\n\n那么来看看如何绘制出坐标系。下面主要是编程方面的东西，可以自己创建一个`.html`文件试一试。\n\n首先，创建`canvas`\n```html\n<html>\n    <body>\n        <canvas id=\"myCanvas\"></canvas>\n    </body>\n</html>\n<!-- Javascript 代码放在标签script里 -->\n<script type=\"text/javascript\">\n    // 保存canvas的长宽\n    var W = 800.0, H = 600.0\n\n    // 获取canvas对象\n    var canvas = document.getElementById('myCanvas')\n    canvas.width = W\n    canvas.height = H\n\n    // 获取canvas的画布context，我们所有的绘制都将在context上完成。\n    // 这里也可以传3d，那么context就是一个3d的画布\n    var ctx = canvas.getContext('2d')\n</script>\n```\n\n画布创建好后，接下来着手绘制直角坐标系的两根辅助线。\n\n创建一个函数方便之后的重复调用。\n\n```js\n\n// 因为原点是从左上角开始的，为了方便看直线，将原点偏移到指定位置\n// 每一个设置坐标的地方都要(x + originX, y + originY)\nvar originX = W / 2.0, originY = H / 2.0\n\n// 调用函数，传入之前创建好的画布ctx\ndrawCoordinateSystem(ctx)\n\nfunction drawCoordinateSystem(ctx) {\n    // 设置绘制线的颜色为black\n    ctx.strokeStyle = 'black'\n\n    // 线宽度\n    ctx.lineWidth = 1\n\n    // 水平线\n    ctx.beginPath()\n    ctx.moveTo(0, 0 + originY)  // 画布的左边界中点\n    ctx.lineTo(W, 0 + originY)    // 画布的右边界中点\n    ctx.closePath()\n    ctx.stroke()\n\n    // 垂直线\n    ctx.beginPath()\n    ctx.moveTo(0 + originX, 0)  // 画布的上边界中点\n    ctx.lineTo(0 + originX, H)  // 画布的下边界中点\n    ctx.closePath()\n    ctx.stroke()\n}\n```\n\n`moveTo`是设置一个起点，`lineTo`是将线从上一个点连接到该点。\n\n`stroke`绘制线条，如果`fill`\b，那么会将线包围的区域用颜色涂满。途中的黑色三角形方向标就是这样绘制的，设置三个点后调用`fill`。\n\n调用函数后得到下图：\n![canvas坐标系](/blog/assets/images/linear-algebra/104.png)\n\n阴影样式需要给`canvas`加上一个`box-shadow`：\n\n`<canvas id=\"myCanvas\" style=\"box-shadow:1px 1px 10px #666;\"></canvas>`\n\n##### 2. 绘制坐标系刻度和方向标\n\n同样，分别创建函数来专门绘制刻度和方向标：\n\n```js\n// 刻度长度\nvar scaleD= 10.0\n\n// 绘制刻度\n// 传入context和刻度长度\nfunction drawScale(ctx, d) {\n    // horizontal\n    for (var x = 0; x < W; x += 50) {\n        ctx.beginPath()\n        ctx.moveTo(x, 0 + originY)\n        ctx.lineTo(x, scaleD + originY)\n        ctx.stroke()\n        ctx.closePath()\n    }\n\n    // vertical\n    for (var y = 0; y < H; y += 50) {\n        ctx.beginPath()\n        ctx.moveTo(0 + originX, y)\n        ctx.lineTo(scaleD + originX, y)\n        ctx.stroke()\n        ctx.closePath()\n    }\n}\n\n//绘制方向标（三角形），底边长度与底边到顶点长度一样的三角形\nfunction drawDirectionArrow(ctx, d) {\n    // horizontal\n    ctx.beginPath()\n    ctx.moveTo(W - d * 2, originY - d)\n    ctx.lineTo(W - d * 2, originY + d)\n    ctx.lineTo(W, originY)\n    ctx.closePath()\n    ctx.fill()\n\n    // vertical\n    ctx.beginPath()\n    ctx.moveTo(originX - d, H - d * 2)\n    ctx.lineTo(originX + d, H - d * 2)\n    ctx.lineTo(originX, H)\n    ctx.closePath()\n    ctx.fill()\n}\n```\n\n然后在`drawCoordinateSystem`函数里追加调用`drawScale(ctx, scaleD)`和`drawDirectionArrow(ctx, scaleD)`，运行后如图：\n\n![canvas坐标系](/blog/assets/images/linear-algebra/105.png)\n\n如果想要在刻度上绘制数字标记，可以自行搜索相关文档，有一个叫[fillText](http://www.w3school.com.cn/tags/canvas_filltext.asp)的函数。\n\n##### 3. 绘制直线\n\n`a11 * x1 + a12 * x2 = b1` 此方程相当于 `a * x + b * y = c`。\n\n我们可以根据直线方程找到两个点，将两个点通过`moveTo`和`lineTo`连接并绘制出来。\n\n```js\n//---绘制直线---\n// 传入直线方程的三个常数和直线颜色\n/* \n    a * x + b * y = c,\n\n    在 x, y 轴上的点\n    x = 0 && b != 0, y = c / b => (0, c / b)\n    y = 0 && a != 0, x = c / a => (c / a, 0)\n\n    b != 0, y = c / b => (x, (c - a * x) / b)\n    a != 0, x = c / a => ((c - b * y) / a, y)\n*/\nfunction drawLine(ctx, a, b, c, color = 'red') {\n    // 如果有一个为零，那么直线就是平行于x或y轴的\n    if (b != 0 && a != 0) {\n        var x1 = c / a, y1 = 0  // x轴上的点\n        var x2 = 0, y2 = c / b  // y轴上的点\n        var x3 = -originX, y3 = (c - a * x3) / b    //左边界点\n        var x4 = originX, y4 = (c - a * x4) / b    //右边界点\n\n        ctx.strokeStyle = color\n        ctx.lineWidth = 1\n\n        //  绘制直线\n        ctx.beginPath()\n        ctx.moveTo(x3 + originX, y3 + originY)\n        ctx.lineTo(x4 + originX, y4 + originY)\n        ctx.closePath()\n        ctx.stroke()\n    }\n}\n```\n\n然后调用该函数绘制：\n\n```\ndrawLine(ctx, 1, 1, 123, 'red')\ndrawLine(ctx, 1, 5, 999, 'blue')\n```\n\n结果：\n\n![canvas坐标系](/blog/assets/images/linear-algebra/107.png)\n\n##### 4. 求出两直线的交点\n\n说了这么多，现在才开始解方程？😤\n\n大多是基础的绘制工作。数学和编程相结合的地方就是如何根据直线方程绘制直线。\n\n对于方程：\n\n```\n╭ a11*x1 + a12*x2 = b1\n╰ a21*x1 + a22*x2 = b2\n```\n\n当`a11*a22 - a12*a21 != 0`时，方程有唯一解：\n```js\nx1 = (b1*a22 - a12*b2)/(a11*a22 - a12*a21)\n\nx2 = (a11*b2 - b1*a21)/(a11*a22 - a12*a21)\n```\n\n```js\n    |a11 a12|\nD = |       | = a11*a22 - a12*a21 //分母\n    |a21 a22|\n\n     |b1 a12|\nD1 = |      | = b1*a22 - a1*b2 //x1分子\n     |b2 a22|\n\n     |a11 b1|\nD2 = |      | = a11*b2 - b1*a21 //x2分子\n     |a21 b2|\n\nx1 = D1/D\nx2 = D2/D\n```\n\n那么我们就可以根据这个来得出两直线相交的点`(x1, x2)`\n\n下面一个函数是根据两直线的常数计算出交点。第二个函数是在以`(x, y)`为圆心，半径为10，绘制一个圆\n\n```js\n/*\n    a11 > a1\n    a21 > b1\n    b1 > c1\n    ...\n    计算两直线交点\n*/\nfunction calculateIntersection(a11, a12, b1, a21, a22, b2) {\n    x1 = (b1 * a22 - a12 * b2) / (a11 * a22 - a12 * a21)\n    x2 = (a11 * b2 - b1 * a21) / (a11 * a22 - a12 * a21)\n\n    return {\n        x: x1,\n        y: x2\n    }\n}\n\n// 绘制交点\nfunction drawIntersection(ctx, x, y) {\n    ctx.arc(x+originX, y+originY, 10, 0, 2*Math.PI)\n    ctx.fill()\n}\n```\n\n最后，我们的绘制函数大概是这样的：\n\n```js\n\ndrawCoordinateSystem(ctx)\ndrawLine(ctx, 1, 1, 123, 'red')\ndrawLine(ctx, 1, 5, 999, 'blue')\n\nvar p = calculateIntersection(1, 1, 123, 1, 5, 999)\ndrawIntersection(ctx, p.x, p.y)\n```\n\n结果如图：\n\n\n![canvas坐标系](/blog/assets/images/linear-algebra/108.png)\n\n### 总结\n\n上面求两直线交点的思路是根据`二阶行列式`来解`二元线性方程组`。可以看到，`行列式`是根据解`多元线性方程组`总结出来的。二阶或三阶行列式我们可以比较轻松的计算出结果，但是随着阶数增加，计算量也会越来越大，`n`的`阶乘`（`n*n(n-1)*...*3*2*1`）\n\n我们来看看求`二阶行列式`和`三阶行列式`的值的计算：\n\n```js\n// 计算二阶行列式的值\n/*\n|a11 a12|\n|a21 a22|\n*/\nfunction calculate2Det(a11, a12, a21, a22) {\n    // 2!\n    return a11*a22 - a12*a21\n}\n\n// 计算三阶行列式的值\n/*\n|a11 a12 a13|\n|a21 a22 a23|\n|a31 a32 a33|\n*/\nfunction calculate3Det(a11, a12, a13, a21, a22, a23, a31, a32, a33) {\n    // 3!\n    return a11*a22*a33 + a12*a23*a31 + a13*a21*a32 - a13*a22*a31 - a12*a21*a33 - a11*a23*a32\n}\n```\n\n如果是`四阶行列式`，那么我们要写`4!=24`个。所以我们要想办法简化计算，使用一种通用的方式来计算`行列式`的值，而不是一个一个全部写出来计算。\n\n那么编程上如何简化这个计算呢？\n\n下一节将会来解决这个问题。","slug":"2018-03-21-learn-linear-algebra-by-programming-1","published":1,"updated":"2018-05-17T16:38:49.401Z","photos":[],"link":"","_id":"cjharmvvh000fmgmc57tyrk04","content":"<h3 id=\"环境\"><a href=\"#环境\" class=\"headerlink\" title=\"环境\"></a>环境</h3><p>采用的编程方式是网页，会使用<code>javascript</code>来实现线性代数中的计算方法。<br>比如文件<strong><em>linearAlgebra.html</em></strong>:<br><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"undefined\"></span></span><br><span class=\"line\"><span class=\"javascript\">    <span class=\"comment\">// 在控制台打印</span></span></span><br><span class=\"line\"><span class=\"javascript\">    <span class=\"built_in\">console</span>.log(<span class=\"number\">123</span>*<span class=\"number\">2</span>)</span></span><br><span class=\"line\"><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br></pre></td></tr></table></figure></p>\n<p>写入上面的代码，保存后用浏览器打开，然后右键打开<em>审查元素</em>点击<em>控制台（Console）</em>来查看输出。</p>\n<blockquote>\n<p>更多网页相关知识网上可以搜得到，掌握基本<code>javascript</code>编程知识就行了。</p>\n</blockquote>\n<h3 id=\"解二元线性方程组\"><a href=\"#解二元线性方程组\" class=\"headerlink\" title=\"解二元线性方程组\"></a>解二元线性方程组</h3><p><code>行列式</code>的概念是由解多元线性方程组而引出的。比如下面这个：</p>\n<p><img src=\"/blog/assets/images/linear-algebra/101.jpeg\" alt=\"二元线性方程组\"></p>\n<p>\b在坐标系中就是两根直线，分母为零的情况就是两根直线平行不相交。</p>\n<h5 id=\"1-绘制坐标系\"><a href=\"#1-绘制坐标系\" class=\"headerlink\" title=\"1. 绘制坐标系\"></a>1. 绘制坐标系</h5><p>下面是我用<code>canvas</code>绘制的坐标系，一般编程中涉及到坐标系的地方，跟数学里有些不同，y轴方向是向下为正。</p>\n<p><img src=\"/blog/assets/images/linear-algebra/103.png\" alt=\"canvas坐标系\"></p>\n<p><img src=\"/blog/assets/images/linear-algebra/106.gif\" alt=\"canvas坐标系\"></p>\n<p>那么来看看如何绘制出坐标系。下面主要是编程方面的东西，可以自己创建一个<code>.html</code>文件试一试。</p>\n<p>首先，创建<code>canvas</code><br><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">canvas</span> <span class=\"attr\">id</span>=<span class=\"string\">\"myCanvas\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">canvas</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"comment\">&lt;!-- Javascript 代码放在标签script里 --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text/javascript\"</span>&gt;</span><span class=\"undefined\"></span></span><br><span class=\"line\"><span class=\"javascript\">    <span class=\"comment\">// 保存canvas的长宽</span></span></span><br><span class=\"line\"><span class=\"javascript\">    <span class=\"keyword\">var</span> W = <span class=\"number\">800.0</span>, H = <span class=\"number\">600.0</span></span></span><br><span class=\"line\"><span class=\"undefined\"></span></span><br><span class=\"line\"><span class=\"javascript\">    <span class=\"comment\">// 获取canvas对象</span></span></span><br><span class=\"line\"><span class=\"javascript\">    <span class=\"keyword\">var</span> canvas = <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">'myCanvas'</span>)</span></span><br><span class=\"line\"><span class=\"undefined\">    canvas.width = W</span></span><br><span class=\"line\"><span class=\"undefined\">    canvas.height = H</span></span><br><span class=\"line\"><span class=\"undefined\"></span></span><br><span class=\"line\"><span class=\"javascript\">    <span class=\"comment\">// 获取canvas的画布context，我们所有的绘制都将在context上完成。</span></span></span><br><span class=\"line\"><span class=\"javascript\">    <span class=\"comment\">// 这里也可以传3d，那么context就是一个3d的画布</span></span></span><br><span class=\"line\"><span class=\"javascript\">    <span class=\"keyword\">var</span> ctx = canvas.getContext(<span class=\"string\">'2d'</span>)</span></span><br><span class=\"line\"><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br></pre></td></tr></table></figure></p>\n<p>画布创建好后，接下来着手绘制直角坐标系的两根辅助线。</p>\n<p>创建一个函数方便之后的重复调用。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 因为原点是从左上角开始的，为了方便看直线，将原点偏移到指定位置</span></span><br><span class=\"line\"><span class=\"comment\">// 每一个设置坐标的地方都要(x + originX, y + originY)</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> originX = W / <span class=\"number\">2.0</span>, originY = H / <span class=\"number\">2.0</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 调用函数，传入之前创建好的画布ctx</span></span><br><span class=\"line\">drawCoordinateSystem(ctx)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">drawCoordinateSystem</span>(<span class=\"params\">ctx</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">// 设置绘制线的颜色为black</span></span><br><span class=\"line\">    ctx.strokeStyle = <span class=\"string\">'black'</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 线宽度</span></span><br><span class=\"line\">    ctx.lineWidth = <span class=\"number\">1</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 水平线</span></span><br><span class=\"line\">    ctx.beginPath()</span><br><span class=\"line\">    ctx.moveTo(<span class=\"number\">0</span>, <span class=\"number\">0</span> + originY)  <span class=\"comment\">// 画布的左边界中点</span></span><br><span class=\"line\">    ctx.lineTo(W, <span class=\"number\">0</span> + originY)    <span class=\"comment\">// 画布的右边界中点</span></span><br><span class=\"line\">    ctx.closePath()</span><br><span class=\"line\">    ctx.stroke()</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 垂直线</span></span><br><span class=\"line\">    ctx.beginPath()</span><br><span class=\"line\">    ctx.moveTo(<span class=\"number\">0</span> + originX, <span class=\"number\">0</span>)  <span class=\"comment\">// 画布的上边界中点</span></span><br><span class=\"line\">    ctx.lineTo(<span class=\"number\">0</span> + originX, H)  <span class=\"comment\">// 画布的下边界中点</span></span><br><span class=\"line\">    ctx.closePath()</span><br><span class=\"line\">    ctx.stroke()</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><code>moveTo</code>是设置一个起点，<code>lineTo</code>是将线从上一个点连接到该点。</p>\n<p><code>stroke</code>绘制线条，如果<code>fill</code>\b，那么会将线包围的区域用颜色涂满。途中的黑色三角形方向标就是这样绘制的，设置三个点后调用<code>fill</code>。</p>\n<p>调用函数后得到下图：<br><img src=\"/blog/assets/images/linear-algebra/104.png\" alt=\"canvas坐标系\"></p>\n<p>阴影样式需要给<code>canvas</code>加上一个<code>box-shadow</code>：</p>\n<p><code>&lt;canvas id=&quot;myCanvas&quot; style=&quot;box-shadow:1px 1px 10px #666;&quot;&gt;&lt;/canvas&gt;</code></p>\n<h5 id=\"2-绘制坐标系刻度和方向标\"><a href=\"#2-绘制坐标系刻度和方向标\" class=\"headerlink\" title=\"2. 绘制坐标系刻度和方向标\"></a>2. 绘制坐标系刻度和方向标</h5><p>同样，分别创建函数来专门绘制刻度和方向标：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 刻度长度</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> scaleD= <span class=\"number\">10.0</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 绘制刻度</span></span><br><span class=\"line\"><span class=\"comment\">// 传入context和刻度长度</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">drawScale</span>(<span class=\"params\">ctx, d</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">// horizontal</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> x = <span class=\"number\">0</span>; x &lt; W; x += <span class=\"number\">50</span>) &#123;</span><br><span class=\"line\">        ctx.beginPath()</span><br><span class=\"line\">        ctx.moveTo(x, <span class=\"number\">0</span> + originY)</span><br><span class=\"line\">        ctx.lineTo(x, scaleD + originY)</span><br><span class=\"line\">        ctx.stroke()</span><br><span class=\"line\">        ctx.closePath()</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// vertical</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> y = <span class=\"number\">0</span>; y &lt; H; y += <span class=\"number\">50</span>) &#123;</span><br><span class=\"line\">        ctx.beginPath()</span><br><span class=\"line\">        ctx.moveTo(<span class=\"number\">0</span> + originX, y)</span><br><span class=\"line\">        ctx.lineTo(scaleD + originX, y)</span><br><span class=\"line\">        ctx.stroke()</span><br><span class=\"line\">        ctx.closePath()</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//绘制方向标（三角形），底边长度与底边到顶点长度一样的三角形</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">drawDirectionArrow</span>(<span class=\"params\">ctx, d</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">// horizontal</span></span><br><span class=\"line\">    ctx.beginPath()</span><br><span class=\"line\">    ctx.moveTo(W - d * <span class=\"number\">2</span>, originY - d)</span><br><span class=\"line\">    ctx.lineTo(W - d * <span class=\"number\">2</span>, originY + d)</span><br><span class=\"line\">    ctx.lineTo(W, originY)</span><br><span class=\"line\">    ctx.closePath()</span><br><span class=\"line\">    ctx.fill()</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// vertical</span></span><br><span class=\"line\">    ctx.beginPath()</span><br><span class=\"line\">    ctx.moveTo(originX - d, H - d * <span class=\"number\">2</span>)</span><br><span class=\"line\">    ctx.lineTo(originX + d, H - d * <span class=\"number\">2</span>)</span><br><span class=\"line\">    ctx.lineTo(originX, H)</span><br><span class=\"line\">    ctx.closePath()</span><br><span class=\"line\">    ctx.fill()</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>然后在<code>drawCoordinateSystem</code>函数里追加调用<code>drawScale(ctx, scaleD)</code>和<code>drawDirectionArrow(ctx, scaleD)</code>，运行后如图：</p>\n<p><img src=\"/blog/assets/images/linear-algebra/105.png\" alt=\"canvas坐标系\"></p>\n<p>如果想要在刻度上绘制数字标记，可以自行搜索相关文档，有一个叫<a href=\"http://www.w3school.com.cn/tags/canvas_filltext.asp\" target=\"_blank\" rel=\"noopener\">fillText</a>的函数。</p>\n<h5 id=\"3-绘制直线\"><a href=\"#3-绘制直线\" class=\"headerlink\" title=\"3. 绘制直线\"></a>3. 绘制直线</h5><p><code>a11 * x1 + a12 * x2 = b1</code> 此方程相当于 <code>a * x + b * y = c</code>。</p>\n<p>我们可以根据直线方程找到两个点，将两个点通过<code>moveTo</code>和<code>lineTo</code>连接并绘制出来。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//---绘制直线---</span></span><br><span class=\"line\"><span class=\"comment\">// 传入直线方程的三个常数和直线颜色</span></span><br><span class=\"line\"><span class=\"comment\">/* </span></span><br><span class=\"line\"><span class=\"comment\">    a * x + b * y = c,</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">    在 x, y 轴上的点</span></span><br><span class=\"line\"><span class=\"comment\">    x = 0 &amp;&amp; b != 0, y = c / b =&gt; (0, c / b)</span></span><br><span class=\"line\"><span class=\"comment\">    y = 0 &amp;&amp; a != 0, x = c / a =&gt; (c / a, 0)</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">    b != 0, y = c / b =&gt; (x, (c - a * x) / b)</span></span><br><span class=\"line\"><span class=\"comment\">    a != 0, x = c / a =&gt; ((c - b * y) / a, y)</span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">drawLine</span>(<span class=\"params\">ctx, a, b, c, color = <span class=\"string\">'red'</span></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">// 如果有一个为零，那么直线就是平行于x或y轴的</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (b != <span class=\"number\">0</span> &amp;&amp; a != <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">var</span> x1 = c / a, y1 = <span class=\"number\">0</span>  <span class=\"comment\">// x轴上的点</span></span><br><span class=\"line\">        <span class=\"keyword\">var</span> x2 = <span class=\"number\">0</span>, y2 = c / b  <span class=\"comment\">// y轴上的点</span></span><br><span class=\"line\">        <span class=\"keyword\">var</span> x3 = -originX, y3 = (c - a * x3) / b    <span class=\"comment\">//左边界点</span></span><br><span class=\"line\">        <span class=\"keyword\">var</span> x4 = originX, y4 = (c - a * x4) / b    <span class=\"comment\">//右边界点</span></span><br><span class=\"line\"></span><br><span class=\"line\">        ctx.strokeStyle = color</span><br><span class=\"line\">        ctx.lineWidth = <span class=\"number\">1</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//  绘制直线</span></span><br><span class=\"line\">        ctx.beginPath()</span><br><span class=\"line\">        ctx.moveTo(x3 + originX, y3 + originY)</span><br><span class=\"line\">        ctx.lineTo(x4 + originX, y4 + originY)</span><br><span class=\"line\">        ctx.closePath()</span><br><span class=\"line\">        ctx.stroke()</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>然后调用该函数绘制：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">drawLine(ctx, 1, 1, 123, &apos;red&apos;)</span><br><span class=\"line\">drawLine(ctx, 1, 5, 999, &apos;blue&apos;)</span><br></pre></td></tr></table></figure>\n<p>结果：</p>\n<p><img src=\"/blog/assets/images/linear-algebra/107.png\" alt=\"canvas坐标系\"></p>\n<h5 id=\"4-求出两直线的交点\"><a href=\"#4-求出两直线的交点\" class=\"headerlink\" title=\"4. 求出两直线的交点\"></a>4. 求出两直线的交点</h5><p>说了这么多，现在才开始解方程？😤</p>\n<p>大多是基础的绘制工作。数学和编程相结合的地方就是如何根据直线方程绘制直线。</p>\n<p>对于方程：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">╭ a11*x1 + a12*x2 = b1</span><br><span class=\"line\">╰ a21*x1 + a22*x2 = b2</span><br></pre></td></tr></table></figure>\n<p>当<code>a11*a22 - a12*a21 != 0</code>时，方程有唯一解：<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">x1 = (b1*a22 - a12*b2)/(a11*a22 - a12*a21)</span><br><span class=\"line\"></span><br><span class=\"line\">x2 = (a11*b2 - b1*a21)/(a11*a22 - a12*a21)</span><br></pre></td></tr></table></figure></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">    |a11 a12|</span><br><span class=\"line\">D = |       | = a11*a22 - a12*a21 <span class=\"comment\">//分母</span></span><br><span class=\"line\">    |a21 a22|</span><br><span class=\"line\"></span><br><span class=\"line\">     |b1 a12|</span><br><span class=\"line\">D1 = |      | = b1*a22 - a1*b2 <span class=\"comment\">//x1分子</span></span><br><span class=\"line\">     |b2 a22|</span><br><span class=\"line\"></span><br><span class=\"line\">     |a11 b1|</span><br><span class=\"line\">D2 = |      | = a11*b2 - b1*a21 <span class=\"comment\">//x2分子</span></span><br><span class=\"line\">     |a21 b2|</span><br><span class=\"line\"></span><br><span class=\"line\">x1 = D1/D</span><br><span class=\"line\">x2 = D2/D</span><br></pre></td></tr></table></figure>\n<p>那么我们就可以根据这个来得出两直线相交的点<code>(x1, x2)</code></p>\n<p>下面一个函数是根据两直线的常数计算出交点。第二个函数是在以<code>(x, y)</code>为圆心，半径为10，绘制一个圆</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">    a11 &gt; a1</span></span><br><span class=\"line\"><span class=\"comment\">    a21 &gt; b1</span></span><br><span class=\"line\"><span class=\"comment\">    b1 &gt; c1</span></span><br><span class=\"line\"><span class=\"comment\">    ...</span></span><br><span class=\"line\"><span class=\"comment\">    计算两直线交点</span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">calculateIntersection</span>(<span class=\"params\">a11, a12, b1, a21, a22, b2</span>) </span>&#123;</span><br><span class=\"line\">    x1 = (b1 * a22 - a12 * b2) / (a11 * a22 - a12 * a21)</span><br><span class=\"line\">    x2 = (a11 * b2 - b1 * a21) / (a11 * a22 - a12 * a21)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">        x: x1,</span><br><span class=\"line\">        y: x2</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 绘制交点</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">drawIntersection</span>(<span class=\"params\">ctx, x, y</span>) </span>&#123;</span><br><span class=\"line\">    ctx.arc(x+originX, y+originY, <span class=\"number\">10</span>, <span class=\"number\">0</span>, <span class=\"number\">2</span>*<span class=\"built_in\">Math</span>.PI)</span><br><span class=\"line\">    ctx.fill()</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>最后，我们的绘制函数大概是这样的：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">drawCoordinateSystem(ctx)</span><br><span class=\"line\">drawLine(ctx, <span class=\"number\">1</span>, <span class=\"number\">1</span>, <span class=\"number\">123</span>, <span class=\"string\">'red'</span>)</span><br><span class=\"line\">drawLine(ctx, <span class=\"number\">1</span>, <span class=\"number\">5</span>, <span class=\"number\">999</span>, <span class=\"string\">'blue'</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> p = calculateIntersection(<span class=\"number\">1</span>, <span class=\"number\">1</span>, <span class=\"number\">123</span>, <span class=\"number\">1</span>, <span class=\"number\">5</span>, <span class=\"number\">999</span>)</span><br><span class=\"line\">drawIntersection(ctx, p.x, p.y)</span><br></pre></td></tr></table></figure>\n<p>结果如图：</p>\n<p><img src=\"/blog/assets/images/linear-algebra/108.png\" alt=\"canvas坐标系\"></p>\n<h3 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h3><p>上面求两直线交点的思路是根据<code>二阶行列式</code>来解<code>二元线性方程组</code>。可以看到，<code>行列式</code>是根据解<code>多元线性方程组</code>总结出来的。二阶或三阶行列式我们可以比较轻松的计算出结果，但是随着阶数增加，计算量也会越来越大，<code>n</code>的<code>阶乘</code>（<code>n*n(n-1)*...*3*2*1</code>）</p>\n<p>我们来看看求<code>二阶行列式</code>和<code>三阶行列式</code>的值的计算：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 计算二阶行列式的值</span></span><br><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">|a11 a12|</span></span><br><span class=\"line\"><span class=\"comment\">|a21 a22|</span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">calculate2Det</span>(<span class=\"params\">a11, a12, a21, a22</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">// 2!</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> a11*a22 - a12*a21</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 计算三阶行列式的值</span></span><br><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">|a11 a12 a13|</span></span><br><span class=\"line\"><span class=\"comment\">|a21 a22 a23|</span></span><br><span class=\"line\"><span class=\"comment\">|a31 a32 a33|</span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">calculate3Det</span>(<span class=\"params\">a11, a12, a13, a21, a22, a23, a31, a32, a33</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">// 3!</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> a11*a22*a33 + a12*a23*a31 + a13*a21*a32 - a13*a22*a31 - a12*a21*a33 - a11*a23*a32</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>如果是<code>四阶行列式</code>，那么我们要写<code>4!=24</code>个。所以我们要想办法简化计算，使用一种通用的方式来计算<code>行列式</code>的值，而不是一个一个全部写出来计算。</p>\n<p>那么编程上如何简化这个计算呢？</p>\n<p>下一节将会来解决这个问题。</p>\n","site":{"data":{}},"more":"<h3 id=\"环境\"><a href=\"#环境\" class=\"headerlink\" title=\"环境\"></a>环境</h3><p>采用的编程方式是网页，会使用<code>javascript</code>来实现线性代数中的计算方法。<br>比如文件<strong><em>linearAlgebra.html</em></strong>:<br><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"undefined\"></span></span><br><span class=\"line\"><span class=\"javascript\">    <span class=\"comment\">// 在控制台打印</span></span></span><br><span class=\"line\"><span class=\"javascript\">    <span class=\"built_in\">console</span>.log(<span class=\"number\">123</span>*<span class=\"number\">2</span>)</span></span><br><span class=\"line\"><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br></pre></td></tr></table></figure></p>\n<p>写入上面的代码，保存后用浏览器打开，然后右键打开<em>审查元素</em>点击<em>控制台（Console）</em>来查看输出。</p>\n<blockquote>\n<p>更多网页相关知识网上可以搜得到，掌握基本<code>javascript</code>编程知识就行了。</p>\n</blockquote>\n<h3 id=\"解二元线性方程组\"><a href=\"#解二元线性方程组\" class=\"headerlink\" title=\"解二元线性方程组\"></a>解二元线性方程组</h3><p><code>行列式</code>的概念是由解多元线性方程组而引出的。比如下面这个：</p>\n<p><img src=\"/blog/assets/images/linear-algebra/101.jpeg\" alt=\"二元线性方程组\"></p>\n<p>\b在坐标系中就是两根直线，分母为零的情况就是两根直线平行不相交。</p>\n<h5 id=\"1-绘制坐标系\"><a href=\"#1-绘制坐标系\" class=\"headerlink\" title=\"1. 绘制坐标系\"></a>1. 绘制坐标系</h5><p>下面是我用<code>canvas</code>绘制的坐标系，一般编程中涉及到坐标系的地方，跟数学里有些不同，y轴方向是向下为正。</p>\n<p><img src=\"/blog/assets/images/linear-algebra/103.png\" alt=\"canvas坐标系\"></p>\n<p><img src=\"/blog/assets/images/linear-algebra/106.gif\" alt=\"canvas坐标系\"></p>\n<p>那么来看看如何绘制出坐标系。下面主要是编程方面的东西，可以自己创建一个<code>.html</code>文件试一试。</p>\n<p>首先，创建<code>canvas</code><br><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">canvas</span> <span class=\"attr\">id</span>=<span class=\"string\">\"myCanvas\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">canvas</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"comment\">&lt;!-- Javascript 代码放在标签script里 --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text/javascript\"</span>&gt;</span><span class=\"undefined\"></span></span><br><span class=\"line\"><span class=\"javascript\">    <span class=\"comment\">// 保存canvas的长宽</span></span></span><br><span class=\"line\"><span class=\"javascript\">    <span class=\"keyword\">var</span> W = <span class=\"number\">800.0</span>, H = <span class=\"number\">600.0</span></span></span><br><span class=\"line\"><span class=\"undefined\"></span></span><br><span class=\"line\"><span class=\"javascript\">    <span class=\"comment\">// 获取canvas对象</span></span></span><br><span class=\"line\"><span class=\"javascript\">    <span class=\"keyword\">var</span> canvas = <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">'myCanvas'</span>)</span></span><br><span class=\"line\"><span class=\"undefined\">    canvas.width = W</span></span><br><span class=\"line\"><span class=\"undefined\">    canvas.height = H</span></span><br><span class=\"line\"><span class=\"undefined\"></span></span><br><span class=\"line\"><span class=\"javascript\">    <span class=\"comment\">// 获取canvas的画布context，我们所有的绘制都将在context上完成。</span></span></span><br><span class=\"line\"><span class=\"javascript\">    <span class=\"comment\">// 这里也可以传3d，那么context就是一个3d的画布</span></span></span><br><span class=\"line\"><span class=\"javascript\">    <span class=\"keyword\">var</span> ctx = canvas.getContext(<span class=\"string\">'2d'</span>)</span></span><br><span class=\"line\"><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br></pre></td></tr></table></figure></p>\n<p>画布创建好后，接下来着手绘制直角坐标系的两根辅助线。</p>\n<p>创建一个函数方便之后的重复调用。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 因为原点是从左上角开始的，为了方便看直线，将原点偏移到指定位置</span></span><br><span class=\"line\"><span class=\"comment\">// 每一个设置坐标的地方都要(x + originX, y + originY)</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> originX = W / <span class=\"number\">2.0</span>, originY = H / <span class=\"number\">2.0</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 调用函数，传入之前创建好的画布ctx</span></span><br><span class=\"line\">drawCoordinateSystem(ctx)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">drawCoordinateSystem</span>(<span class=\"params\">ctx</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">// 设置绘制线的颜色为black</span></span><br><span class=\"line\">    ctx.strokeStyle = <span class=\"string\">'black'</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 线宽度</span></span><br><span class=\"line\">    ctx.lineWidth = <span class=\"number\">1</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 水平线</span></span><br><span class=\"line\">    ctx.beginPath()</span><br><span class=\"line\">    ctx.moveTo(<span class=\"number\">0</span>, <span class=\"number\">0</span> + originY)  <span class=\"comment\">// 画布的左边界中点</span></span><br><span class=\"line\">    ctx.lineTo(W, <span class=\"number\">0</span> + originY)    <span class=\"comment\">// 画布的右边界中点</span></span><br><span class=\"line\">    ctx.closePath()</span><br><span class=\"line\">    ctx.stroke()</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 垂直线</span></span><br><span class=\"line\">    ctx.beginPath()</span><br><span class=\"line\">    ctx.moveTo(<span class=\"number\">0</span> + originX, <span class=\"number\">0</span>)  <span class=\"comment\">// 画布的上边界中点</span></span><br><span class=\"line\">    ctx.lineTo(<span class=\"number\">0</span> + originX, H)  <span class=\"comment\">// 画布的下边界中点</span></span><br><span class=\"line\">    ctx.closePath()</span><br><span class=\"line\">    ctx.stroke()</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><code>moveTo</code>是设置一个起点，<code>lineTo</code>是将线从上一个点连接到该点。</p>\n<p><code>stroke</code>绘制线条，如果<code>fill</code>\b，那么会将线包围的区域用颜色涂满。途中的黑色三角形方向标就是这样绘制的，设置三个点后调用<code>fill</code>。</p>\n<p>调用函数后得到下图：<br><img src=\"/blog/assets/images/linear-algebra/104.png\" alt=\"canvas坐标系\"></p>\n<p>阴影样式需要给<code>canvas</code>加上一个<code>box-shadow</code>：</p>\n<p><code>&lt;canvas id=&quot;myCanvas&quot; style=&quot;box-shadow:1px 1px 10px #666;&quot;&gt;&lt;/canvas&gt;</code></p>\n<h5 id=\"2-绘制坐标系刻度和方向标\"><a href=\"#2-绘制坐标系刻度和方向标\" class=\"headerlink\" title=\"2. 绘制坐标系刻度和方向标\"></a>2. 绘制坐标系刻度和方向标</h5><p>同样，分别创建函数来专门绘制刻度和方向标：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 刻度长度</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> scaleD= <span class=\"number\">10.0</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 绘制刻度</span></span><br><span class=\"line\"><span class=\"comment\">// 传入context和刻度长度</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">drawScale</span>(<span class=\"params\">ctx, d</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">// horizontal</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> x = <span class=\"number\">0</span>; x &lt; W; x += <span class=\"number\">50</span>) &#123;</span><br><span class=\"line\">        ctx.beginPath()</span><br><span class=\"line\">        ctx.moveTo(x, <span class=\"number\">0</span> + originY)</span><br><span class=\"line\">        ctx.lineTo(x, scaleD + originY)</span><br><span class=\"line\">        ctx.stroke()</span><br><span class=\"line\">        ctx.closePath()</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// vertical</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> y = <span class=\"number\">0</span>; y &lt; H; y += <span class=\"number\">50</span>) &#123;</span><br><span class=\"line\">        ctx.beginPath()</span><br><span class=\"line\">        ctx.moveTo(<span class=\"number\">0</span> + originX, y)</span><br><span class=\"line\">        ctx.lineTo(scaleD + originX, y)</span><br><span class=\"line\">        ctx.stroke()</span><br><span class=\"line\">        ctx.closePath()</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//绘制方向标（三角形），底边长度与底边到顶点长度一样的三角形</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">drawDirectionArrow</span>(<span class=\"params\">ctx, d</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">// horizontal</span></span><br><span class=\"line\">    ctx.beginPath()</span><br><span class=\"line\">    ctx.moveTo(W - d * <span class=\"number\">2</span>, originY - d)</span><br><span class=\"line\">    ctx.lineTo(W - d * <span class=\"number\">2</span>, originY + d)</span><br><span class=\"line\">    ctx.lineTo(W, originY)</span><br><span class=\"line\">    ctx.closePath()</span><br><span class=\"line\">    ctx.fill()</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// vertical</span></span><br><span class=\"line\">    ctx.beginPath()</span><br><span class=\"line\">    ctx.moveTo(originX - d, H - d * <span class=\"number\">2</span>)</span><br><span class=\"line\">    ctx.lineTo(originX + d, H - d * <span class=\"number\">2</span>)</span><br><span class=\"line\">    ctx.lineTo(originX, H)</span><br><span class=\"line\">    ctx.closePath()</span><br><span class=\"line\">    ctx.fill()</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>然后在<code>drawCoordinateSystem</code>函数里追加调用<code>drawScale(ctx, scaleD)</code>和<code>drawDirectionArrow(ctx, scaleD)</code>，运行后如图：</p>\n<p><img src=\"/blog/assets/images/linear-algebra/105.png\" alt=\"canvas坐标系\"></p>\n<p>如果想要在刻度上绘制数字标记，可以自行搜索相关文档，有一个叫<a href=\"http://www.w3school.com.cn/tags/canvas_filltext.asp\" target=\"_blank\" rel=\"noopener\">fillText</a>的函数。</p>\n<h5 id=\"3-绘制直线\"><a href=\"#3-绘制直线\" class=\"headerlink\" title=\"3. 绘制直线\"></a>3. 绘制直线</h5><p><code>a11 * x1 + a12 * x2 = b1</code> 此方程相当于 <code>a * x + b * y = c</code>。</p>\n<p>我们可以根据直线方程找到两个点，将两个点通过<code>moveTo</code>和<code>lineTo</code>连接并绘制出来。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//---绘制直线---</span></span><br><span class=\"line\"><span class=\"comment\">// 传入直线方程的三个常数和直线颜色</span></span><br><span class=\"line\"><span class=\"comment\">/* </span></span><br><span class=\"line\"><span class=\"comment\">    a * x + b * y = c,</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">    在 x, y 轴上的点</span></span><br><span class=\"line\"><span class=\"comment\">    x = 0 &amp;&amp; b != 0, y = c / b =&gt; (0, c / b)</span></span><br><span class=\"line\"><span class=\"comment\">    y = 0 &amp;&amp; a != 0, x = c / a =&gt; (c / a, 0)</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">    b != 0, y = c / b =&gt; (x, (c - a * x) / b)</span></span><br><span class=\"line\"><span class=\"comment\">    a != 0, x = c / a =&gt; ((c - b * y) / a, y)</span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">drawLine</span>(<span class=\"params\">ctx, a, b, c, color = <span class=\"string\">'red'</span></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">// 如果有一个为零，那么直线就是平行于x或y轴的</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (b != <span class=\"number\">0</span> &amp;&amp; a != <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">var</span> x1 = c / a, y1 = <span class=\"number\">0</span>  <span class=\"comment\">// x轴上的点</span></span><br><span class=\"line\">        <span class=\"keyword\">var</span> x2 = <span class=\"number\">0</span>, y2 = c / b  <span class=\"comment\">// y轴上的点</span></span><br><span class=\"line\">        <span class=\"keyword\">var</span> x3 = -originX, y3 = (c - a * x3) / b    <span class=\"comment\">//左边界点</span></span><br><span class=\"line\">        <span class=\"keyword\">var</span> x4 = originX, y4 = (c - a * x4) / b    <span class=\"comment\">//右边界点</span></span><br><span class=\"line\"></span><br><span class=\"line\">        ctx.strokeStyle = color</span><br><span class=\"line\">        ctx.lineWidth = <span class=\"number\">1</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//  绘制直线</span></span><br><span class=\"line\">        ctx.beginPath()</span><br><span class=\"line\">        ctx.moveTo(x3 + originX, y3 + originY)</span><br><span class=\"line\">        ctx.lineTo(x4 + originX, y4 + originY)</span><br><span class=\"line\">        ctx.closePath()</span><br><span class=\"line\">        ctx.stroke()</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>然后调用该函数绘制：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">drawLine(ctx, 1, 1, 123, &apos;red&apos;)</span><br><span class=\"line\">drawLine(ctx, 1, 5, 999, &apos;blue&apos;)</span><br></pre></td></tr></table></figure>\n<p>结果：</p>\n<p><img src=\"/blog/assets/images/linear-algebra/107.png\" alt=\"canvas坐标系\"></p>\n<h5 id=\"4-求出两直线的交点\"><a href=\"#4-求出两直线的交点\" class=\"headerlink\" title=\"4. 求出两直线的交点\"></a>4. 求出两直线的交点</h5><p>说了这么多，现在才开始解方程？😤</p>\n<p>大多是基础的绘制工作。数学和编程相结合的地方就是如何根据直线方程绘制直线。</p>\n<p>对于方程：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">╭ a11*x1 + a12*x2 = b1</span><br><span class=\"line\">╰ a21*x1 + a22*x2 = b2</span><br></pre></td></tr></table></figure>\n<p>当<code>a11*a22 - a12*a21 != 0</code>时，方程有唯一解：<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">x1 = (b1*a22 - a12*b2)/(a11*a22 - a12*a21)</span><br><span class=\"line\"></span><br><span class=\"line\">x2 = (a11*b2 - b1*a21)/(a11*a22 - a12*a21)</span><br></pre></td></tr></table></figure></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">    |a11 a12|</span><br><span class=\"line\">D = |       | = a11*a22 - a12*a21 <span class=\"comment\">//分母</span></span><br><span class=\"line\">    |a21 a22|</span><br><span class=\"line\"></span><br><span class=\"line\">     |b1 a12|</span><br><span class=\"line\">D1 = |      | = b1*a22 - a1*b2 <span class=\"comment\">//x1分子</span></span><br><span class=\"line\">     |b2 a22|</span><br><span class=\"line\"></span><br><span class=\"line\">     |a11 b1|</span><br><span class=\"line\">D2 = |      | = a11*b2 - b1*a21 <span class=\"comment\">//x2分子</span></span><br><span class=\"line\">     |a21 b2|</span><br><span class=\"line\"></span><br><span class=\"line\">x1 = D1/D</span><br><span class=\"line\">x2 = D2/D</span><br></pre></td></tr></table></figure>\n<p>那么我们就可以根据这个来得出两直线相交的点<code>(x1, x2)</code></p>\n<p>下面一个函数是根据两直线的常数计算出交点。第二个函数是在以<code>(x, y)</code>为圆心，半径为10，绘制一个圆</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">    a11 &gt; a1</span></span><br><span class=\"line\"><span class=\"comment\">    a21 &gt; b1</span></span><br><span class=\"line\"><span class=\"comment\">    b1 &gt; c1</span></span><br><span class=\"line\"><span class=\"comment\">    ...</span></span><br><span class=\"line\"><span class=\"comment\">    计算两直线交点</span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">calculateIntersection</span>(<span class=\"params\">a11, a12, b1, a21, a22, b2</span>) </span>&#123;</span><br><span class=\"line\">    x1 = (b1 * a22 - a12 * b2) / (a11 * a22 - a12 * a21)</span><br><span class=\"line\">    x2 = (a11 * b2 - b1 * a21) / (a11 * a22 - a12 * a21)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">        x: x1,</span><br><span class=\"line\">        y: x2</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 绘制交点</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">drawIntersection</span>(<span class=\"params\">ctx, x, y</span>) </span>&#123;</span><br><span class=\"line\">    ctx.arc(x+originX, y+originY, <span class=\"number\">10</span>, <span class=\"number\">0</span>, <span class=\"number\">2</span>*<span class=\"built_in\">Math</span>.PI)</span><br><span class=\"line\">    ctx.fill()</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>最后，我们的绘制函数大概是这样的：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">drawCoordinateSystem(ctx)</span><br><span class=\"line\">drawLine(ctx, <span class=\"number\">1</span>, <span class=\"number\">1</span>, <span class=\"number\">123</span>, <span class=\"string\">'red'</span>)</span><br><span class=\"line\">drawLine(ctx, <span class=\"number\">1</span>, <span class=\"number\">5</span>, <span class=\"number\">999</span>, <span class=\"string\">'blue'</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> p = calculateIntersection(<span class=\"number\">1</span>, <span class=\"number\">1</span>, <span class=\"number\">123</span>, <span class=\"number\">1</span>, <span class=\"number\">5</span>, <span class=\"number\">999</span>)</span><br><span class=\"line\">drawIntersection(ctx, p.x, p.y)</span><br></pre></td></tr></table></figure>\n<p>结果如图：</p>\n<p><img src=\"/blog/assets/images/linear-algebra/108.png\" alt=\"canvas坐标系\"></p>\n<h3 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h3><p>上面求两直线交点的思路是根据<code>二阶行列式</code>来解<code>二元线性方程组</code>。可以看到，<code>行列式</code>是根据解<code>多元线性方程组</code>总结出来的。二阶或三阶行列式我们可以比较轻松的计算出结果，但是随着阶数增加，计算量也会越来越大，<code>n</code>的<code>阶乘</code>（<code>n*n(n-1)*...*3*2*1</code>）</p>\n<p>我们来看看求<code>二阶行列式</code>和<code>三阶行列式</code>的值的计算：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 计算二阶行列式的值</span></span><br><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">|a11 a12|</span></span><br><span class=\"line\"><span class=\"comment\">|a21 a22|</span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">calculate2Det</span>(<span class=\"params\">a11, a12, a21, a22</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">// 2!</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> a11*a22 - a12*a21</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 计算三阶行列式的值</span></span><br><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">|a11 a12 a13|</span></span><br><span class=\"line\"><span class=\"comment\">|a21 a22 a23|</span></span><br><span class=\"line\"><span class=\"comment\">|a31 a32 a33|</span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">calculate3Det</span>(<span class=\"params\">a11, a12, a13, a21, a22, a23, a31, a32, a33</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">// 3!</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> a11*a22*a33 + a12*a23*a31 + a13*a21*a32 - a13*a22*a31 - a12*a21*a33 - a11*a23*a32</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>如果是<code>四阶行列式</code>，那么我们要写<code>4!=24</code>个。所以我们要想办法简化计算，使用一种通用的方式来计算<code>行列式</code>的值，而不是一个一个全部写出来计算。</p>\n<p>那么编程上如何简化这个计算呢？</p>\n<p>下一节将会来解决这个问题。</p>\n"},{"layout":"post","title":"微信小程序群功能开发-后端篇","date":"2018-03-22T10:28:49.000Z","excerpt":"","comments":1,"_content":"\n之前介绍过了如何在微信小程序中获取群openGId相关的流程，在这篇文章中我会使用`php`实现之前提到过的相关接口。解析`encryptedData`和`iv`的代码官方已经给出了`php`、`nodejs`等版本的实现，这篇主要是贴一些相关代码。\n\n\n![openGId](https://upload-images.jianshu.io/upload_images/2158535-341dcae96ac8bf6e.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n### 准备\n\n下载官方实例：https://mp.weixin.qq.com/debug/wxadoc/dev/demo/aes-sample.zip\n\n在自己的代码中引入并设置相关常数：\n```php\nrequire_once('wxBizDataCrypt.php');\n\n$appid= '...';  //小程序 AppID\n$appsecret= '...';  //小程序 AppSecret\n\n```\n\n### 获取登录信息\n\n根据微信小程序中通过`wx.login`得到的`code`获取用户对小程序的唯一标识`openid`和`session_key`，`session_key`时会过期的。\n\n当然，满足一定条件还会的到`unionid`，具体可以查看官方文档。[UnionID机制说明](https://mp.weixin.qq.com/debug/wxadoc/dev/api/uinionID.html)\n\n```php\nfunction getInfoWithCode($appid, $appsecret, $code) {\n    $url = \"https://api.weixin.qq.com/sns/jscode2session?appid=\".$appid.\"&secret=\".$appsecret.\"&js_code=\".$code.\"&grant_type=authorization_code\";\n    $reData = http_post($url, array());\n\n    $obj = json_decode($reData);\n\n    return $obj;\n}\n```\n\n### 解析加密信息\n\n下面函数是根据官方示例改成的：\n\n```php\nfunction getDecodeEncryptedData($sessionKey, $encryptedData, $iv) {\n    $pc = new WXBizDataCrypt($appid, $sessionKey);\n    $errCode = $pc->decryptData($encryptedData, $iv, $data );\n\n    if ($errCode == 0) {\n        return $data;\n    } else {\n        return $errCode;\n    }\n}\n```\n\n最后获取`post`传过来的参数，进行调用获取`openGId`：\n\n```php\n$code = ... // post 参数\n$encryptedData = ... // post 参数\n$iv = ... // post  参数\n\n$loginInfo = getInfoWithCode($appid, $appsecret, $code);\n$sessionKey = $loginInfo->session_key;\necho getDecodeEncryptedData($sessionKey, $encryptedData, $iv);\n```\n\n前端拿到`openGId`后就可以进行绑定相关操作了。\n\n`http_post`函数，是官方某个demo里的，具体是哪里的忘了：\n\n```php\nfunction http_post( $url, $data=null ) {\n    $curl = curl_init(); // 启动一个CURL会话\n    curl_setopt($curl, CURLOPT_URL, $url); // 要访问的地址\n    curl_setopt($curl, CURLOPT_SSL_VERIFYPEER, false); // 对认证证书来源的检查\n    curl_setopt($curl, CURLOPT_SSL_VERIFYHOST, false); // 从证书中检查SSL加密算法是否存在\n    curl_setopt($curl, CURLOPT_USERAGENT, $_SERVER['HTTP_USER_AGENT']); // 模拟用户使用的浏览器\n    if($data != null){\n        curl_setopt($curl, CURLOPT_POST, 1); // 发送一个常规的Post请求\n        curl_setopt($curl, CURLOPT_POSTFIELDS, $data); // Post提交的数据包\n    }\n    curl_setopt($curl, CURLOPT_TIMEOUT, 300); // 设置超时限制防止死循环\n    curl_setopt($curl, CURLOPT_HEADER, 0); // 显示返回的Header区域内容\n    curl_setopt($curl, CURLOPT_RETURNTRANSFER, 1); // 获取的信息以文件流的形式返回\n    $info = curl_exec($curl); // 执行操作\n    curl_close( $curl );\n    // var_dump(json_decode($resp, true));\n    // echo \"<br><br><br><br>\";\n    return $info;\n}\n```\n\n其实这些都可以从官方文档里找到，这里只是做一个总结。\n\n因为我用过框架，上面代码是改变过的，没有进行实际测试，但思路就大概是这样的。\n\n如果代码有什么问题可以告知我。\n\n### 参考\n\n- [小程序登录](https://mp.weixin.qq.com/debug/wxadoc/dev/api/api-login.html#wxchecksessionobject)\n- [用户数据的签名验证和加解密](https://mp.weixin.qq.com/debug/wxadoc/dev/api/signature.html)\n\n","source":"_posts/2018-03-22-develop-wechat-group-miniprogram-back-end.md","raw":"---\nlayout: post\ntitle: 微信小程序群功能开发-后端篇\ndate: '2018-03-22 18:28:49'\nexcerpt: >-\n    在《微信小程序群功能开发前端篇》中介绍了如何在微信小程序中获取群openGId相关的流程，在这篇文章中我会使用`php`实现之前提到过的相关接口。\ncomments: true\n---\n\n之前介绍过了如何在微信小程序中获取群openGId相关的流程，在这篇文章中我会使用`php`实现之前提到过的相关接口。解析`encryptedData`和`iv`的代码官方已经给出了`php`、`nodejs`等版本的实现，这篇主要是贴一些相关代码。\n\n\n![openGId](https://upload-images.jianshu.io/upload_images/2158535-341dcae96ac8bf6e.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n### 准备\n\n下载官方实例：https://mp.weixin.qq.com/debug/wxadoc/dev/demo/aes-sample.zip\n\n在自己的代码中引入并设置相关常数：\n```php\nrequire_once('wxBizDataCrypt.php');\n\n$appid= '...';  //小程序 AppID\n$appsecret= '...';  //小程序 AppSecret\n\n```\n\n### 获取登录信息\n\n根据微信小程序中通过`wx.login`得到的`code`获取用户对小程序的唯一标识`openid`和`session_key`，`session_key`时会过期的。\n\n当然，满足一定条件还会的到`unionid`，具体可以查看官方文档。[UnionID机制说明](https://mp.weixin.qq.com/debug/wxadoc/dev/api/uinionID.html)\n\n```php\nfunction getInfoWithCode($appid, $appsecret, $code) {\n    $url = \"https://api.weixin.qq.com/sns/jscode2session?appid=\".$appid.\"&secret=\".$appsecret.\"&js_code=\".$code.\"&grant_type=authorization_code\";\n    $reData = http_post($url, array());\n\n    $obj = json_decode($reData);\n\n    return $obj;\n}\n```\n\n### 解析加密信息\n\n下面函数是根据官方示例改成的：\n\n```php\nfunction getDecodeEncryptedData($sessionKey, $encryptedData, $iv) {\n    $pc = new WXBizDataCrypt($appid, $sessionKey);\n    $errCode = $pc->decryptData($encryptedData, $iv, $data );\n\n    if ($errCode == 0) {\n        return $data;\n    } else {\n        return $errCode;\n    }\n}\n```\n\n最后获取`post`传过来的参数，进行调用获取`openGId`：\n\n```php\n$code = ... // post 参数\n$encryptedData = ... // post 参数\n$iv = ... // post  参数\n\n$loginInfo = getInfoWithCode($appid, $appsecret, $code);\n$sessionKey = $loginInfo->session_key;\necho getDecodeEncryptedData($sessionKey, $encryptedData, $iv);\n```\n\n前端拿到`openGId`后就可以进行绑定相关操作了。\n\n`http_post`函数，是官方某个demo里的，具体是哪里的忘了：\n\n```php\nfunction http_post( $url, $data=null ) {\n    $curl = curl_init(); // 启动一个CURL会话\n    curl_setopt($curl, CURLOPT_URL, $url); // 要访问的地址\n    curl_setopt($curl, CURLOPT_SSL_VERIFYPEER, false); // 对认证证书来源的检查\n    curl_setopt($curl, CURLOPT_SSL_VERIFYHOST, false); // 从证书中检查SSL加密算法是否存在\n    curl_setopt($curl, CURLOPT_USERAGENT, $_SERVER['HTTP_USER_AGENT']); // 模拟用户使用的浏览器\n    if($data != null){\n        curl_setopt($curl, CURLOPT_POST, 1); // 发送一个常规的Post请求\n        curl_setopt($curl, CURLOPT_POSTFIELDS, $data); // Post提交的数据包\n    }\n    curl_setopt($curl, CURLOPT_TIMEOUT, 300); // 设置超时限制防止死循环\n    curl_setopt($curl, CURLOPT_HEADER, 0); // 显示返回的Header区域内容\n    curl_setopt($curl, CURLOPT_RETURNTRANSFER, 1); // 获取的信息以文件流的形式返回\n    $info = curl_exec($curl); // 执行操作\n    curl_close( $curl );\n    // var_dump(json_decode($resp, true));\n    // echo \"<br><br><br><br>\";\n    return $info;\n}\n```\n\n其实这些都可以从官方文档里找到，这里只是做一个总结。\n\n因为我用过框架，上面代码是改变过的，没有进行实际测试，但思路就大概是这样的。\n\n如果代码有什么问题可以告知我。\n\n### 参考\n\n- [小程序登录](https://mp.weixin.qq.com/debug/wxadoc/dev/api/api-login.html#wxchecksessionobject)\n- [用户数据的签名验证和加解密](https://mp.weixin.qq.com/debug/wxadoc/dev/api/signature.html)\n\n","slug":"2018-03-22-develop-wechat-group-miniprogram-back-end","published":1,"updated":"2018-05-17T16:20:59.641Z","photos":[],"link":"","_id":"cjharmvvk000gmgmcpnr9c3zz","content":"<p>之前介绍过了如何在微信小程序中获取群openGId相关的流程，在这篇文章中我会使用<code>php</code>实现之前提到过的相关接口。解析<code>encryptedData</code>和<code>iv</code>的代码官方已经给出了<code>php</code>、<code>nodejs</code>等版本的实现，这篇主要是贴一些相关代码。</p>\n<p><img src=\"https://upload-images.jianshu.io/upload_images/2158535-341dcae96ac8bf6e.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"openGId\"></p>\n<h3 id=\"准备\"><a href=\"#准备\" class=\"headerlink\" title=\"准备\"></a>准备</h3><p>下载官方实例：<a href=\"https://mp.weixin.qq.com/debug/wxadoc/dev/demo/aes-sample.zip\" target=\"_blank\" rel=\"noopener\">https://mp.weixin.qq.com/debug/wxadoc/dev/demo/aes-sample.zip</a></p>\n<p>在自己的代码中引入并设置相关常数：<br><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">require_once</span>(<span class=\"string\">'wxBizDataCrypt.php'</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">$appid= <span class=\"string\">'...'</span>;  <span class=\"comment\">//小程序 AppID</span></span><br><span class=\"line\">$appsecret= <span class=\"string\">'...'</span>;  <span class=\"comment\">//小程序 AppSecret</span></span><br></pre></td></tr></table></figure></p>\n<h3 id=\"获取登录信息\"><a href=\"#获取登录信息\" class=\"headerlink\" title=\"获取登录信息\"></a>获取登录信息</h3><p>根据微信小程序中通过<code>wx.login</code>得到的<code>code</code>获取用户对小程序的唯一标识<code>openid</code>和<code>session_key</code>，<code>session_key</code>时会过期的。</p>\n<p>当然，满足一定条件还会的到<code>unionid</code>，具体可以查看官方文档。<a href=\"https://mp.weixin.qq.com/debug/wxadoc/dev/api/uinionID.html\" target=\"_blank\" rel=\"noopener\">UnionID机制说明</a></p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">getInfoWithCode</span><span class=\"params\">($appid, $appsecret, $code)</span> </span>&#123;</span><br><span class=\"line\">    $url = <span class=\"string\">\"https://api.weixin.qq.com/sns/jscode2session?appid=\"</span>.$appid.<span class=\"string\">\"&amp;secret=\"</span>.$appsecret.<span class=\"string\">\"&amp;js_code=\"</span>.$code.<span class=\"string\">\"&amp;grant_type=authorization_code\"</span>;</span><br><span class=\"line\">    $reData = http_post($url, <span class=\"keyword\">array</span>());</span><br><span class=\"line\"></span><br><span class=\"line\">    $obj = json_decode($reData);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> $obj;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"解析加密信息\"><a href=\"#解析加密信息\" class=\"headerlink\" title=\"解析加密信息\"></a>解析加密信息</h3><p>下面函数是根据官方示例改成的：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">getDecodeEncryptedData</span><span class=\"params\">($sessionKey, $encryptedData, $iv)</span> </span>&#123;</span><br><span class=\"line\">    $pc = <span class=\"keyword\">new</span> WXBizDataCrypt($appid, $sessionKey);</span><br><span class=\"line\">    $errCode = $pc-&gt;decryptData($encryptedData, $iv, $data );</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> ($errCode == <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> $data;</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> $errCode;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>最后获取<code>post</code>传过来的参数，进行调用获取<code>openGId</code>：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$code = ... <span class=\"comment\">// post 参数</span></span><br><span class=\"line\">$encryptedData = ... <span class=\"comment\">// post 参数</span></span><br><span class=\"line\">$iv = ... <span class=\"comment\">// post  参数</span></span><br><span class=\"line\"></span><br><span class=\"line\">$loginInfo = getInfoWithCode($appid, $appsecret, $code);</span><br><span class=\"line\">$sessionKey = $loginInfo-&gt;session_key;</span><br><span class=\"line\"><span class=\"keyword\">echo</span> getDecodeEncryptedData($sessionKey, $encryptedData, $iv);</span><br></pre></td></tr></table></figure>\n<p>前端拿到<code>openGId</code>后就可以进行绑定相关操作了。</p>\n<p><code>http_post</code>函数，是官方某个demo里的，具体是哪里的忘了：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">http_post</span><span class=\"params\">( $url, $data=null )</span> </span>&#123;</span><br><span class=\"line\">    $curl = curl_init(); <span class=\"comment\">// 启动一个CURL会话</span></span><br><span class=\"line\">    curl_setopt($curl, CURLOPT_URL, $url); <span class=\"comment\">// 要访问的地址</span></span><br><span class=\"line\">    curl_setopt($curl, CURLOPT_SSL_VERIFYPEER, <span class=\"keyword\">false</span>); <span class=\"comment\">// 对认证证书来源的检查</span></span><br><span class=\"line\">    curl_setopt($curl, CURLOPT_SSL_VERIFYHOST, <span class=\"keyword\">false</span>); <span class=\"comment\">// 从证书中检查SSL加密算法是否存在</span></span><br><span class=\"line\">    curl_setopt($curl, CURLOPT_USERAGENT, $_SERVER[<span class=\"string\">'HTTP_USER_AGENT'</span>]); <span class=\"comment\">// 模拟用户使用的浏览器</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span>($data != <span class=\"keyword\">null</span>)&#123;</span><br><span class=\"line\">        curl_setopt($curl, CURLOPT_POST, <span class=\"number\">1</span>); <span class=\"comment\">// 发送一个常规的Post请求</span></span><br><span class=\"line\">        curl_setopt($curl, CURLOPT_POSTFIELDS, $data); <span class=\"comment\">// Post提交的数据包</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    curl_setopt($curl, CURLOPT_TIMEOUT, <span class=\"number\">300</span>); <span class=\"comment\">// 设置超时限制防止死循环</span></span><br><span class=\"line\">    curl_setopt($curl, CURLOPT_HEADER, <span class=\"number\">0</span>); <span class=\"comment\">// 显示返回的Header区域内容</span></span><br><span class=\"line\">    curl_setopt($curl, CURLOPT_RETURNTRANSFER, <span class=\"number\">1</span>); <span class=\"comment\">// 获取的信息以文件流的形式返回</span></span><br><span class=\"line\">    $info = curl_exec($curl); <span class=\"comment\">// 执行操作</span></span><br><span class=\"line\">    curl_close( $curl );</span><br><span class=\"line\">    <span class=\"comment\">// var_dump(json_decode($resp, true));</span></span><br><span class=\"line\">    <span class=\"comment\">// echo \"&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;\";</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> $info;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>其实这些都可以从官方文档里找到，这里只是做一个总结。</p>\n<p>因为我用过框架，上面代码是改变过的，没有进行实际测试，但思路就大概是这样的。</p>\n<p>如果代码有什么问题可以告知我。</p>\n<h3 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h3><ul>\n<li><a href=\"https://mp.weixin.qq.com/debug/wxadoc/dev/api/api-login.html#wxchecksessionobject\" target=\"_blank\" rel=\"noopener\">小程序登录</a></li>\n<li><a href=\"https://mp.weixin.qq.com/debug/wxadoc/dev/api/signature.html\" target=\"_blank\" rel=\"noopener\">用户数据的签名验证和加解密</a></li>\n</ul>\n","site":{"data":{}},"more":"<p>之前介绍过了如何在微信小程序中获取群openGId相关的流程，在这篇文章中我会使用<code>php</code>实现之前提到过的相关接口。解析<code>encryptedData</code>和<code>iv</code>的代码官方已经给出了<code>php</code>、<code>nodejs</code>等版本的实现，这篇主要是贴一些相关代码。</p>\n<p><img src=\"https://upload-images.jianshu.io/upload_images/2158535-341dcae96ac8bf6e.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"openGId\"></p>\n<h3 id=\"准备\"><a href=\"#准备\" class=\"headerlink\" title=\"准备\"></a>准备</h3><p>下载官方实例：<a href=\"https://mp.weixin.qq.com/debug/wxadoc/dev/demo/aes-sample.zip\" target=\"_blank\" rel=\"noopener\">https://mp.weixin.qq.com/debug/wxadoc/dev/demo/aes-sample.zip</a></p>\n<p>在自己的代码中引入并设置相关常数：<br><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">require_once</span>(<span class=\"string\">'wxBizDataCrypt.php'</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">$appid= <span class=\"string\">'...'</span>;  <span class=\"comment\">//小程序 AppID</span></span><br><span class=\"line\">$appsecret= <span class=\"string\">'...'</span>;  <span class=\"comment\">//小程序 AppSecret</span></span><br></pre></td></tr></table></figure></p>\n<h3 id=\"获取登录信息\"><a href=\"#获取登录信息\" class=\"headerlink\" title=\"获取登录信息\"></a>获取登录信息</h3><p>根据微信小程序中通过<code>wx.login</code>得到的<code>code</code>获取用户对小程序的唯一标识<code>openid</code>和<code>session_key</code>，<code>session_key</code>时会过期的。</p>\n<p>当然，满足一定条件还会的到<code>unionid</code>，具体可以查看官方文档。<a href=\"https://mp.weixin.qq.com/debug/wxadoc/dev/api/uinionID.html\" target=\"_blank\" rel=\"noopener\">UnionID机制说明</a></p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">getInfoWithCode</span><span class=\"params\">($appid, $appsecret, $code)</span> </span>&#123;</span><br><span class=\"line\">    $url = <span class=\"string\">\"https://api.weixin.qq.com/sns/jscode2session?appid=\"</span>.$appid.<span class=\"string\">\"&amp;secret=\"</span>.$appsecret.<span class=\"string\">\"&amp;js_code=\"</span>.$code.<span class=\"string\">\"&amp;grant_type=authorization_code\"</span>;</span><br><span class=\"line\">    $reData = http_post($url, <span class=\"keyword\">array</span>());</span><br><span class=\"line\"></span><br><span class=\"line\">    $obj = json_decode($reData);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> $obj;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"解析加密信息\"><a href=\"#解析加密信息\" class=\"headerlink\" title=\"解析加密信息\"></a>解析加密信息</h3><p>下面函数是根据官方示例改成的：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">getDecodeEncryptedData</span><span class=\"params\">($sessionKey, $encryptedData, $iv)</span> </span>&#123;</span><br><span class=\"line\">    $pc = <span class=\"keyword\">new</span> WXBizDataCrypt($appid, $sessionKey);</span><br><span class=\"line\">    $errCode = $pc-&gt;decryptData($encryptedData, $iv, $data );</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> ($errCode == <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> $data;</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> $errCode;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>最后获取<code>post</code>传过来的参数，进行调用获取<code>openGId</code>：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$code = ... <span class=\"comment\">// post 参数</span></span><br><span class=\"line\">$encryptedData = ... <span class=\"comment\">// post 参数</span></span><br><span class=\"line\">$iv = ... <span class=\"comment\">// post  参数</span></span><br><span class=\"line\"></span><br><span class=\"line\">$loginInfo = getInfoWithCode($appid, $appsecret, $code);</span><br><span class=\"line\">$sessionKey = $loginInfo-&gt;session_key;</span><br><span class=\"line\"><span class=\"keyword\">echo</span> getDecodeEncryptedData($sessionKey, $encryptedData, $iv);</span><br></pre></td></tr></table></figure>\n<p>前端拿到<code>openGId</code>后就可以进行绑定相关操作了。</p>\n<p><code>http_post</code>函数，是官方某个demo里的，具体是哪里的忘了：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">http_post</span><span class=\"params\">( $url, $data=null )</span> </span>&#123;</span><br><span class=\"line\">    $curl = curl_init(); <span class=\"comment\">// 启动一个CURL会话</span></span><br><span class=\"line\">    curl_setopt($curl, CURLOPT_URL, $url); <span class=\"comment\">// 要访问的地址</span></span><br><span class=\"line\">    curl_setopt($curl, CURLOPT_SSL_VERIFYPEER, <span class=\"keyword\">false</span>); <span class=\"comment\">// 对认证证书来源的检查</span></span><br><span class=\"line\">    curl_setopt($curl, CURLOPT_SSL_VERIFYHOST, <span class=\"keyword\">false</span>); <span class=\"comment\">// 从证书中检查SSL加密算法是否存在</span></span><br><span class=\"line\">    curl_setopt($curl, CURLOPT_USERAGENT, $_SERVER[<span class=\"string\">'HTTP_USER_AGENT'</span>]); <span class=\"comment\">// 模拟用户使用的浏览器</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span>($data != <span class=\"keyword\">null</span>)&#123;</span><br><span class=\"line\">        curl_setopt($curl, CURLOPT_POST, <span class=\"number\">1</span>); <span class=\"comment\">// 发送一个常规的Post请求</span></span><br><span class=\"line\">        curl_setopt($curl, CURLOPT_POSTFIELDS, $data); <span class=\"comment\">// Post提交的数据包</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    curl_setopt($curl, CURLOPT_TIMEOUT, <span class=\"number\">300</span>); <span class=\"comment\">// 设置超时限制防止死循环</span></span><br><span class=\"line\">    curl_setopt($curl, CURLOPT_HEADER, <span class=\"number\">0</span>); <span class=\"comment\">// 显示返回的Header区域内容</span></span><br><span class=\"line\">    curl_setopt($curl, CURLOPT_RETURNTRANSFER, <span class=\"number\">1</span>); <span class=\"comment\">// 获取的信息以文件流的形式返回</span></span><br><span class=\"line\">    $info = curl_exec($curl); <span class=\"comment\">// 执行操作</span></span><br><span class=\"line\">    curl_close( $curl );</span><br><span class=\"line\">    <span class=\"comment\">// var_dump(json_decode($resp, true));</span></span><br><span class=\"line\">    <span class=\"comment\">// echo \"&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;\";</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> $info;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>其实这些都可以从官方文档里找到，这里只是做一个总结。</p>\n<p>因为我用过框架，上面代码是改变过的，没有进行实际测试，但思路就大概是这样的。</p>\n<p>如果代码有什么问题可以告知我。</p>\n<h3 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h3><ul>\n<li><a href=\"https://mp.weixin.qq.com/debug/wxadoc/dev/api/api-login.html#wxchecksessionobject\" target=\"_blank\" rel=\"noopener\">小程序登录</a></li>\n<li><a href=\"https://mp.weixin.qq.com/debug/wxadoc/dev/api/signature.html\" target=\"_blank\" rel=\"noopener\">用户数据的签名验证和加解密</a></li>\n</ul>\n"},{"title":"《Florence》- 游戏推荐","date":"2018-04-09T08:32:28.000Z","comments":1,"_content":"\n这是一款像故事书一样游戏，你可以跟这本书进行交互来慢慢感受这段关于女生恋爱的故事。\n\n印象深刻的一个地方是, 游戏用拼图的难易程度来表达一开始约会找不到话题、 不知道说什么到后来聊得来的过程。\n\n[Florence iOS 下载](https://itunes.apple.com/cn/app/florence/id1297430468?mt=8)\n\n![Florence](/blog/assets/images/florence/florence0.jpeg)","source":"_posts/2018-04-09-Florence.md","raw":"---\ntitle: 《Florence》- 游戏推荐\ndate: '2018-04-09 16:32:28'\ncomments: true\n---\n\n这是一款像故事书一样游戏，你可以跟这本书进行交互来慢慢感受这段关于女生恋爱的故事。\n\n印象深刻的一个地方是, 游戏用拼图的难易程度来表达一开始约会找不到话题、 不知道说什么到后来聊得来的过程。\n\n[Florence iOS 下载](https://itunes.apple.com/cn/app/florence/id1297430468?mt=8)\n\n![Florence](/blog/assets/images/florence/florence0.jpeg)","slug":"2018-04-09-Florence","published":1,"updated":"2018-05-17T16:29:13.888Z","layout":"post","photos":[],"link":"","_id":"cjharmvvm000hmgmcydyfv7g7","content":"<p>这是一款像故事书一样游戏，你可以跟这本书进行交互来慢慢感受这段关于女生恋爱的故事。</p>\n<p>印象深刻的一个地方是, 游戏用拼图的难易程度来表达一开始约会找不到话题、 不知道说什么到后来聊得来的过程。</p>\n<p><a href=\"https://itunes.apple.com/cn/app/florence/id1297430468?mt=8\" target=\"_blank\" rel=\"noopener\">Florence iOS 下载</a></p>\n<p><img src=\"/blog/assets/images/florence/florence0.jpeg\" alt=\"Florence\"></p>\n","site":{"data":{}},"excerpt":"","more":"<p>这是一款像故事书一样游戏，你可以跟这本书进行交互来慢慢感受这段关于女生恋爱的故事。</p>\n<p>印象深刻的一个地方是, 游戏用拼图的难易程度来表达一开始约会找不到话题、 不知道说什么到后来聊得来的过程。</p>\n<p><a href=\"https://itunes.apple.com/cn/app/florence/id1297430468?mt=8\" target=\"_blank\" rel=\"noopener\">Florence iOS 下载</a></p>\n<p><img src=\"/blog/assets/images/florence/florence0.jpeg\" alt=\"Florence\"></p>\n"},{"title":"关于学习的目的 化繁为简","date":"2018-04-23T02:19:59.000Z","update":"2018-04-25 16:44:33","comments":1,"_content":"\n以前拼接过视频，用的是一种很挫很烦的方法，导出还很费时间，而且拼接出来的视频占的空间比原先的\b两个视频加起来还多的多。\n\n后来问了比较专业的人如何拼接视频，他用了一个非常简单的方法，时间也非常快。\n\n现在想来，学习的一个目的是要把做一件事情的步骤变简单，而不是复杂化。\n\n最近很火的`抖音`，主要功能是将视频和音乐进行合成。\n\n这里对其进行一个分析：对于视频制作，如果是不了解这方面知识的人是不知道如何将视频和音乐进行合成的，但是`抖音`将这个功能做出来让非专业的人也能享受视频制作带来的成就感。它将这个制作过程简单化，并不需要在电脑上用专业软件进行操作，用几乎每个人都有的`手机`就能够完成。\n\n题外话，对于`抖音`的音乐，这些音乐一般是一首歌的高潮部分，听了一次还想再听一次的那种，这可能也是玩`抖音`会上瘾的一个原因，我看一个视频一般会多看好几遍。\n\n`抖音`能火起来，并不是因为技术有多牛逼，或者是什么人工智能、区块链种种这些总被人拿来吹嘘的技术。你能很明显看到`抖音`制作一个视频的核心功能是视频与音乐的合成，我想这其中用不到什么人工智能，能想到会用到的地方就是它的首页推荐，可能会根据你的关注、看哪类。关键是用对地方，而不是因为某个技术火，就非得要去用。这与最近看到的一篇关于员工被辞退的文章中一句话很相似：辞退你，与能力无关。用到这里就是：一个软件能火起来，与技术牛逼程度无关。\n\n不过，我也还没想清楚具体原因。宣传、设计、对待产品的态度、质量把控？至少带动了人们的创作激情。看到过一篇关于现在软件会故意设计得让人上瘾，这一点使用者也是需要控制的。\n\n还有`微信`，对于年轻的一代，基本上都用过`QQ`，但提起让老一辈的人在`QQ`和`微信`之间做选择，那么我一定会选`微信`。区别在哪里？为什么选`微信`？因为我认为微信更加简单易用，这就是它适用于各种年龄段的一个重要原因。老一辈的人没有我们这么容易接受新事物，对于互联网的了解页没那么深，所以让他们去用`QQ`无疑是一件很头痛的事情。\n\n对比：`微信`首页直接呈现的是对话列表，`QQ`也是，但你点进一个对话就会发现其中的不同。而且其顶部的搜索框，`微信`是隐藏的，需要下拉才会呈现出来，这样做减少了首页的复杂性，显得更加简洁。\n\n再来看第二页：联系人列表。`微信`是直接一个列表显示完，`QQ`则不同，它多了一个层级：分组，这样你想要看全部联系人时，就会比`微信`多点分组个数次。从这一点来看，`微信`更为简单、直观。\n\n之后的一页，`微信`相对来说也显得干净，`QQ`则让人感觉混进了一些奇奇怪怪的功能。对与增加应用功能这一点，`微信`更为明智，把这个交给了`小程序`，你们想开发什么功能自己去做吧。`QQ`为了加功能反而变得更繁重。\n\n所以就在想，如何将一些常用的、看似复杂的、经常用到的功能简单化？\n\n关键词：常用、繁琐\n\n学习的目的是为了让一件事变得简单。\n\nThink Different.\n\n//补充一些类似的例子","source":"_posts/2018-04-23-about-learning.md","raw":"---\ntitle: 关于学习的目的 化繁为简\ndate: '2018-04-23 10:19:59'\nupdate: '2018-04-25 16:44:33'\ncomments: true\n---\n\n以前拼接过视频，用的是一种很挫很烦的方法，导出还很费时间，而且拼接出来的视频占的空间比原先的\b两个视频加起来还多的多。\n\n后来问了比较专业的人如何拼接视频，他用了一个非常简单的方法，时间也非常快。\n\n现在想来，学习的一个目的是要把做一件事情的步骤变简单，而不是复杂化。\n\n最近很火的`抖音`，主要功能是将视频和音乐进行合成。\n\n这里对其进行一个分析：对于视频制作，如果是不了解这方面知识的人是不知道如何将视频和音乐进行合成的，但是`抖音`将这个功能做出来让非专业的人也能享受视频制作带来的成就感。它将这个制作过程简单化，并不需要在电脑上用专业软件进行操作，用几乎每个人都有的`手机`就能够完成。\n\n题外话，对于`抖音`的音乐，这些音乐一般是一首歌的高潮部分，听了一次还想再听一次的那种，这可能也是玩`抖音`会上瘾的一个原因，我看一个视频一般会多看好几遍。\n\n`抖音`能火起来，并不是因为技术有多牛逼，或者是什么人工智能、区块链种种这些总被人拿来吹嘘的技术。你能很明显看到`抖音`制作一个视频的核心功能是视频与音乐的合成，我想这其中用不到什么人工智能，能想到会用到的地方就是它的首页推荐，可能会根据你的关注、看哪类。关键是用对地方，而不是因为某个技术火，就非得要去用。这与最近看到的一篇关于员工被辞退的文章中一句话很相似：辞退你，与能力无关。用到这里就是：一个软件能火起来，与技术牛逼程度无关。\n\n不过，我也还没想清楚具体原因。宣传、设计、对待产品的态度、质量把控？至少带动了人们的创作激情。看到过一篇关于现在软件会故意设计得让人上瘾，这一点使用者也是需要控制的。\n\n还有`微信`，对于年轻的一代，基本上都用过`QQ`，但提起让老一辈的人在`QQ`和`微信`之间做选择，那么我一定会选`微信`。区别在哪里？为什么选`微信`？因为我认为微信更加简单易用，这就是它适用于各种年龄段的一个重要原因。老一辈的人没有我们这么容易接受新事物，对于互联网的了解页没那么深，所以让他们去用`QQ`无疑是一件很头痛的事情。\n\n对比：`微信`首页直接呈现的是对话列表，`QQ`也是，但你点进一个对话就会发现其中的不同。而且其顶部的搜索框，`微信`是隐藏的，需要下拉才会呈现出来，这样做减少了首页的复杂性，显得更加简洁。\n\n再来看第二页：联系人列表。`微信`是直接一个列表显示完，`QQ`则不同，它多了一个层级：分组，这样你想要看全部联系人时，就会比`微信`多点分组个数次。从这一点来看，`微信`更为简单、直观。\n\n之后的一页，`微信`相对来说也显得干净，`QQ`则让人感觉混进了一些奇奇怪怪的功能。对与增加应用功能这一点，`微信`更为明智，把这个交给了`小程序`，你们想开发什么功能自己去做吧。`QQ`为了加功能反而变得更繁重。\n\n所以就在想，如何将一些常用的、看似复杂的、经常用到的功能简单化？\n\n关键词：常用、繁琐\n\n学习的目的是为了让一件事变得简单。\n\nThink Different.\n\n//补充一些类似的例子","slug":"2018-04-23-about-learning","published":1,"updated":"2018-04-27T06:44:08.978Z","layout":"post","photos":[],"link":"","_id":"cjharmvvp000imgmcolfy5fxz","content":"<p>以前拼接过视频，用的是一种很挫很烦的方法，导出还很费时间，而且拼接出来的视频占的空间比原先的\b两个视频加起来还多的多。</p>\n<p>后来问了比较专业的人如何拼接视频，他用了一个非常简单的方法，时间也非常快。</p>\n<p>现在想来，学习的一个目的是要把做一件事情的步骤变简单，而不是复杂化。</p>\n<p>最近很火的<code>抖音</code>，主要功能是将视频和音乐进行合成。</p>\n<p>这里对其进行一个分析：对于视频制作，如果是不了解这方面知识的人是不知道如何将视频和音乐进行合成的，但是<code>抖音</code>将这个功能做出来让非专业的人也能享受视频制作带来的成就感。它将这个制作过程简单化，并不需要在电脑上用专业软件进行操作，用几乎每个人都有的<code>手机</code>就能够完成。</p>\n<p>题外话，对于<code>抖音</code>的音乐，这些音乐一般是一首歌的高潮部分，听了一次还想再听一次的那种，这可能也是玩<code>抖音</code>会上瘾的一个原因，我看一个视频一般会多看好几遍。</p>\n<p><code>抖音</code>能火起来，并不是因为技术有多牛逼，或者是什么人工智能、区块链种种这些总被人拿来吹嘘的技术。你能很明显看到<code>抖音</code>制作一个视频的核心功能是视频与音乐的合成，我想这其中用不到什么人工智能，能想到会用到的地方就是它的首页推荐，可能会根据你的关注、看哪类。关键是用对地方，而不是因为某个技术火，就非得要去用。这与最近看到的一篇关于员工被辞退的文章中一句话很相似：辞退你，与能力无关。用到这里就是：一个软件能火起来，与技术牛逼程度无关。</p>\n<p>不过，我也还没想清楚具体原因。宣传、设计、对待产品的态度、质量把控？至少带动了人们的创作激情。看到过一篇关于现在软件会故意设计得让人上瘾，这一点使用者也是需要控制的。</p>\n<p>还有<code>微信</code>，对于年轻的一代，基本上都用过<code>QQ</code>，但提起让老一辈的人在<code>QQ</code>和<code>微信</code>之间做选择，那么我一定会选<code>微信</code>。区别在哪里？为什么选<code>微信</code>？因为我认为微信更加简单易用，这就是它适用于各种年龄段的一个重要原因。老一辈的人没有我们这么容易接受新事物，对于互联网的了解页没那么深，所以让他们去用<code>QQ</code>无疑是一件很头痛的事情。</p>\n<p>对比：<code>微信</code>首页直接呈现的是对话列表，<code>QQ</code>也是，但你点进一个对话就会发现其中的不同。而且其顶部的搜索框，<code>微信</code>是隐藏的，需要下拉才会呈现出来，这样做减少了首页的复杂性，显得更加简洁。</p>\n<p>再来看第二页：联系人列表。<code>微信</code>是直接一个列表显示完，<code>QQ</code>则不同，它多了一个层级：分组，这样你想要看全部联系人时，就会比<code>微信</code>多点分组个数次。从这一点来看，<code>微信</code>更为简单、直观。</p>\n<p>之后的一页，<code>微信</code>相对来说也显得干净，<code>QQ</code>则让人感觉混进了一些奇奇怪怪的功能。对与增加应用功能这一点，<code>微信</code>更为明智，把这个交给了<code>小程序</code>，你们想开发什么功能自己去做吧。<code>QQ</code>为了加功能反而变得更繁重。</p>\n<p>所以就在想，如何将一些常用的、看似复杂的、经常用到的功能简单化？</p>\n<p>关键词：常用、繁琐</p>\n<p>学习的目的是为了让一件事变得简单。</p>\n<p>Think Different.</p>\n<p>//补充一些类似的例子</p>\n","site":{"data":{}},"excerpt":"","more":"<p>以前拼接过视频，用的是一种很挫很烦的方法，导出还很费时间，而且拼接出来的视频占的空间比原先的\b两个视频加起来还多的多。</p>\n<p>后来问了比较专业的人如何拼接视频，他用了一个非常简单的方法，时间也非常快。</p>\n<p>现在想来，学习的一个目的是要把做一件事情的步骤变简单，而不是复杂化。</p>\n<p>最近很火的<code>抖音</code>，主要功能是将视频和音乐进行合成。</p>\n<p>这里对其进行一个分析：对于视频制作，如果是不了解这方面知识的人是不知道如何将视频和音乐进行合成的，但是<code>抖音</code>将这个功能做出来让非专业的人也能享受视频制作带来的成就感。它将这个制作过程简单化，并不需要在电脑上用专业软件进行操作，用几乎每个人都有的<code>手机</code>就能够完成。</p>\n<p>题外话，对于<code>抖音</code>的音乐，这些音乐一般是一首歌的高潮部分，听了一次还想再听一次的那种，这可能也是玩<code>抖音</code>会上瘾的一个原因，我看一个视频一般会多看好几遍。</p>\n<p><code>抖音</code>能火起来，并不是因为技术有多牛逼，或者是什么人工智能、区块链种种这些总被人拿来吹嘘的技术。你能很明显看到<code>抖音</code>制作一个视频的核心功能是视频与音乐的合成，我想这其中用不到什么人工智能，能想到会用到的地方就是它的首页推荐，可能会根据你的关注、看哪类。关键是用对地方，而不是因为某个技术火，就非得要去用。这与最近看到的一篇关于员工被辞退的文章中一句话很相似：辞退你，与能力无关。用到这里就是：一个软件能火起来，与技术牛逼程度无关。</p>\n<p>不过，我也还没想清楚具体原因。宣传、设计、对待产品的态度、质量把控？至少带动了人们的创作激情。看到过一篇关于现在软件会故意设计得让人上瘾，这一点使用者也是需要控制的。</p>\n<p>还有<code>微信</code>，对于年轻的一代，基本上都用过<code>QQ</code>，但提起让老一辈的人在<code>QQ</code>和<code>微信</code>之间做选择，那么我一定会选<code>微信</code>。区别在哪里？为什么选<code>微信</code>？因为我认为微信更加简单易用，这就是它适用于各种年龄段的一个重要原因。老一辈的人没有我们这么容易接受新事物，对于互联网的了解页没那么深，所以让他们去用<code>QQ</code>无疑是一件很头痛的事情。</p>\n<p>对比：<code>微信</code>首页直接呈现的是对话列表，<code>QQ</code>也是，但你点进一个对话就会发现其中的不同。而且其顶部的搜索框，<code>微信</code>是隐藏的，需要下拉才会呈现出来，这样做减少了首页的复杂性，显得更加简洁。</p>\n<p>再来看第二页：联系人列表。<code>微信</code>是直接一个列表显示完，<code>QQ</code>则不同，它多了一个层级：分组，这样你想要看全部联系人时，就会比<code>微信</code>多点分组个数次。从这一点来看，<code>微信</code>更为简单、直观。</p>\n<p>之后的一页，<code>微信</code>相对来说也显得干净，<code>QQ</code>则让人感觉混进了一些奇奇怪怪的功能。对与增加应用功能这一点，<code>微信</code>更为明智，把这个交给了<code>小程序</code>，你们想开发什么功能自己去做吧。<code>QQ</code>为了加功能反而变得更繁重。</p>\n<p>所以就在想，如何将一些常用的、看似复杂的、经常用到的功能简单化？</p>\n<p>关键词：常用、繁琐</p>\n<p>学习的目的是为了让一件事变得简单。</p>\n<p>Think Different.</p>\n<p>//补充一些类似的例子</p>\n"},{"layout":"post","title":"微信小程序群功能开发-前端篇","date":"2018-03-22T08:28:49.000Z","excerpt":"","comments":1,"_content":"\n我们在一些微信群中看到过这样的小程序分享卡片：当你点进去后，会看到一个列表，里面有其他群成员的头像和相关信息。比如《王者荣耀群排行》，但是段位信息是腾讯私有的接口，我们只能拿到头像和昵称等基础信息。\n\n下面我将实现小程序端的从转发到用户点击卡片后获取信息的这个过程。\n\n![openGId](https://upload-images.jianshu.io/upload_images/2158535-341dcae96ac8bf6e.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n### 开启\n\n首先我们要调用[`wx.showShareMenu`](https://mp.weixin.qq.com/debug/wxagame/dev/document/share/wx.showShareMenu.html?t=2018321)进行设置，来开启是否使用带`shareTicket`的转发，这个`shareTicket`是开发群功能的关键:\n\n```js\nwx.showShareMenu({\n    withShareTicket: true,\n})\n```\n\n我一般将其放在页面`onShow`中。\n\n### 触发转发事件\n\n如果要自定义转发按钮而不是有默认右上角的转发按钮，需要在页面中放置一个`open-type=\"share\"`的[`button`](https://mp.weixin.qq.com/debug/wxadoc/dev/component/button.html)组件:\n\n```html\n<button open-type=\"share\">share</button>\n```\n\n接下来在页面中设置分享函数[`onShareAppMessage`](https://mp.weixin.qq.com/debug/wxagame/dev/document/share/GroupMsgInfo.md?t=2018321):\n\n```js\nonShareAppMessage: function (res) {\n    if (res.from === 'button') {\n        // 来自页面内转发按钮\n        console.log(res.target)\n    }\n    return {\n        title: '自定义转发标题',\n        path: '/pages/test/test?id=123',\n        success: function (res) {\n            // 转发成功\n            console.log(res)\n            // 只有转发到群聊中打开才可以获取到 shareTickets 返回值，单聊没有 shareTickets\n            if (res.shareTickets && res.shareTickets.length>0) {\n                app.getShareInfo(res.shareTickets[0])\n            }\n        },\n        fail: function (res) {\n            // 转发失败\n            console.log(res)\n        }\n    }\n}\n```\n\n现在就可以进行转发了，在群聊中将会看到此次分享的小程序消息卡片。每个`shareTicket`对应每个群并且单聊不会有该值。这里只选择一个转发，所以直接取第一个。至于`app.getShareInfo`是用来获取群id(`openGId`)的函数，我们放到后面介绍。\n\n### 群成员点消息卡片\n\n当群成员点消息卡片进入小程序后，在`app.js`的`onShow`/`onLaunch`的`options`中可以获取到`shareTicket`，`shareTicket`每次都是不一样的，比分你分享的时候获取到的跟这里获取到的不是同一个，但是会对应同一个`openGId`。\n\n***app.js***:\n\n```js\n// 在onShow中获取转发信息shareTicket\nonShow: function (options) {\n    console.log(options)\n    let scene = options.scene\n\n    // 场景值是1044，带 shareTicket 的小程序消息卡片\n    if(scene == 1044) {\n        let shareTicket = options.shareTicket\n        // 这里的id根据自己的具体需求进行操作，也可以设置其他的\n        let id = options.query.id\n        this.getShareInfo(shareTicket)\n    }\n},\n\n// 获取加密信息encryptedData, iv\ngetShareInfo: function (shareTicket) {\n    const z = this\n    wx.getShareInfo({\n        shareTicket: shareTicket,\n        success: function (res) {\n            console.log(res)\n            let {encryptedData, iv} = res\n\n            if(encryptedData && iv) {\n                z.getDecodeEncryptedData(encryptedData, iv)\n            }\n        },\n        fail: function (res) {\n            console.log(res)\n        }\n    })\n},\n\n// 获取解密后的信息\ngetDecodeEncryptedData: function (encryptedData, iv) {\n    // 发送到后台解析\n    wx.login({\n        success: function(res) {\n            let code = res.code\n\n            // 下面只是演示代码\n            // post({\n            //     url:'https://www.example.com/controller/getDecodeEncryptedData'\n            //     data:{\n            //         code,\n            //         encryptedData,\n            //         iv,\n            //     }\n            // })\n        }\n    })\n},\n```\n\n首先，我们通过[`wx.getShareInfo`](https://mp.weixin.qq.com/debug/wxadoc/dev/api/share.html#wxgetshareinfoobject)获取`encryptedData`和`iv`，然后将其传给后台进行解析。\n\n在`getDecodeEncryptedData`中，当后台解析成功后，就会返回一个`openGId`。\n\n此时就可以将群`openGId`与用户`openid`进行绑定了，这个绑定信息也是要保存到后台的。如果后台没有保存过头像昵称信息，此时也可以将用户头像和昵称一起保存到后台。\n\n类似于下面这样的一个接口:\n```js\n// 下面只是演示代码\npost({\n    url:'https://www.example.com/controller/bindGroupAndUser'\n    data:{\n        code,\n        openGId\n    }\n})\n```\n\n其中的`code`调用[`wx.login`](https://mp.weixin.qq.com/debug/wxadoc/dev/api/api-login.html#wxloginobject)获得，后台根据这个`code`能获取到`openid`。然后进行绑定。\n\n然后根据自己的需求，可能还要一个保存用户基础信息和拉取群成员信息列表的接口。\n\n基本思路就是这样，我将在另一篇文章中描述后端的相关处理。\n\n### 参考\n\n- [小程序开发文档-转发](https://mp.weixin.qq.com/debug/wxadoc/dev/api/share.html)\n- [小程序登录](https://mp.weixin.qq.com/debug/wxadoc/dev/api/api-login.html#wxchecksessionobject)\n- [用户数据的签名验证和加解密](https://mp.weixin.qq.com/debug/wxadoc/dev/api/signature.html)","source":"_posts/2018-03-22-develop-wechat-group-miniprogram-front-end.md","raw":"---\nlayout: post\ntitle: 微信小程序群功能开发-前端篇\ndate: '2018-03-22 16:28:49'\nexcerpt: >-\n    我们在一些微信群中看到过这样的小程序分享卡片：当你点进去后，会看到一个列表，里面有其他群成员的头像和相关信息。比如《王者荣耀群排行》，但是段位信息是腾讯私有的接口，我们只能拿到头像和昵称等基础信息。\ncomments: true\n---\n\n我们在一些微信群中看到过这样的小程序分享卡片：当你点进去后，会看到一个列表，里面有其他群成员的头像和相关信息。比如《王者荣耀群排行》，但是段位信息是腾讯私有的接口，我们只能拿到头像和昵称等基础信息。\n\n下面我将实现小程序端的从转发到用户点击卡片后获取信息的这个过程。\n\n![openGId](https://upload-images.jianshu.io/upload_images/2158535-341dcae96ac8bf6e.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n### 开启\n\n首先我们要调用[`wx.showShareMenu`](https://mp.weixin.qq.com/debug/wxagame/dev/document/share/wx.showShareMenu.html?t=2018321)进行设置，来开启是否使用带`shareTicket`的转发，这个`shareTicket`是开发群功能的关键:\n\n```js\nwx.showShareMenu({\n    withShareTicket: true,\n})\n```\n\n我一般将其放在页面`onShow`中。\n\n### 触发转发事件\n\n如果要自定义转发按钮而不是有默认右上角的转发按钮，需要在页面中放置一个`open-type=\"share\"`的[`button`](https://mp.weixin.qq.com/debug/wxadoc/dev/component/button.html)组件:\n\n```html\n<button open-type=\"share\">share</button>\n```\n\n接下来在页面中设置分享函数[`onShareAppMessage`](https://mp.weixin.qq.com/debug/wxagame/dev/document/share/GroupMsgInfo.md?t=2018321):\n\n```js\nonShareAppMessage: function (res) {\n    if (res.from === 'button') {\n        // 来自页面内转发按钮\n        console.log(res.target)\n    }\n    return {\n        title: '自定义转发标题',\n        path: '/pages/test/test?id=123',\n        success: function (res) {\n            // 转发成功\n            console.log(res)\n            // 只有转发到群聊中打开才可以获取到 shareTickets 返回值，单聊没有 shareTickets\n            if (res.shareTickets && res.shareTickets.length>0) {\n                app.getShareInfo(res.shareTickets[0])\n            }\n        },\n        fail: function (res) {\n            // 转发失败\n            console.log(res)\n        }\n    }\n}\n```\n\n现在就可以进行转发了，在群聊中将会看到此次分享的小程序消息卡片。每个`shareTicket`对应每个群并且单聊不会有该值。这里只选择一个转发，所以直接取第一个。至于`app.getShareInfo`是用来获取群id(`openGId`)的函数，我们放到后面介绍。\n\n### 群成员点消息卡片\n\n当群成员点消息卡片进入小程序后，在`app.js`的`onShow`/`onLaunch`的`options`中可以获取到`shareTicket`，`shareTicket`每次都是不一样的，比分你分享的时候获取到的跟这里获取到的不是同一个，但是会对应同一个`openGId`。\n\n***app.js***:\n\n```js\n// 在onShow中获取转发信息shareTicket\nonShow: function (options) {\n    console.log(options)\n    let scene = options.scene\n\n    // 场景值是1044，带 shareTicket 的小程序消息卡片\n    if(scene == 1044) {\n        let shareTicket = options.shareTicket\n        // 这里的id根据自己的具体需求进行操作，也可以设置其他的\n        let id = options.query.id\n        this.getShareInfo(shareTicket)\n    }\n},\n\n// 获取加密信息encryptedData, iv\ngetShareInfo: function (shareTicket) {\n    const z = this\n    wx.getShareInfo({\n        shareTicket: shareTicket,\n        success: function (res) {\n            console.log(res)\n            let {encryptedData, iv} = res\n\n            if(encryptedData && iv) {\n                z.getDecodeEncryptedData(encryptedData, iv)\n            }\n        },\n        fail: function (res) {\n            console.log(res)\n        }\n    })\n},\n\n// 获取解密后的信息\ngetDecodeEncryptedData: function (encryptedData, iv) {\n    // 发送到后台解析\n    wx.login({\n        success: function(res) {\n            let code = res.code\n\n            // 下面只是演示代码\n            // post({\n            //     url:'https://www.example.com/controller/getDecodeEncryptedData'\n            //     data:{\n            //         code,\n            //         encryptedData,\n            //         iv,\n            //     }\n            // })\n        }\n    })\n},\n```\n\n首先，我们通过[`wx.getShareInfo`](https://mp.weixin.qq.com/debug/wxadoc/dev/api/share.html#wxgetshareinfoobject)获取`encryptedData`和`iv`，然后将其传给后台进行解析。\n\n在`getDecodeEncryptedData`中，当后台解析成功后，就会返回一个`openGId`。\n\n此时就可以将群`openGId`与用户`openid`进行绑定了，这个绑定信息也是要保存到后台的。如果后台没有保存过头像昵称信息，此时也可以将用户头像和昵称一起保存到后台。\n\n类似于下面这样的一个接口:\n```js\n// 下面只是演示代码\npost({\n    url:'https://www.example.com/controller/bindGroupAndUser'\n    data:{\n        code,\n        openGId\n    }\n})\n```\n\n其中的`code`调用[`wx.login`](https://mp.weixin.qq.com/debug/wxadoc/dev/api/api-login.html#wxloginobject)获得，后台根据这个`code`能获取到`openid`。然后进行绑定。\n\n然后根据自己的需求，可能还要一个保存用户基础信息和拉取群成员信息列表的接口。\n\n基本思路就是这样，我将在另一篇文章中描述后端的相关处理。\n\n### 参考\n\n- [小程序开发文档-转发](https://mp.weixin.qq.com/debug/wxadoc/dev/api/share.html)\n- [小程序登录](https://mp.weixin.qq.com/debug/wxadoc/dev/api/api-login.html#wxchecksessionobject)\n- [用户数据的签名验证和加解密](https://mp.weixin.qq.com/debug/wxadoc/dev/api/signature.html)","slug":"2018-03-22-develop-wechat-group-miniprogram-front-end","published":1,"updated":"2018-05-17T16:21:24.399Z","photos":[],"link":"","_id":"cjharmvvq000jmgmc0hhz16sc","content":"<p>我们在一些微信群中看到过这样的小程序分享卡片：当你点进去后，会看到一个列表，里面有其他群成员的头像和相关信息。比如《王者荣耀群排行》，但是段位信息是腾讯私有的接口，我们只能拿到头像和昵称等基础信息。</p>\n<p>下面我将实现小程序端的从转发到用户点击卡片后获取信息的这个过程。</p>\n<p><img src=\"https://upload-images.jianshu.io/upload_images/2158535-341dcae96ac8bf6e.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"openGId\"></p>\n<h3 id=\"开启\"><a href=\"#开启\" class=\"headerlink\" title=\"开启\"></a>开启</h3><p>首先我们要调用<a href=\"https://mp.weixin.qq.com/debug/wxagame/dev/document/share/wx.showShareMenu.html?t=2018321\" target=\"_blank\" rel=\"noopener\"><code>wx.showShareMenu</code></a>进行设置，来开启是否使用带<code>shareTicket</code>的转发，这个<code>shareTicket</code>是开发群功能的关键:</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wx.showShareMenu(&#123;</span><br><span class=\"line\">    withShareTicket: <span class=\"literal\">true</span>,</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n<p>我一般将其放在页面<code>onShow</code>中。</p>\n<h3 id=\"触发转发事件\"><a href=\"#触发转发事件\" class=\"headerlink\" title=\"触发转发事件\"></a>触发转发事件</h3><p>如果要自定义转发按钮而不是有默认右上角的转发按钮，需要在页面中放置一个<code>open-type=&quot;share&quot;</code>的<a href=\"https://mp.weixin.qq.com/debug/wxadoc/dev/component/button.html\" target=\"_blank\" rel=\"noopener\"><code>button</code></a>组件:</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">open-type</span>=<span class=\"string\">\"share\"</span>&gt;</span>share<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>接下来在页面中设置分享函数<a href=\"https://mp.weixin.qq.com/debug/wxagame/dev/document/share/GroupMsgInfo.md?t=2018321\" target=\"_blank\" rel=\"noopener\"><code>onShareAppMessage</code></a>:</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">onShareAppMessage: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">res</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (res.from === <span class=\"string\">'button'</span>) &#123;</span><br><span class=\"line\">        <span class=\"comment\">// 来自页面内转发按钮</span></span><br><span class=\"line\">        <span class=\"built_in\">console</span>.log(res.target)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">        title: <span class=\"string\">'自定义转发标题'</span>,</span><br><span class=\"line\">        path: <span class=\"string\">'/pages/test/test?id=123'</span>,</span><br><span class=\"line\">        success: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">res</span>) </span>&#123;</span><br><span class=\"line\">            <span class=\"comment\">// 转发成功</span></span><br><span class=\"line\">            <span class=\"built_in\">console</span>.log(res)</span><br><span class=\"line\">            <span class=\"comment\">// 只有转发到群聊中打开才可以获取到 shareTickets 返回值，单聊没有 shareTickets</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> (res.shareTickets &amp;&amp; res.shareTickets.length&gt;<span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">                app.getShareInfo(res.shareTickets[<span class=\"number\">0</span>])</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">        fail: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">res</span>) </span>&#123;</span><br><span class=\"line\">            <span class=\"comment\">// 转发失败</span></span><br><span class=\"line\">            <span class=\"built_in\">console</span>.log(res)</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>现在就可以进行转发了，在群聊中将会看到此次分享的小程序消息卡片。每个<code>shareTicket</code>对应每个群并且单聊不会有该值。这里只选择一个转发，所以直接取第一个。至于<code>app.getShareInfo</code>是用来获取群id(<code>openGId</code>)的函数，我们放到后面介绍。</p>\n<h3 id=\"群成员点消息卡片\"><a href=\"#群成员点消息卡片\" class=\"headerlink\" title=\"群成员点消息卡片\"></a>群成员点消息卡片</h3><p>当群成员点消息卡片进入小程序后，在<code>app.js</code>的<code>onShow</code>/<code>onLaunch</code>的<code>options</code>中可以获取到<code>shareTicket</code>，<code>shareTicket</code>每次都是不一样的，比分你分享的时候获取到的跟这里获取到的不是同一个，但是会对应同一个<code>openGId</code>。</p>\n<p><strong><em>app.js</em></strong>:</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 在onShow中获取转发信息shareTicket</span></span><br><span class=\"line\">onShow: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">options</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(options)</span><br><span class=\"line\">    <span class=\"keyword\">let</span> scene = options.scene</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 场景值是1044，带 shareTicket 的小程序消息卡片</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span>(scene == <span class=\"number\">1044</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">let</span> shareTicket = options.shareTicket</span><br><span class=\"line\">        <span class=\"comment\">// 这里的id根据自己的具体需求进行操作，也可以设置其他的</span></span><br><span class=\"line\">        <span class=\"keyword\">let</span> id = options.query.id</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.getShareInfo(shareTicket)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;,</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 获取加密信息encryptedData, iv</span></span><br><span class=\"line\">getShareInfo: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">shareTicket</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> z = <span class=\"keyword\">this</span></span><br><span class=\"line\">    wx.getShareInfo(&#123;</span><br><span class=\"line\">        shareTicket: shareTicket,</span><br><span class=\"line\">        success: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">res</span>) </span>&#123;</span><br><span class=\"line\">            <span class=\"built_in\">console</span>.log(res)</span><br><span class=\"line\">            <span class=\"keyword\">let</span> &#123;encryptedData, iv&#125; = res</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">if</span>(encryptedData &amp;&amp; iv) &#123;</span><br><span class=\"line\">                z.getDecodeEncryptedData(encryptedData, iv)</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">        fail: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">res</span>) </span>&#123;</span><br><span class=\"line\">            <span class=\"built_in\">console</span>.log(res)</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">&#125;,</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 获取解密后的信息</span></span><br><span class=\"line\">getDecodeEncryptedData: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">encryptedData, iv</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">// 发送到后台解析</span></span><br><span class=\"line\">    wx.login(&#123;</span><br><span class=\"line\">        success: <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">res</span>) </span>&#123;</span><br><span class=\"line\">            <span class=\"keyword\">let</span> code = res.code</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"comment\">// 下面只是演示代码</span></span><br><span class=\"line\">            <span class=\"comment\">// post(&#123;</span></span><br><span class=\"line\">            <span class=\"comment\">//     url:'https://www.example.com/controller/getDecodeEncryptedData'</span></span><br><span class=\"line\">            <span class=\"comment\">//     data:&#123;</span></span><br><span class=\"line\">            <span class=\"comment\">//         code,</span></span><br><span class=\"line\">            <span class=\"comment\">//         encryptedData,</span></span><br><span class=\"line\">            <span class=\"comment\">//         iv,</span></span><br><span class=\"line\">            <span class=\"comment\">//     &#125;</span></span><br><span class=\"line\">            <span class=\"comment\">// &#125;)</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">&#125;,</span><br></pre></td></tr></table></figure>\n<p>首先，我们通过<a href=\"https://mp.weixin.qq.com/debug/wxadoc/dev/api/share.html#wxgetshareinfoobject\" target=\"_blank\" rel=\"noopener\"><code>wx.getShareInfo</code></a>获取<code>encryptedData</code>和<code>iv</code>，然后将其传给后台进行解析。</p>\n<p>在<code>getDecodeEncryptedData</code>中，当后台解析成功后，就会返回一个<code>openGId</code>。</p>\n<p>此时就可以将群<code>openGId</code>与用户<code>openid</code>进行绑定了，这个绑定信息也是要保存到后台的。如果后台没有保存过头像昵称信息，此时也可以将用户头像和昵称一起保存到后台。</p>\n<p>类似于下面这样的一个接口:<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 下面只是演示代码</span></span><br><span class=\"line\">post(&#123;</span><br><span class=\"line\">    url:<span class=\"string\">'https://www.example.com/controller/bindGroupAndUser'</span></span><br><span class=\"line\">    data:&#123;</span><br><span class=\"line\">        code,</span><br><span class=\"line\">        openGId</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure></p>\n<p>其中的<code>code</code>调用<a href=\"https://mp.weixin.qq.com/debug/wxadoc/dev/api/api-login.html#wxloginobject\" target=\"_blank\" rel=\"noopener\"><code>wx.login</code></a>获得，后台根据这个<code>code</code>能获取到<code>openid</code>。然后进行绑定。</p>\n<p>然后根据自己的需求，可能还要一个保存用户基础信息和拉取群成员信息列表的接口。</p>\n<p>基本思路就是这样，我将在另一篇文章中描述后端的相关处理。</p>\n<h3 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h3><ul>\n<li><a href=\"https://mp.weixin.qq.com/debug/wxadoc/dev/api/share.html\" target=\"_blank\" rel=\"noopener\">小程序开发文档-转发</a></li>\n<li><a href=\"https://mp.weixin.qq.com/debug/wxadoc/dev/api/api-login.html#wxchecksessionobject\" target=\"_blank\" rel=\"noopener\">小程序登录</a></li>\n<li><a href=\"https://mp.weixin.qq.com/debug/wxadoc/dev/api/signature.html\" target=\"_blank\" rel=\"noopener\">用户数据的签名验证和加解密</a></li>\n</ul>\n","site":{"data":{}},"more":"<p>我们在一些微信群中看到过这样的小程序分享卡片：当你点进去后，会看到一个列表，里面有其他群成员的头像和相关信息。比如《王者荣耀群排行》，但是段位信息是腾讯私有的接口，我们只能拿到头像和昵称等基础信息。</p>\n<p>下面我将实现小程序端的从转发到用户点击卡片后获取信息的这个过程。</p>\n<p><img src=\"https://upload-images.jianshu.io/upload_images/2158535-341dcae96ac8bf6e.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"openGId\"></p>\n<h3 id=\"开启\"><a href=\"#开启\" class=\"headerlink\" title=\"开启\"></a>开启</h3><p>首先我们要调用<a href=\"https://mp.weixin.qq.com/debug/wxagame/dev/document/share/wx.showShareMenu.html?t=2018321\" target=\"_blank\" rel=\"noopener\"><code>wx.showShareMenu</code></a>进行设置，来开启是否使用带<code>shareTicket</code>的转发，这个<code>shareTicket</code>是开发群功能的关键:</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wx.showShareMenu(&#123;</span><br><span class=\"line\">    withShareTicket: <span class=\"literal\">true</span>,</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n<p>我一般将其放在页面<code>onShow</code>中。</p>\n<h3 id=\"触发转发事件\"><a href=\"#触发转发事件\" class=\"headerlink\" title=\"触发转发事件\"></a>触发转发事件</h3><p>如果要自定义转发按钮而不是有默认右上角的转发按钮，需要在页面中放置一个<code>open-type=&quot;share&quot;</code>的<a href=\"https://mp.weixin.qq.com/debug/wxadoc/dev/component/button.html\" target=\"_blank\" rel=\"noopener\"><code>button</code></a>组件:</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">open-type</span>=<span class=\"string\">\"share\"</span>&gt;</span>share<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>接下来在页面中设置分享函数<a href=\"https://mp.weixin.qq.com/debug/wxagame/dev/document/share/GroupMsgInfo.md?t=2018321\" target=\"_blank\" rel=\"noopener\"><code>onShareAppMessage</code></a>:</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">onShareAppMessage: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">res</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (res.from === <span class=\"string\">'button'</span>) &#123;</span><br><span class=\"line\">        <span class=\"comment\">// 来自页面内转发按钮</span></span><br><span class=\"line\">        <span class=\"built_in\">console</span>.log(res.target)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">        title: <span class=\"string\">'自定义转发标题'</span>,</span><br><span class=\"line\">        path: <span class=\"string\">'/pages/test/test?id=123'</span>,</span><br><span class=\"line\">        success: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">res</span>) </span>&#123;</span><br><span class=\"line\">            <span class=\"comment\">// 转发成功</span></span><br><span class=\"line\">            <span class=\"built_in\">console</span>.log(res)</span><br><span class=\"line\">            <span class=\"comment\">// 只有转发到群聊中打开才可以获取到 shareTickets 返回值，单聊没有 shareTickets</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> (res.shareTickets &amp;&amp; res.shareTickets.length&gt;<span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">                app.getShareInfo(res.shareTickets[<span class=\"number\">0</span>])</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">        fail: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">res</span>) </span>&#123;</span><br><span class=\"line\">            <span class=\"comment\">// 转发失败</span></span><br><span class=\"line\">            <span class=\"built_in\">console</span>.log(res)</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>现在就可以进行转发了，在群聊中将会看到此次分享的小程序消息卡片。每个<code>shareTicket</code>对应每个群并且单聊不会有该值。这里只选择一个转发，所以直接取第一个。至于<code>app.getShareInfo</code>是用来获取群id(<code>openGId</code>)的函数，我们放到后面介绍。</p>\n<h3 id=\"群成员点消息卡片\"><a href=\"#群成员点消息卡片\" class=\"headerlink\" title=\"群成员点消息卡片\"></a>群成员点消息卡片</h3><p>当群成员点消息卡片进入小程序后，在<code>app.js</code>的<code>onShow</code>/<code>onLaunch</code>的<code>options</code>中可以获取到<code>shareTicket</code>，<code>shareTicket</code>每次都是不一样的，比分你分享的时候获取到的跟这里获取到的不是同一个，但是会对应同一个<code>openGId</code>。</p>\n<p><strong><em>app.js</em></strong>:</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 在onShow中获取转发信息shareTicket</span></span><br><span class=\"line\">onShow: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">options</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(options)</span><br><span class=\"line\">    <span class=\"keyword\">let</span> scene = options.scene</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 场景值是1044，带 shareTicket 的小程序消息卡片</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span>(scene == <span class=\"number\">1044</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">let</span> shareTicket = options.shareTicket</span><br><span class=\"line\">        <span class=\"comment\">// 这里的id根据自己的具体需求进行操作，也可以设置其他的</span></span><br><span class=\"line\">        <span class=\"keyword\">let</span> id = options.query.id</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.getShareInfo(shareTicket)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;,</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 获取加密信息encryptedData, iv</span></span><br><span class=\"line\">getShareInfo: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">shareTicket</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> z = <span class=\"keyword\">this</span></span><br><span class=\"line\">    wx.getShareInfo(&#123;</span><br><span class=\"line\">        shareTicket: shareTicket,</span><br><span class=\"line\">        success: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">res</span>) </span>&#123;</span><br><span class=\"line\">            <span class=\"built_in\">console</span>.log(res)</span><br><span class=\"line\">            <span class=\"keyword\">let</span> &#123;encryptedData, iv&#125; = res</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">if</span>(encryptedData &amp;&amp; iv) &#123;</span><br><span class=\"line\">                z.getDecodeEncryptedData(encryptedData, iv)</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">        fail: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">res</span>) </span>&#123;</span><br><span class=\"line\">            <span class=\"built_in\">console</span>.log(res)</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">&#125;,</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 获取解密后的信息</span></span><br><span class=\"line\">getDecodeEncryptedData: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">encryptedData, iv</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">// 发送到后台解析</span></span><br><span class=\"line\">    wx.login(&#123;</span><br><span class=\"line\">        success: <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">res</span>) </span>&#123;</span><br><span class=\"line\">            <span class=\"keyword\">let</span> code = res.code</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"comment\">// 下面只是演示代码</span></span><br><span class=\"line\">            <span class=\"comment\">// post(&#123;</span></span><br><span class=\"line\">            <span class=\"comment\">//     url:'https://www.example.com/controller/getDecodeEncryptedData'</span></span><br><span class=\"line\">            <span class=\"comment\">//     data:&#123;</span></span><br><span class=\"line\">            <span class=\"comment\">//         code,</span></span><br><span class=\"line\">            <span class=\"comment\">//         encryptedData,</span></span><br><span class=\"line\">            <span class=\"comment\">//         iv,</span></span><br><span class=\"line\">            <span class=\"comment\">//     &#125;</span></span><br><span class=\"line\">            <span class=\"comment\">// &#125;)</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">&#125;,</span><br></pre></td></tr></table></figure>\n<p>首先，我们通过<a href=\"https://mp.weixin.qq.com/debug/wxadoc/dev/api/share.html#wxgetshareinfoobject\" target=\"_blank\" rel=\"noopener\"><code>wx.getShareInfo</code></a>获取<code>encryptedData</code>和<code>iv</code>，然后将其传给后台进行解析。</p>\n<p>在<code>getDecodeEncryptedData</code>中，当后台解析成功后，就会返回一个<code>openGId</code>。</p>\n<p>此时就可以将群<code>openGId</code>与用户<code>openid</code>进行绑定了，这个绑定信息也是要保存到后台的。如果后台没有保存过头像昵称信息，此时也可以将用户头像和昵称一起保存到后台。</p>\n<p>类似于下面这样的一个接口:<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 下面只是演示代码</span></span><br><span class=\"line\">post(&#123;</span><br><span class=\"line\">    url:<span class=\"string\">'https://www.example.com/controller/bindGroupAndUser'</span></span><br><span class=\"line\">    data:&#123;</span><br><span class=\"line\">        code,</span><br><span class=\"line\">        openGId</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure></p>\n<p>其中的<code>code</code>调用<a href=\"https://mp.weixin.qq.com/debug/wxadoc/dev/api/api-login.html#wxloginobject\" target=\"_blank\" rel=\"noopener\"><code>wx.login</code></a>获得，后台根据这个<code>code</code>能获取到<code>openid</code>。然后进行绑定。</p>\n<p>然后根据自己的需求，可能还要一个保存用户基础信息和拉取群成员信息列表的接口。</p>\n<p>基本思路就是这样，我将在另一篇文章中描述后端的相关处理。</p>\n<h3 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h3><ul>\n<li><a href=\"https://mp.weixin.qq.com/debug/wxadoc/dev/api/share.html\" target=\"_blank\" rel=\"noopener\">小程序开发文档-转发</a></li>\n<li><a href=\"https://mp.weixin.qq.com/debug/wxadoc/dev/api/api-login.html#wxchecksessionobject\" target=\"_blank\" rel=\"noopener\">小程序登录</a></li>\n<li><a href=\"https://mp.weixin.qq.com/debug/wxadoc/dev/api/signature.html\" target=\"_blank\" rel=\"noopener\">用户数据的签名验证和加解密</a></li>\n</ul>\n"},{"layout":"post","title":"小目标","date":"2018-05-05T11:41:10.000Z","comments":1,"_content":"\n- [ ] 每周至少练习一次画画\n- [ ] 阅读","source":"_posts/2018-05-05-small-target-2018.md","raw":"---\nlayout: post\ntitle:  \"小目标\"\ndate: \"2018-05-05 19:41:10\"\n# excerpt: >-\n#     excerpt\ncomments: true\n---\n\n- [ ] 每周至少练习一次画画\n- [ ] 阅读","slug":"2018-05-05-small-target-2018","published":1,"updated":"2018-05-05T11:43:38.676Z","photos":[],"link":"","_id":"cjharmvvu000kmgmcpqeqlv3u","content":"<ul>\n<li style=\"list-style: none\"><input type=\"checkbox\"> 每周至少练习一次画画</li>\n<li style=\"list-style: none\"><input type=\"checkbox\"> 阅读</li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<ul>\n<li style=\"list-style: none\"><input type=\"checkbox\"> 每周至少练习一次画画</li>\n<li style=\"list-style: none\"><input type=\"checkbox\"> 阅读</li>\n</ul>\n"},{"title":"关于寻找解决办法","date":"2018-04-25T09:27:48.000Z","comments":1,"_content":"\n过年回家被家里郊区做家务，发生了下面这件事。\n\n老妈叫我拨蒜，我一个一个慢慢的拨。老妈直接过来用刀全部拍碎，蒜的壳很快就掉了。\n\n这件事让我意识到有时候考虑问题可以直接去想自己做这件事想要达到的结果，比如蒜被拍碎并不会影响味道，最终是要放到菜里的，一个一个拨是非常慢的。有点类似拨\b蛋壳，一个煮熟的蛋先全部拍碎往往更好拨。\n\n比如在工作中，公司做的软件出了bug急需解决，这个时候往往是\b工程师排查问题的所在，但此时需要的结果是解决用户的问题，不能让用户一直等在那里。这个时候可能没办法马上找出问题\b，就需要一个临时方案。\n\n这种思维方式是让你\b不陷入\b事实上并不重要的思考中，浪费\b时间，直接思考自己想要的结果是什么，从而去思考解决办法。\n\n总结：首先考虑目标，然后对这个目标制定计划、思考解决办法、讨论等，最后实行。\n\n![蒜](http://www.socalpain.com/wp-content/uploads/2014/08/GarlicCloves.jpg)","source":"_posts/2018-04-25-the-idea-of-finding-a-solution.md","raw":"---\ntitle: 关于寻找解决办法\ndate: '2018-04-25 17:27:48'\ncomments: true\n---\n\n过年回家被家里郊区做家务，发生了下面这件事。\n\n老妈叫我拨蒜，我一个一个慢慢的拨。老妈直接过来用刀全部拍碎，蒜的壳很快就掉了。\n\n这件事让我意识到有时候考虑问题可以直接去想自己做这件事想要达到的结果，比如蒜被拍碎并不会影响味道，最终是要放到菜里的，一个一个拨是非常慢的。有点类似拨\b蛋壳，一个煮熟的蛋先全部拍碎往往更好拨。\n\n比如在工作中，公司做的软件出了bug急需解决，这个时候往往是\b工程师排查问题的所在，但此时需要的结果是解决用户的问题，不能让用户一直等在那里。这个时候可能没办法马上找出问题\b，就需要一个临时方案。\n\n这种思维方式是让你\b不陷入\b事实上并不重要的思考中，浪费\b时间，直接思考自己想要的结果是什么，从而去思考解决办法。\n\n总结：首先考虑目标，然后对这个目标制定计划、思考解决办法、讨论等，最后实行。\n\n![蒜](http://www.socalpain.com/wp-content/uploads/2014/08/GarlicCloves.jpg)","slug":"2018-04-25-the-idea-of-finding-a-solution","published":1,"updated":"2018-05-17T16:22:08.246Z","layout":"post","photos":[],"link":"","_id":"cjharmvvw000lmgmcw5hzj346","content":"<p>过年回家被家里郊区做家务，发生了下面这件事。</p>\n<p>老妈叫我拨蒜，我一个一个慢慢的拨。老妈直接过来用刀全部拍碎，蒜的壳很快就掉了。</p>\n<p>这件事让我意识到有时候考虑问题可以直接去想自己做这件事想要达到的结果，比如蒜被拍碎并不会影响味道，最终是要放到菜里的，一个一个拨是非常慢的。有点类似拨\b蛋壳，一个煮熟的蛋先全部拍碎往往更好拨。</p>\n<p>比如在工作中，公司做的软件出了bug急需解决，这个时候往往是\b工程师排查问题的所在，但此时需要的结果是解决用户的问题，不能让用户一直等在那里。这个时候可能没办法马上找出问题\b，就需要一个临时方案。</p>\n<p>这种思维方式是让你\b不陷入\b事实上并不重要的思考中，浪费\b时间，直接思考自己想要的结果是什么，从而去思考解决办法。</p>\n<p>总结：首先考虑目标，然后对这个目标制定计划、思考解决办法、讨论等，最后实行。</p>\n<p><img src=\"http://www.socalpain.com/wp-content/uploads/2014/08/GarlicCloves.jpg\" alt=\"蒜\"></p>\n","site":{"data":{}},"excerpt":"","more":"<p>过年回家被家里郊区做家务，发生了下面这件事。</p>\n<p>老妈叫我拨蒜，我一个一个慢慢的拨。老妈直接过来用刀全部拍碎，蒜的壳很快就掉了。</p>\n<p>这件事让我意识到有时候考虑问题可以直接去想自己做这件事想要达到的结果，比如蒜被拍碎并不会影响味道，最终是要放到菜里的，一个一个拨是非常慢的。有点类似拨\b蛋壳，一个煮熟的蛋先全部拍碎往往更好拨。</p>\n<p>比如在工作中，公司做的软件出了bug急需解决，这个时候往往是\b工程师排查问题的所在，但此时需要的结果是解决用户的问题，不能让用户一直等在那里。这个时候可能没办法马上找出问题\b，就需要一个临时方案。</p>\n<p>这种思维方式是让你\b不陷入\b事实上并不重要的思考中，浪费\b时间，直接思考自己想要的结果是什么，从而去思考解决办法。</p>\n<p>总结：首先考虑目标，然后对这个目标制定计划、思考解决办法、讨论等，最后实行。</p>\n<p><img src=\"http://www.socalpain.com/wp-content/uploads/2014/08/GarlicCloves.jpg\" alt=\"蒜\"></p>\n"},{"layout":"post","title":"更改Gihub公开邮箱后发生的ssh错误","date":"2018-05-07T03:42:05.000Z","comments":1,"_content":"\n最近改了Github的Public email，然后在电脑上使用git\b拉取Github的库的时候，发生各种离奇的错误。\n\n一开始查了一下，没找到什么办法，也没去管，就\b没用`git clone ...`，\b就直接在Github上通过zip下载。\n\n今天打算使用Carthage，然后用`carthage update`安装库的时候，又看到ssh相关的报错，就开始重视。因为Carthage里面也用到类似于`git Github仓库地址`的相关命令。\n\n猜测是ssh key出错，可以\b到`$ cd ~/.ssh`查看，发现`id_rsa.pub`文件最后是老的邮箱，怀疑就是这个问题。\n\n想到最近改过Github的公开邮箱（就是Github\b个人主页那个邮箱），就联系到了一起。\n\n根据[Generating a new SSH key and adding it to the ssh-agent](https://help.github.com/articles/generating-a-new-ssh-key-and-adding-it-to-the-ssh-agent/)的方法，重新设置了ssh key，填信息部分除了邮箱那里，其他都是默认的。\n```\n$ ssh-keygen -t rsa -b 4096 -C \"your_email@example.com\"\nEnter a file in which to save the key (/Users/you/.ssh/id_rsa): [Press enter]\nEnter passphrase (empty for no passphrase): [Type a passphrase]\nEnter same passphrase again: [Type passphrase again]\n```\n`passphrase`我也是直接回车没填。\n\n然后再使用相关git命令，就解决了。\n\n大吉大利！\n\n🤪🤪🤪🤪\n\n### 更新\n\n改了之后，`Gitlab`又不行了，出现错误：\n```\ngit@gitlab.com: Permission denied (publickey).\nfatal: Could not read from remote repository.\n\nPlease make sure you have the correct access rights\nand the repository exists.\n```\n\n后来把`id_rsa`添加到`Settings > SSH Keys`，才可以用。\n\n复制命令：`$ pbcopy < ~/.ssh/id_rsa.pub`\n\n或者创建一个新的key：\n```\n$ ssh-keygen -t rsa -b 4096 -C \"your_email@example.com\"\nEnter a file in which to save the key (/Users/you/.ssh/id_rsa): gitlab_id_rsa\nEnter passphrase (empty for no passphrase): [Type a passphrase]\nEnter same passphrase again: [Type passphrase again]\n```\n\n然添加：\n```\n$ ssh-add ~/.ssh/id_rsa\n$ ssh-add ~/.ssh/gitlab_id_rsa\n```\n最后需要建一个配置文件：\n\n```\n$ cd ~/.ssh/\n$ touch config\n```\n\n然后添加：\n```\n#gitlab account\nHost gitlab.com\n\tHostName gitlab.com\n\tUser git\n\tIdentityFile ~/.ssh/gitlab_id_rsa\n\n#github account\nHost github.com\n\tHostName github.com\n\tUser git\n\tIdentityFile ~/.ssh/id_rsa\n```\n\n也要将`gitlab_id_rsa.pub`内容复制到`Settings > SSH Keys`\n\n\n### 参考\n\n- [Generating a new SSH key and adding it to the ssh-agent](https://help.github.com/articles/generating-a-new-ssh-key-and-adding-it-to-the-ssh-agent/)\n- [GitLab and SSH keys](https://docs.gitlab.com/ce/ssh/README.html#working-with-non-default-ssh-key-pair-paths)\n- [Multiple SSH Keys settings for different github account](https://gist.github.com/jexchan/2351996)\n- [Can I have multiple ssh keys in my .ssh folder?](https://superuser.com/questions/287651/can-i-have-multiple-ssh-keys-in-my-ssh-folder)","source":"_posts/2018-05-07-github-ssh-error-after-change-github-account-email.md","raw":"---\nlayout: post\ntitle:  '更改Gihub公开邮箱后发生的ssh错误'\ndate: '2018-05-07 11:42:05'\ncomments: true\n---\n\n最近改了Github的Public email，然后在电脑上使用git\b拉取Github的库的时候，发生各种离奇的错误。\n\n一开始查了一下，没找到什么办法，也没去管，就\b没用`git clone ...`，\b就直接在Github上通过zip下载。\n\n今天打算使用Carthage，然后用`carthage update`安装库的时候，又看到ssh相关的报错，就开始重视。因为Carthage里面也用到类似于`git Github仓库地址`的相关命令。\n\n猜测是ssh key出错，可以\b到`$ cd ~/.ssh`查看，发现`id_rsa.pub`文件最后是老的邮箱，怀疑就是这个问题。\n\n想到最近改过Github的公开邮箱（就是Github\b个人主页那个邮箱），就联系到了一起。\n\n根据[Generating a new SSH key and adding it to the ssh-agent](https://help.github.com/articles/generating-a-new-ssh-key-and-adding-it-to-the-ssh-agent/)的方法，重新设置了ssh key，填信息部分除了邮箱那里，其他都是默认的。\n```\n$ ssh-keygen -t rsa -b 4096 -C \"your_email@example.com\"\nEnter a file in which to save the key (/Users/you/.ssh/id_rsa): [Press enter]\nEnter passphrase (empty for no passphrase): [Type a passphrase]\nEnter same passphrase again: [Type passphrase again]\n```\n`passphrase`我也是直接回车没填。\n\n然后再使用相关git命令，就解决了。\n\n大吉大利！\n\n🤪🤪🤪🤪\n\n### 更新\n\n改了之后，`Gitlab`又不行了，出现错误：\n```\ngit@gitlab.com: Permission denied (publickey).\nfatal: Could not read from remote repository.\n\nPlease make sure you have the correct access rights\nand the repository exists.\n```\n\n后来把`id_rsa`添加到`Settings > SSH Keys`，才可以用。\n\n复制命令：`$ pbcopy < ~/.ssh/id_rsa.pub`\n\n或者创建一个新的key：\n```\n$ ssh-keygen -t rsa -b 4096 -C \"your_email@example.com\"\nEnter a file in which to save the key (/Users/you/.ssh/id_rsa): gitlab_id_rsa\nEnter passphrase (empty for no passphrase): [Type a passphrase]\nEnter same passphrase again: [Type passphrase again]\n```\n\n然添加：\n```\n$ ssh-add ~/.ssh/id_rsa\n$ ssh-add ~/.ssh/gitlab_id_rsa\n```\n最后需要建一个配置文件：\n\n```\n$ cd ~/.ssh/\n$ touch config\n```\n\n然后添加：\n```\n#gitlab account\nHost gitlab.com\n\tHostName gitlab.com\n\tUser git\n\tIdentityFile ~/.ssh/gitlab_id_rsa\n\n#github account\nHost github.com\n\tHostName github.com\n\tUser git\n\tIdentityFile ~/.ssh/id_rsa\n```\n\n也要将`gitlab_id_rsa.pub`内容复制到`Settings > SSH Keys`\n\n\n### 参考\n\n- [Generating a new SSH key and adding it to the ssh-agent](https://help.github.com/articles/generating-a-new-ssh-key-and-adding-it-to-the-ssh-agent/)\n- [GitLab and SSH keys](https://docs.gitlab.com/ce/ssh/README.html#working-with-non-default-ssh-key-pair-paths)\n- [Multiple SSH Keys settings for different github account](https://gist.github.com/jexchan/2351996)\n- [Can I have multiple ssh keys in my .ssh folder?](https://superuser.com/questions/287651/can-i-have-multiple-ssh-keys-in-my-ssh-folder)","slug":"2018-05-07-github-ssh-error-after-change-github-account-email","published":1,"updated":"2018-05-10T03:12:20.822Z","photos":[],"link":"","_id":"cjharmvvx000mmgmcytemhsgn","content":"<p>最近改了Github的Public email，然后在电脑上使用git\b拉取Github的库的时候，发生各种离奇的错误。</p>\n<p>一开始查了一下，没找到什么办法，也没去管，就\b没用<code>git clone ...</code>，\b就直接在Github上通过zip下载。</p>\n<p>今天打算使用Carthage，然后用<code>carthage update</code>安装库的时候，又看到ssh相关的报错，就开始重视。因为Carthage里面也用到类似于<code>git Github仓库地址</code>的相关命令。</p>\n<p>猜测是ssh key出错，可以\b到<code>$ cd ~/.ssh</code>查看，发现<code>id_rsa.pub</code>文件最后是老的邮箱，怀疑就是这个问题。</p>\n<p>想到最近改过Github的公开邮箱（就是Github\b个人主页那个邮箱），就联系到了一起。</p>\n<p>根据<a href=\"https://help.github.com/articles/generating-a-new-ssh-key-and-adding-it-to-the-ssh-agent/\" target=\"_blank\" rel=\"noopener\">Generating a new SSH key and adding it to the ssh-agent</a>的方法，重新设置了ssh key，填信息部分除了邮箱那里，其他都是默认的。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ ssh-keygen -t rsa -b 4096 -C &quot;your_email@example.com&quot;</span><br><span class=\"line\">Enter a file in which to save the key (/Users/you/.ssh/id_rsa): [Press enter]</span><br><span class=\"line\">Enter passphrase (empty for no passphrase): [Type a passphrase]</span><br><span class=\"line\">Enter same passphrase again: [Type passphrase again]</span><br></pre></td></tr></table></figure></p>\n<p><code>passphrase</code>我也是直接回车没填。</p>\n<p>然后再使用相关git命令，就解决了。</p>\n<p>大吉大利！</p>\n<p>🤪🤪🤪🤪</p>\n<h3 id=\"更新\"><a href=\"#更新\" class=\"headerlink\" title=\"更新\"></a>更新</h3><p>改了之后，<code>Gitlab</code>又不行了，出现错误：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git@gitlab.com: Permission denied (publickey).</span><br><span class=\"line\">fatal: Could not read from remote repository.</span><br><span class=\"line\"></span><br><span class=\"line\">Please make sure you have the correct access rights</span><br><span class=\"line\">and the repository exists.</span><br></pre></td></tr></table></figure></p>\n<p>后来把<code>id_rsa</code>添加到<code>Settings &gt; SSH Keys</code>，才可以用。</p>\n<p>复制命令：<code>$ pbcopy &lt; ~/.ssh/id_rsa.pub</code></p>\n<p>或者创建一个新的key：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ ssh-keygen -t rsa -b 4096 -C &quot;your_email@example.com&quot;</span><br><span class=\"line\">Enter a file in which to save the key (/Users/you/.ssh/id_rsa): gitlab_id_rsa</span><br><span class=\"line\">Enter passphrase (empty for no passphrase): [Type a passphrase]</span><br><span class=\"line\">Enter same passphrase again: [Type passphrase again]</span><br></pre></td></tr></table></figure></p>\n<p>然添加：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ ssh-add ~/.ssh/id_rsa</span><br><span class=\"line\">$ ssh-add ~/.ssh/gitlab_id_rsa</span><br></pre></td></tr></table></figure></p>\n<p>最后需要建一个配置文件：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ cd ~/.ssh/</span><br><span class=\"line\">$ touch config</span><br></pre></td></tr></table></figure>\n<p>然后添加：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#gitlab account</span><br><span class=\"line\">Host gitlab.com</span><br><span class=\"line\">\tHostName gitlab.com</span><br><span class=\"line\">\tUser git</span><br><span class=\"line\">\tIdentityFile ~/.ssh/gitlab_id_rsa</span><br><span class=\"line\"></span><br><span class=\"line\">#github account</span><br><span class=\"line\">Host github.com</span><br><span class=\"line\">\tHostName github.com</span><br><span class=\"line\">\tUser git</span><br><span class=\"line\">\tIdentityFile ~/.ssh/id_rsa</span><br></pre></td></tr></table></figure></p>\n<p>也要将<code>gitlab_id_rsa.pub</code>内容复制到<code>Settings &gt; SSH Keys</code></p>\n<h3 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h3><ul>\n<li><a href=\"https://help.github.com/articles/generating-a-new-ssh-key-and-adding-it-to-the-ssh-agent/\" target=\"_blank\" rel=\"noopener\">Generating a new SSH key and adding it to the ssh-agent</a></li>\n<li><a href=\"https://docs.gitlab.com/ce/ssh/README.html#working-with-non-default-ssh-key-pair-paths\" target=\"_blank\" rel=\"noopener\">GitLab and SSH keys</a></li>\n<li><a href=\"https://gist.github.com/jexchan/2351996\" target=\"_blank\" rel=\"noopener\">Multiple SSH Keys settings for different github account</a></li>\n<li><a href=\"https://superuser.com/questions/287651/can-i-have-multiple-ssh-keys-in-my-ssh-folder\" target=\"_blank\" rel=\"noopener\">Can I have multiple ssh keys in my .ssh folder?</a></li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<p>最近改了Github的Public email，然后在电脑上使用git\b拉取Github的库的时候，发生各种离奇的错误。</p>\n<p>一开始查了一下，没找到什么办法，也没去管，就\b没用<code>git clone ...</code>，\b就直接在Github上通过zip下载。</p>\n<p>今天打算使用Carthage，然后用<code>carthage update</code>安装库的时候，又看到ssh相关的报错，就开始重视。因为Carthage里面也用到类似于<code>git Github仓库地址</code>的相关命令。</p>\n<p>猜测是ssh key出错，可以\b到<code>$ cd ~/.ssh</code>查看，发现<code>id_rsa.pub</code>文件最后是老的邮箱，怀疑就是这个问题。</p>\n<p>想到最近改过Github的公开邮箱（就是Github\b个人主页那个邮箱），就联系到了一起。</p>\n<p>根据<a href=\"https://help.github.com/articles/generating-a-new-ssh-key-and-adding-it-to-the-ssh-agent/\" target=\"_blank\" rel=\"noopener\">Generating a new SSH key and adding it to the ssh-agent</a>的方法，重新设置了ssh key，填信息部分除了邮箱那里，其他都是默认的。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ ssh-keygen -t rsa -b 4096 -C &quot;your_email@example.com&quot;</span><br><span class=\"line\">Enter a file in which to save the key (/Users/you/.ssh/id_rsa): [Press enter]</span><br><span class=\"line\">Enter passphrase (empty for no passphrase): [Type a passphrase]</span><br><span class=\"line\">Enter same passphrase again: [Type passphrase again]</span><br></pre></td></tr></table></figure></p>\n<p><code>passphrase</code>我也是直接回车没填。</p>\n<p>然后再使用相关git命令，就解决了。</p>\n<p>大吉大利！</p>\n<p>🤪🤪🤪🤪</p>\n<h3 id=\"更新\"><a href=\"#更新\" class=\"headerlink\" title=\"更新\"></a>更新</h3><p>改了之后，<code>Gitlab</code>又不行了，出现错误：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git@gitlab.com: Permission denied (publickey).</span><br><span class=\"line\">fatal: Could not read from remote repository.</span><br><span class=\"line\"></span><br><span class=\"line\">Please make sure you have the correct access rights</span><br><span class=\"line\">and the repository exists.</span><br></pre></td></tr></table></figure></p>\n<p>后来把<code>id_rsa</code>添加到<code>Settings &gt; SSH Keys</code>，才可以用。</p>\n<p>复制命令：<code>$ pbcopy &lt; ~/.ssh/id_rsa.pub</code></p>\n<p>或者创建一个新的key：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ ssh-keygen -t rsa -b 4096 -C &quot;your_email@example.com&quot;</span><br><span class=\"line\">Enter a file in which to save the key (/Users/you/.ssh/id_rsa): gitlab_id_rsa</span><br><span class=\"line\">Enter passphrase (empty for no passphrase): [Type a passphrase]</span><br><span class=\"line\">Enter same passphrase again: [Type passphrase again]</span><br></pre></td></tr></table></figure></p>\n<p>然添加：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ ssh-add ~/.ssh/id_rsa</span><br><span class=\"line\">$ ssh-add ~/.ssh/gitlab_id_rsa</span><br></pre></td></tr></table></figure></p>\n<p>最后需要建一个配置文件：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ cd ~/.ssh/</span><br><span class=\"line\">$ touch config</span><br></pre></td></tr></table></figure>\n<p>然后添加：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#gitlab account</span><br><span class=\"line\">Host gitlab.com</span><br><span class=\"line\">\tHostName gitlab.com</span><br><span class=\"line\">\tUser git</span><br><span class=\"line\">\tIdentityFile ~/.ssh/gitlab_id_rsa</span><br><span class=\"line\"></span><br><span class=\"line\">#github account</span><br><span class=\"line\">Host github.com</span><br><span class=\"line\">\tHostName github.com</span><br><span class=\"line\">\tUser git</span><br><span class=\"line\">\tIdentityFile ~/.ssh/id_rsa</span><br></pre></td></tr></table></figure></p>\n<p>也要将<code>gitlab_id_rsa.pub</code>内容复制到<code>Settings &gt; SSH Keys</code></p>\n<h3 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h3><ul>\n<li><a href=\"https://help.github.com/articles/generating-a-new-ssh-key-and-adding-it-to-the-ssh-agent/\" target=\"_blank\" rel=\"noopener\">Generating a new SSH key and adding it to the ssh-agent</a></li>\n<li><a href=\"https://docs.gitlab.com/ce/ssh/README.html#working-with-non-default-ssh-key-pair-paths\" target=\"_blank\" rel=\"noopener\">GitLab and SSH keys</a></li>\n<li><a href=\"https://gist.github.com/jexchan/2351996\" target=\"_blank\" rel=\"noopener\">Multiple SSH Keys settings for different github account</a></li>\n<li><a href=\"https://superuser.com/questions/287651/can-i-have-multiple-ssh-keys-in-my-ssh-folder\" target=\"_blank\" rel=\"noopener\">Can I have multiple ssh keys in my .ssh folder?</a></li>\n</ul>\n"},{"layout":"post","title":"第一次使用Carthage记录","date":"2018-05-07T06:30:41.000Z","comments":1,"_content":"\n### 准备\n\n`$ brew update`\n\n> update [--merge] [--force]: 使用git从GitHub获取最新版本的Homebrew和所有formula，并执行任何必要的迁移。\n\n`$ brew install carthage`\n\n> install formula: 安装 formula\n\n很慢，后来用科学上网后快很多。\n\n`$ carthage version`\n\n> \b装好后查看版本\n\n### 添加库\n\n在你的\b项目根目录下创建一个名为`Cartfile`的文件，并添加要用的第三方库，比如使用`Alamofire`:\n\n***project/Cartfile:***\n```\ngithub \"Alamofire/Alamofire\" ~> 4.7\n```\n\n`$ carthage update`\n\n> 获取（fetch）并构建（build）您列出的每个框架。\n\n执行命令后，***Carthage*** 会拉取库文件进行编译，会在 ***project/Carthage/Build*** 目录下生成不同平台的`Alamofire.framework`文件。\n\n***Carthage*** 不像 ***Cocoapods*** 会自动帮你做好\b连接配置，需要手动添加，因为一个一个将`*.framework`文件添加到 ***Build Phases>Link Binary With Libaries*** 里很麻烦，\n\n![Link Binary With Libaries](/blog/assets/images/use-carthage-for-the-first-time/0.png)\n\n所以这里推荐把\b相应库目录添加到 ***Build Settings>Framework Search Paths*** 里，比如我使用的是*iOS*版，那么添加一个：\n\n```\n$(PROJECT_DIR)/Carthage/Build/iOS\n```\n\n![Framework Search Paths](/blog/assets/images/use-carthage-for-the-first-time/1.png)\n\n![(PROJECT_DIR)/Carthage/Build/iOS](/blog/assets/images/use-carthage-for-the-first-time/2.png)\n\n上面设置是看别人博客\b\b进行配置的，但是一运行，就会报错：\n\n```\ndyld: Library not loaded: @rpath/Alamofire.framework/Alamofire\n  Referenced from: /var/containers/Bundle/Application/xxx/SwiftDemo.app/SwiftDemo\n  Reason: image not found\n```\n\n后来查找了这个错误，\b\b\b发现添加库到 ***Framework Search Paths*** 里只是让`import`的时候不报错，但要保证运行的时候不报上面那个错还需要一步。\n\n将 `Alamofire.framework` 添加到 ***General>Embedded binaries***\n\n![Embedded binaries](/blog/assets/images/use-carthage-for-the-first-time/3.png)\n\n最后就可以用官方例子试用一下了：\n\n```swift\nAlamofire.request(\"https://httpbin.org/get\").responseJSON { response in\n    print(\"Request: \\(String(describing: response.request))\")   // original url request\n    print(\"Response: \\(String(describing: response.response))\") // http url response\n    print(\"Result: \\(response.result)\")                         // response serialization result\n\n    if let json = response.result.value {\n        print(\"JSON: \\(json)\") // serialized json response\n    }\n\n    if let data = response.data, let utf8Text = String(data: data, encoding: .utf8) {\n        print(\"Data: \\(utf8Text)\") // original server data as UTF8 string\n    }\n}\n```\n\n### References\n\n- [Carthage/Carthage](https://github.com/Carthage/Carthage)\n- [走向Carthage](https://www.jianshu.com/p/3921289cd3c5)\n- [Homebrew](https://docs.brew.sh/Manpage)\n- [dyld: Library not loaded: @rpath/Alamofire.framework/Alamofire on my iPhone(iOS8) while debuging #101](https://github.com/Alamofire/Alamofire/issues/101)\n- [iOS app with framework crashed on device, dyld: Library not loaded, Xcode 6 Beta](https://stackoverflow.com/a/24345546/6279975)","source":"_posts/2018-05-07-use-carthage-for-the-first-time.md","raw":"---\nlayout: post\ntitle:  '第一次使用Carthage记录'\ndate: '2018-05-07 14:30:41'\ncomments: true\n---\n\n### 准备\n\n`$ brew update`\n\n> update [--merge] [--force]: 使用git从GitHub获取最新版本的Homebrew和所有formula，并执行任何必要的迁移。\n\n`$ brew install carthage`\n\n> install formula: 安装 formula\n\n很慢，后来用科学上网后快很多。\n\n`$ carthage version`\n\n> \b装好后查看版本\n\n### 添加库\n\n在你的\b项目根目录下创建一个名为`Cartfile`的文件，并添加要用的第三方库，比如使用`Alamofire`:\n\n***project/Cartfile:***\n```\ngithub \"Alamofire/Alamofire\" ~> 4.7\n```\n\n`$ carthage update`\n\n> 获取（fetch）并构建（build）您列出的每个框架。\n\n执行命令后，***Carthage*** 会拉取库文件进行编译，会在 ***project/Carthage/Build*** 目录下生成不同平台的`Alamofire.framework`文件。\n\n***Carthage*** 不像 ***Cocoapods*** 会自动帮你做好\b连接配置，需要手动添加，因为一个一个将`*.framework`文件添加到 ***Build Phases>Link Binary With Libaries*** 里很麻烦，\n\n![Link Binary With Libaries](/blog/assets/images/use-carthage-for-the-first-time/0.png)\n\n所以这里推荐把\b相应库目录添加到 ***Build Settings>Framework Search Paths*** 里，比如我使用的是*iOS*版，那么添加一个：\n\n```\n$(PROJECT_DIR)/Carthage/Build/iOS\n```\n\n![Framework Search Paths](/blog/assets/images/use-carthage-for-the-first-time/1.png)\n\n![(PROJECT_DIR)/Carthage/Build/iOS](/blog/assets/images/use-carthage-for-the-first-time/2.png)\n\n上面设置是看别人博客\b\b进行配置的，但是一运行，就会报错：\n\n```\ndyld: Library not loaded: @rpath/Alamofire.framework/Alamofire\n  Referenced from: /var/containers/Bundle/Application/xxx/SwiftDemo.app/SwiftDemo\n  Reason: image not found\n```\n\n后来查找了这个错误，\b\b\b发现添加库到 ***Framework Search Paths*** 里只是让`import`的时候不报错，但要保证运行的时候不报上面那个错还需要一步。\n\n将 `Alamofire.framework` 添加到 ***General>Embedded binaries***\n\n![Embedded binaries](/blog/assets/images/use-carthage-for-the-first-time/3.png)\n\n最后就可以用官方例子试用一下了：\n\n```swift\nAlamofire.request(\"https://httpbin.org/get\").responseJSON { response in\n    print(\"Request: \\(String(describing: response.request))\")   // original url request\n    print(\"Response: \\(String(describing: response.response))\") // http url response\n    print(\"Result: \\(response.result)\")                         // response serialization result\n\n    if let json = response.result.value {\n        print(\"JSON: \\(json)\") // serialized json response\n    }\n\n    if let data = response.data, let utf8Text = String(data: data, encoding: .utf8) {\n        print(\"Data: \\(utf8Text)\") // original server data as UTF8 string\n    }\n}\n```\n\n### References\n\n- [Carthage/Carthage](https://github.com/Carthage/Carthage)\n- [走向Carthage](https://www.jianshu.com/p/3921289cd3c5)\n- [Homebrew](https://docs.brew.sh/Manpage)\n- [dyld: Library not loaded: @rpath/Alamofire.framework/Alamofire on my iPhone(iOS8) while debuging #101](https://github.com/Alamofire/Alamofire/issues/101)\n- [iOS app with framework crashed on device, dyld: Library not loaded, Xcode 6 Beta](https://stackoverflow.com/a/24345546/6279975)","slug":"2018-05-07-use-carthage-for-the-first-time","published":1,"updated":"2018-05-17T16:29:37.533Z","photos":[],"link":"","_id":"cjharmvvz000nmgmc2si39fwu","content":"<h3 id=\"准备\"><a href=\"#准备\" class=\"headerlink\" title=\"准备\"></a>准备</h3><p><code>$ brew update</code></p>\n<blockquote>\n<p>update [–merge] [–force]: 使用git从GitHub获取最新版本的Homebrew和所有formula，并执行任何必要的迁移。</p>\n</blockquote>\n<p><code>$ brew install carthage</code></p>\n<blockquote>\n<p>install formula: 安装 formula</p>\n</blockquote>\n<p>很慢，后来用科学上网后快很多。</p>\n<p><code>$ carthage version</code></p>\n<blockquote>\n<p>\b装好后查看版本</p>\n</blockquote>\n<h3 id=\"添加库\"><a href=\"#添加库\" class=\"headerlink\" title=\"添加库\"></a>添加库</h3><p>在你的\b项目根目录下创建一个名为<code>Cartfile</code>的文件，并添加要用的第三方库，比如使用<code>Alamofire</code>:</p>\n<p><strong><em>project/Cartfile:</em></strong><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">github &quot;Alamofire/Alamofire&quot; ~&gt; 4.7</span><br></pre></td></tr></table></figure></p>\n<p><code>$ carthage update</code></p>\n<blockquote>\n<p>获取（fetch）并构建（build）您列出的每个框架。</p>\n</blockquote>\n<p>执行命令后，<strong><em>Carthage</em></strong> 会拉取库文件进行编译，会在 <strong><em>project/Carthage/Build</em></strong> 目录下生成不同平台的<code>Alamofire.framework</code>文件。</p>\n<p><strong><em>Carthage</em></strong> 不像 <strong><em>Cocoapods</em></strong> 会自动帮你做好\b连接配置，需要手动添加，因为一个一个将<code>*.framework</code>文件添加到 <strong><em>Build Phases&gt;Link Binary With Libaries</em></strong> 里很麻烦，</p>\n<p><img src=\"/blog/assets/images/use-carthage-for-the-first-time/0.png\" alt=\"Link Binary With Libaries\"></p>\n<p>所以这里推荐把\b相应库目录添加到 <strong><em>Build Settings&gt;Framework Search Paths</em></strong> 里，比如我使用的是<em>iOS</em>版，那么添加一个：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$(PROJECT_DIR)/Carthage/Build/iOS</span><br></pre></td></tr></table></figure>\n<p><img src=\"/blog/assets/images/use-carthage-for-the-first-time/1.png\" alt=\"Framework Search Paths\"></p>\n<p><img src=\"/blog/assets/images/use-carthage-for-the-first-time/2.png\" alt=\"(PROJECT_DIR)/Carthage/Build/iOS\"></p>\n<p>上面设置是看别人博客\b\b进行配置的，但是一运行，就会报错：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">dyld: Library not loaded: @rpath/Alamofire.framework/Alamofire</span><br><span class=\"line\">  Referenced from: /var/containers/Bundle/Application/xxx/SwiftDemo.app/SwiftDemo</span><br><span class=\"line\">  Reason: image not found</span><br></pre></td></tr></table></figure>\n<p>后来查找了这个错误，\b\b\b发现添加库到 <strong><em>Framework Search Paths</em></strong> 里只是让<code>import</code>的时候不报错，但要保证运行的时候不报上面那个错还需要一步。</p>\n<p>将 <code>Alamofire.framework</code> 添加到 <strong><em>General&gt;Embedded binaries</em></strong></p>\n<p><img src=\"/blog/assets/images/use-carthage-for-the-first-time/3.png\" alt=\"Embedded binaries\"></p>\n<p>最后就可以用官方例子试用一下了：</p>\n<figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">Alamofire</span>.request(<span class=\"string\">\"https://httpbin.org/get\"</span>).responseJSON &#123; response <span class=\"keyword\">in</span></span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">\"Request: \\(String(describing: response.request))\"</span>)   <span class=\"comment\">// original url request</span></span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">\"Response: \\(String(describing: response.response))\"</span>) <span class=\"comment\">// http url response</span></span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">\"Result: \\(response.result)\"</span>)                         <span class=\"comment\">// response serialization result</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> <span class=\"keyword\">let</span> json = response.result.value &#123;</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">\"JSON: \\(json)\"</span>) <span class=\"comment\">// serialized json response</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> <span class=\"keyword\">let</span> data = response.data, <span class=\"keyword\">let</span> utf8Text = <span class=\"type\">String</span>(data: data, encoding: .utf8) &#123;</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">\"Data: \\(utf8Text)\"</span>) <span class=\"comment\">// original server data as UTF8 string</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"References\"><a href=\"#References\" class=\"headerlink\" title=\"References\"></a>References</h3><ul>\n<li><a href=\"https://github.com/Carthage/Carthage\" target=\"_blank\" rel=\"noopener\">Carthage/Carthage</a></li>\n<li><a href=\"https://www.jianshu.com/p/3921289cd3c5\" target=\"_blank\" rel=\"noopener\">走向Carthage</a></li>\n<li><a href=\"https://docs.brew.sh/Manpage\" target=\"_blank\" rel=\"noopener\">Homebrew</a></li>\n<li><a href=\"https://github.com/Alamofire/Alamofire/issues/101\" target=\"_blank\" rel=\"noopener\">dyld: Library not loaded: @rpath/Alamofire.framework/Alamofire on my iPhone(iOS8) while debuging #101</a></li>\n<li><a href=\"https://stackoverflow.com/a/24345546/6279975\" target=\"_blank\" rel=\"noopener\">iOS app with framework crashed on device, dyld: Library not loaded, Xcode 6 Beta</a></li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h3 id=\"准备\"><a href=\"#准备\" class=\"headerlink\" title=\"准备\"></a>准备</h3><p><code>$ brew update</code></p>\n<blockquote>\n<p>update [–merge] [–force]: 使用git从GitHub获取最新版本的Homebrew和所有formula，并执行任何必要的迁移。</p>\n</blockquote>\n<p><code>$ brew install carthage</code></p>\n<blockquote>\n<p>install formula: 安装 formula</p>\n</blockquote>\n<p>很慢，后来用科学上网后快很多。</p>\n<p><code>$ carthage version</code></p>\n<blockquote>\n<p>\b装好后查看版本</p>\n</blockquote>\n<h3 id=\"添加库\"><a href=\"#添加库\" class=\"headerlink\" title=\"添加库\"></a>添加库</h3><p>在你的\b项目根目录下创建一个名为<code>Cartfile</code>的文件，并添加要用的第三方库，比如使用<code>Alamofire</code>:</p>\n<p><strong><em>project/Cartfile:</em></strong><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">github &quot;Alamofire/Alamofire&quot; ~&gt; 4.7</span><br></pre></td></tr></table></figure></p>\n<p><code>$ carthage update</code></p>\n<blockquote>\n<p>获取（fetch）并构建（build）您列出的每个框架。</p>\n</blockquote>\n<p>执行命令后，<strong><em>Carthage</em></strong> 会拉取库文件进行编译，会在 <strong><em>project/Carthage/Build</em></strong> 目录下生成不同平台的<code>Alamofire.framework</code>文件。</p>\n<p><strong><em>Carthage</em></strong> 不像 <strong><em>Cocoapods</em></strong> 会自动帮你做好\b连接配置，需要手动添加，因为一个一个将<code>*.framework</code>文件添加到 <strong><em>Build Phases&gt;Link Binary With Libaries</em></strong> 里很麻烦，</p>\n<p><img src=\"/blog/assets/images/use-carthage-for-the-first-time/0.png\" alt=\"Link Binary With Libaries\"></p>\n<p>所以这里推荐把\b相应库目录添加到 <strong><em>Build Settings&gt;Framework Search Paths</em></strong> 里，比如我使用的是<em>iOS</em>版，那么添加一个：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$(PROJECT_DIR)/Carthage/Build/iOS</span><br></pre></td></tr></table></figure>\n<p><img src=\"/blog/assets/images/use-carthage-for-the-first-time/1.png\" alt=\"Framework Search Paths\"></p>\n<p><img src=\"/blog/assets/images/use-carthage-for-the-first-time/2.png\" alt=\"(PROJECT_DIR)/Carthage/Build/iOS\"></p>\n<p>上面设置是看别人博客\b\b进行配置的，但是一运行，就会报错：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">dyld: Library not loaded: @rpath/Alamofire.framework/Alamofire</span><br><span class=\"line\">  Referenced from: /var/containers/Bundle/Application/xxx/SwiftDemo.app/SwiftDemo</span><br><span class=\"line\">  Reason: image not found</span><br></pre></td></tr></table></figure>\n<p>后来查找了这个错误，\b\b\b发现添加库到 <strong><em>Framework Search Paths</em></strong> 里只是让<code>import</code>的时候不报错，但要保证运行的时候不报上面那个错还需要一步。</p>\n<p>将 <code>Alamofire.framework</code> 添加到 <strong><em>General&gt;Embedded binaries</em></strong></p>\n<p><img src=\"/blog/assets/images/use-carthage-for-the-first-time/3.png\" alt=\"Embedded binaries\"></p>\n<p>最后就可以用官方例子试用一下了：</p>\n<figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">Alamofire</span>.request(<span class=\"string\">\"https://httpbin.org/get\"</span>).responseJSON &#123; response <span class=\"keyword\">in</span></span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">\"Request: \\(String(describing: response.request))\"</span>)   <span class=\"comment\">// original url request</span></span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">\"Response: \\(String(describing: response.response))\"</span>) <span class=\"comment\">// http url response</span></span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">\"Result: \\(response.result)\"</span>)                         <span class=\"comment\">// response serialization result</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> <span class=\"keyword\">let</span> json = response.result.value &#123;</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">\"JSON: \\(json)\"</span>) <span class=\"comment\">// serialized json response</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> <span class=\"keyword\">let</span> data = response.data, <span class=\"keyword\">let</span> utf8Text = <span class=\"type\">String</span>(data: data, encoding: .utf8) &#123;</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">\"Data: \\(utf8Text)\"</span>) <span class=\"comment\">// original server data as UTF8 string</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"References\"><a href=\"#References\" class=\"headerlink\" title=\"References\"></a>References</h3><ul>\n<li><a href=\"https://github.com/Carthage/Carthage\" target=\"_blank\" rel=\"noopener\">Carthage/Carthage</a></li>\n<li><a href=\"https://www.jianshu.com/p/3921289cd3c5\" target=\"_blank\" rel=\"noopener\">走向Carthage</a></li>\n<li><a href=\"https://docs.brew.sh/Manpage\" target=\"_blank\" rel=\"noopener\">Homebrew</a></li>\n<li><a href=\"https://github.com/Alamofire/Alamofire/issues/101\" target=\"_blank\" rel=\"noopener\">dyld: Library not loaded: @rpath/Alamofire.framework/Alamofire on my iPhone(iOS8) while debuging #101</a></li>\n<li><a href=\"https://stackoverflow.com/a/24345546/6279975\" target=\"_blank\" rel=\"noopener\">iOS app with framework crashed on device, dyld: Library not loaded, Xcode 6 Beta</a></li>\n</ul>\n"}],"PostAsset":[],"PostCategory":[],"PostTag":[],"Tag":[]}}